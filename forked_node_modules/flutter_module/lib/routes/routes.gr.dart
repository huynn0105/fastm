// GENERATED CODE - DO NOT MODIFY BY HAND

// **************************************************************************
// AutoRouterGenerator
// **************************************************************************

// ignore_for_file: type=lint
// coverage:ignore-file

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:auto_route/auto_route.dart' as _i157;
import 'package:flutter/cupertino.dart' as _i160;
import 'package:flutter/foundation.dart' as _i161;
import 'package:flutter/material.dart' as _i158;
import 'package:flutter_module/common/bloc_status.dart' as _i183;
import 'package:flutter_module/common/bottom_sheet/wrapper/data_wrapper.dart'
    as _i185;
import 'package:flutter_module/common/enum/client/client_tab_type.dart'
    as _i167;
import 'package:flutter_module/common/enum/collaborator/collaborator_status.dart'
    as _i168;
import 'package:flutter_module/common/enum/income/history_income_type.dart'
    as _i189;
import 'package:flutter_module/common/enum/mfast/notification_category.dart'
    as _i171;
import 'package:flutter_module/common/enum/mtrade/brochure_type.dart' as _i184;
import 'package:flutter_module/common/enum/mtrade/payment_type.dart' as _i179;
import 'package:flutter_module/common/enum/mtrade/product_detail_type.dart'
    as _i177;
import 'package:flutter_module/common/widgets/chart/donut_chart/donut_chart_controller.dart'
    as _i188;
import 'package:flutter_module/features/academy/page/academy/academy_page.dart'
    deferred as _i5;
import 'package:flutter_module/features/academy/page/academy/children/academy_registered_event_page.dart'
    deferred as _i8;
import 'package:flutter_module/features/academy/page/academy/children/bottom_sheet_registered_event_page.dart'
    deferred as _i21;
import 'package:flutter_module/features/academy/page/academy_event_detail/academy_event_detail_page.dart'
    deferred as _i4;
import 'package:flutter_module/features/academy/page/quiz/academy_quiz_page.dart'
    deferred as _i6;
import 'package:flutter_module/features/academy/page/register_event/academy_checkin_event_page.dart'
    deferred as _i2;
import 'package:flutter_module/features/academy/page/register_event/academy_checkout_event_page.dart'
    deferred as _i3;
import 'package:flutter_module/features/academy/page/register_event/academy_register_event_page.dart'
    deferred as _i7;
import 'package:flutter_module/features/academy/page/register_event_result/register_event_result_page.dart'
    deferred as _i118;
import 'package:flutter_module/features/account/pages/add_bank_account/add_bank_account_page.dart'
    deferred as _i15;
import 'package:flutter_module/features/account/pages/add_bidv_bank_account/add_bidv_bank_account_page.dart'
    deferred as _i14;
import 'package:flutter_module/features/account/pages/bank_account/bank_account_page.dart'
    deferred as _i18;
import 'package:flutter_module/features/account/pages/bank_account/children/bank_account_tab/bank_account_tab_page.dart'
    deferred as _i19;
import 'package:flutter_module/features/account/pages/bank_account/children/tax_tab/tax_tab_page.dart'
    deferred as _i140;
import 'package:flutter_module/features/account/pages/bank_account_detail/bank_account_detail_page.dart'
    deferred as _i17;
import 'package:flutter_module/features/account/pages/income/children/history/history_income_page.dart'
    deferred as _i56;
import 'package:flutter_module/features/account/pages/income/children/otp/withdraw_income_otp_page.dart'
    deferred as _i155;
import 'package:flutter_module/features/account/pages/income/children/statistic/statistic_income_page.dart'
    deferred as _i137;
import 'package:flutter_module/features/account/pages/income/children/withdraw/withdraw_income_page.dart'
    deferred as _i156;
import 'package:flutter_module/features/account/pages/income/income_page.dart'
    deferred as _i59;
import 'package:flutter_module/features/account/pages/register_tax/register_tax_page.dart'
    deferred as _i121;
import 'package:flutter_module/features/account/pages/update_basic_user_info/children/update_email_success_page.dart'
    deferred as _i149;
import 'package:flutter_module/features/account/pages/update_basic_user_info/update_basic_user_info_page.dart'
    deferred as _i148;
import 'package:flutter_module/features/account/pages/update_basic_user_info_otp/update_basic_user_info_otp_page.dart'
    deferred as _i147;
import 'package:flutter_module/features/account/pages/user_info/user_info_page.dart'
    deferred as _i150;
import 'package:flutter_module/features/authentication/login/page/login_page.dart'
    deferred as _i67;
import 'package:flutter_module/features/authentication/otp/page/otp_page.dart'
    deferred as _i108;
import 'package:flutter_module/features/authentication/register_name/page/register_name_page.dart'
    deferred as _i120;
import 'package:flutter_module/features/chat/page/add_contact/chat_add_contact_page.dart'
    deferred as _i22;
import 'package:flutter_module/features/chat/page/add_member_thread/chat_add_member_thread_page.dart'
    deferred as _i23;
import 'package:flutter_module/features/chat/page/block_users/block_users_page.dart'
    deferred as _i20;
import 'package:flutter_module/features/chat/page/chat/chat_page.dart'
    deferred as _i35;
import 'package:flutter_module/features/chat/page/chat/children/contacts/chat_contacts_page.dart'
    deferred as _i28;
import 'package:flutter_module/features/chat/page/chat/children/support_request/chat_support_request_page.dart'
    deferred as _i24;
import 'package:flutter_module/features/chat/page/chat/children/support_request/children/support_request_list/support_request_list_page.dart'
    deferred as _i40;
import 'package:flutter_module/features/chat/page/chat/children/support_request/children/support_request_list/wrapper/all_chat_support_request_list_page.dart'
    deferred as _i16;
import 'package:flutter_module/features/chat/page/chat/children/support_request/children/support_request_list/wrapper/closed_chat_support_request_list_page.dart'
    deferred as _i47;
import 'package:flutter_module/features/chat/page/chat/children/support_request/children/support_request_list/wrapper/pending_chat_support_request_list_page.dart'
    deferred as _i111;
import 'package:flutter_module/features/chat/page/chat/children/support_request/children/support_request_list/wrapper/responded_chat_support_request_list_page.dart'
    deferred as _i122;
import 'package:flutter_module/features/chat/page/chat/children/thread/chat_thread_page.dart'
    deferred as _i42;
import 'package:flutter_module/features/chat/page/chat_setting/chat_setting_page.dart'
    deferred as _i39;
import 'package:flutter_module/features/chat/page/chat_support_ticket/chat_support_ticket_page.dart'
    deferred as _i41;
import 'package:flutter_module/features/chat/page/contact_request/chat_contact_request_page.dart'
    deferred as _i25;
import 'package:flutter_module/features/chat/page/contact_request/children/contact_request_received/chat_contact_request_received_page.dart'
    deferred as _i26;
import 'package:flutter_module/features/chat/page/contact_request/children/contact_request_sent/chat_contact_request_sent_page.dart'
    deferred as _i27;
import 'package:flutter_module/features/chat/page/create_thread_group/create_thread_group_page.dart'
    deferred as _i52;
import 'package:flutter_module/features/chat/page/forward_message/chat_forward_message_page.dart'
    deferred as _i29;
import 'package:flutter_module/features/chat/page/general_media/chat_general_media_page.dart'
    deferred as _i32;
import 'package:flutter_module/features/chat/page/general_media/children/general_image/chat_general_image_page.dart'
    deferred as _i30;
import 'package:flutter_module/features/chat/page/general_media/children/general_link/chat_general_link_page.dart'
    deferred as _i31;
import 'package:flutter_module/features/chat/page/general_media/children/general_video/chat_general_video_page.dart'
    deferred as _i33;
import 'package:flutter_module/features/chat/page/member_thread/chat_member_thread_page.dart'
    deferred as _i34;
import 'package:flutter_module/features/chat/page/preview_image/chat_preview_image_page.dart'
    deferred as _i36;
import 'package:flutter_module/features/chat/page/preview_video/chat_preview_video_page.dart'
    deferred as _i37;
import 'package:flutter_module/features/chat/page/search_contact/chat_search_contact_page.dart'
    deferred as _i38;
import 'package:flutter_module/features/chat/page/thread_messages/thread_messages_page.dart'
    deferred as _i141;
import 'package:flutter_module/features/client/pages/ad_link/ad_link_page.dart'
    deferred as _i12;
import 'package:flutter_module/features/client/pages/ad_link/children/ad_link_list_page.dart'
    deferred as _i11;
import 'package:flutter_module/features/client/pages/ad_link/children/ad_link_statistic_page.dart'
    deferred as _i13;
import 'package:flutter_module/features/client/pages/client/children/client_list/client_list_page.dart'
    deferred as _i44;
import 'package:flutter_module/features/client/pages/client/children/client_statistic/client_statistic_page.dart'
    deferred as _i46;
import 'package:flutter_module/features/client/pages/client/client_page.dart'
    deferred as _i45;
import 'package:flutter_module/features/client/pages/client_detail_middle_page/client_detail_middle_page.dart'
    deferred as _i43;
import 'package:flutter_module/features/home/pages/home/home_page.dart'
    deferred as _i57;
import 'package:flutter_module/features/home/pages/search/home_search_page.dart'
    deferred as _i58;
import 'package:flutter_module/features/legendary/pages/collaborator_need_to_care/collaborator_need_to_care_page.dart'
    deferred as _i48;
import 'package:flutter_module/features/legendary/pages/collaborator_pending/collaborator_pending_page.dart'
    deferred as _i50;
import 'package:flutter_module/features/legendary/pages/collaborator_pending_confirm/collaborator_pending_confirm_page.dart'
    deferred as _i49;
import 'package:flutter_module/features/legendary/pages/legendary/children/collaborator/legendary_collaborator_page.dart'
    deferred as _i61;
import 'package:flutter_module/features/legendary/pages/legendary/children/community/legendary_community_page.dart'
    deferred as _i62;
import 'package:flutter_module/features/legendary/pages/legendary/children/overview/legendary_overview_page.dart'
    deferred as _i64;
import 'package:flutter_module/features/legendary/pages/legendary/legendary_hier_collaborator_page.dart'
    deferred as _i63;
import 'package:flutter_module/features/legendary/pages/legendary/legendary_page.dart'
    deferred as _i65;
import 'package:flutter_module/features/legendary/pages/new_supporter/new_supporter_page.dart'
    deferred as _i104;
import 'package:flutter_module/features/legendary/pages/rsm_push/children/rsm_push_history_page.dart'
    deferred as _i115;
import 'package:flutter_module/features/legendary/pages/rsm_push/children/rsm_push_user_page.dart'
    deferred as _i117;
import 'package:flutter_module/features/legendary/pages/rsm_push/rsm_push_page.dart'
    deferred as _i116;
import 'package:flutter_module/features/main_view/pages/main_tabbar/main_tabbar_page.dart'
    deferred as _i103;
import 'package:flutter_module/features/mfast/cubit/time_checking_report/time_checking_report_cubit.dart'
    as _i190;
import 'package:flutter_module/features/mfast/page/account_identification/mfast_account_identification_page.dart'
    deferred as _i68;
import 'package:flutter_module/features/mfast/page/contract_collaborator/mfast_contract_collaborator_page.dart'
    deferred as _i69;
import 'package:flutter_module/features/mfast/page/mfast/mfast_page.dart'
    deferred as _i74;
import 'package:flutter_module/features/mfast/page/take_picture/take_picture_page.dart'
    deferred as _i139;
import 'package:flutter_module/features/mfast/page/time_checking_history/time_checking_history_page.dart'
    deferred as _i142;
import 'package:flutter_module/features/mfast/page/time_checking_report/time_checking_report_page.dart'
    deferred as _i144;
import 'package:flutter_module/features/mfast/page/time_checking_report_detail/time_checking_report_detail_page.dart'
    deferred as _i143;
import 'package:flutter_module/features/mfast/page/time_checking_report_result/time_checking_report_result_page.dart'
    deferred as _i145;
import 'package:flutter_module/features/mfast/page/update_phone_number/mfast_update_phone_number_page.dart'
    deferred as _i75;
import 'package:flutter_module/features/mtrade/page/detail_collaborator/mtrade_detail_collaborator_page.dart'
    deferred as _i78;
import 'package:flutter_module/features/mtrade/page/detail_promotion/mtrade_detail_promotion_page.dart'
    deferred as _i79;
import 'package:flutter_module/features/mtrade/page/mtrade/children/brochure/mtrade_brochure_page.dart'
    deferred as _i76;
import 'package:flutter_module/features/mtrade/page/mtrade/children/brochure/review_brochure_page.dart'
    deferred as _i125;
import 'package:flutter_module/features/mtrade/page/mtrade/children/cart/mtrade_cart_tab_page.dart'
    deferred as _i77;
import 'package:flutter_module/features/mtrade/page/mtrade/children/order/children/direct_bonus/mtrade_direct_bonus_page.dart'
    deferred as _i80;
import 'package:flutter_module/features/mtrade/page/mtrade/children/order/children/indirect_bonus/mtrade_indirect_bonus_page.dart'
    deferred as _i81;
import 'package:flutter_module/features/mtrade/page/mtrade/children/order/mtrade_order_tab_page.dart'
    deferred as _i86;
import 'package:flutter_module/features/mtrade/page/mtrade/children/product/mtrade_product_page.dart'
    deferred as _i96;
import 'package:flutter_module/features/mtrade/page/mtrade/children/product/mtrade_product_tab_page.dart'
    deferred as _i97;
import 'package:flutter_module/features/mtrade/page/mtrade/children/tools/mtrade_tools_page.dart'
    deferred as _i102;
import 'package:flutter_module/features/mtrade/page/mtrade/mtrade_page.dart'
    deferred as _i87;
import 'package:flutter_module/features/mtrade/page/my_review/mtrade_my_review_page.dart'
    deferred as _i82;
import 'package:flutter_module/features/mtrade/page/not_found/mtrade_not_found_page.dart'
    deferred as _i83;
import 'package:flutter_module/features/mtrade/page/order/order_overview/order_overview_page.dart'
    deferred as _i110;
import 'package:flutter_module/features/mtrade/page/order/order_process_state/mtrade_order_process_state_page.dart'
    deferred as _i85;
import 'package:flutter_module/features/mtrade/page/order/pay_later_order_information/children/pre_screen_pay_later_order/pre_screen_pay_later_order_page.dart'
    deferred as _i113;
import 'package:flutter_module/features/mtrade/page/order/pay_later_order_information/children/product_scheme_pay_later_order/product_scheme_pay_later_order_page.dart'
    deferred as _i114;
import 'package:flutter_module/features/mtrade/page/order/pay_later_order_information/children/result_pay_later_order/result_pay_later_order_page.dart'
    deferred as _i123;
import 'package:flutter_module/features/mtrade/page/order/pay_later_order_information/children/result_request_pay_later_order/result_request_pay_later_order_page.dart'
    deferred as _i124;
import 'package:flutter_module/features/mtrade/page/order/pay_later_order_information/mtrade_pay_later_order_information_page.dart'
    deferred as _i88;
import 'package:flutter_module/features/mtrade/page/order/pay_now_order_information/mtrade_pay_now_order_information_page.dart'
    deferred as _i89;
import 'package:flutter_module/features/mtrade/page/order_detail/mtrade_order_detail_page.dart'
    deferred as _i84;
import 'package:flutter_module/features/mtrade/page/personal_link_setup/mtrade_personal_link_setup_page.dart'
    deferred as _i90;
import 'package:flutter_module/features/mtrade/page/personal_website_setup/mtrade_personal_website_setup_page.dart'
    deferred as _i91;
import 'package:flutter_module/features/mtrade/page/personal_website_statistic/mtrade_personal_website_statistic_page.dart'
    deferred as _i92;
import 'package:flutter_module/features/mtrade/page/personal_website_tabbar/mtrade_personal_website_tabbar_page.dart'
    deferred as _i93;
import 'package:flutter_module/features/mtrade/page/policy/delivery_policy_page.dart'
    deferred as _i53;
import 'package:flutter_module/features/mtrade/page/policy/transfer_product_policy_page.dart'
    deferred as _i146;
import 'package:flutter_module/features/mtrade/page/policy/warranty_policy_page.dart'
    deferred as _i151;
import 'package:flutter_module/features/mtrade/page/product_detail/mtrade_product_detail_bottom_sheet.dart'
    deferred as _i94;
import 'package:flutter_module/features/mtrade/page/product_detail/mtrade_product_detail_page.dart'
    deferred as _i95;
import 'package:flutter_module/features/mtrade/page/promotion/mtrade_promotion_page.dart'
    deferred as _i98;
import 'package:flutter_module/features/mtrade/page/search/mtrade_search_page.dart'
    deferred as _i100;
import 'package:flutter_module/features/mtrade/page/search_order/mtrade_search_order_page.dart'
    deferred as _i99;
import 'package:flutter_module/features/mtrade/page/searched_product/mtrade_searched_product_page.dart'
    deferred as _i101;
import 'package:flutter_module/features/news/pages/news/children/contest_tab/contest_tab_page.dart'
    deferred as _i51;
import 'package:flutter_module/features/news/pages/news/children/knowledges_tab/knowledges_tab_page.dart'
    deferred as _i60;
import 'package:flutter_module/features/news/pages/news/children/news_tab/news_tab_page.dart'
    deferred as _i106;
import 'package:flutter_module/features/news/pages/news/news_page.dart'
    deferred as _i105;
import 'package:flutter_module/features/notification/page/notification/children/notification_admin/mfast_notification_admin_page.dart'
    deferred as _i70;
import 'package:flutter_module/features/notification/page/notification/children/notification_system/mfast_notification_system_page.dart'
    deferred as _i73;
import 'package:flutter_module/features/notification/page/notification/mfast_notification_page.dart'
    deferred as _i71;
import 'package:flutter_module/features/notification/page/notification_setting/mfast_notification_setting_page.dart'
    deferred as _i72;
import 'package:flutter_module/features/notification/pages/fluctuation_notification/fluctuation_notification_page.dart'
    deferred as _i54;
import 'package:flutter_module/features/notification/pages/general_notification/general_notification_page.dart'
    deferred as _i55;
import 'package:flutter_module/features/notification/pages/notification/notification_page.dart'
    deferred as _i107;
import 'package:flutter_module/features/onboarding/pages/onboarding_page.dart'
    deferred as _i109;
import 'package:flutter_module/features/personal_setting/pages/about/about_page.dart'
    deferred as _i1;
import 'package:flutter_module/features/personal_setting/pages/account_setting/account_setting_page.dart'
    deferred as _i9;
import 'package:flutter_module/features/personal_setting/pages/account_visible_setting/account_visible_setting_page.dart'
    deferred as _i10;
import 'package:flutter_module/features/personal_setting/pages/login_history/login_history_page.dart'
    deferred as _i66;
import 'package:flutter_module/features/personal_setting/pages/personal_setting/personal_setting_page.dart'
    deferred as _i112;
import 'package:flutter_module/features/personal_setting/pages/register_mentor/register_mentor_page.dart'
    deferred as _i119;
import 'package:flutter_module/features/personal_setting/pages/security/security_page.dart'
    deferred as _i126;
import 'package:flutter_module/features/shipper/page/detail_bill_lading/shipper_bill_lading_detail_page.dart'
    deferred as _i127;
import 'package:flutter_module/features/shipper/page/photo_preview/shipper_photo_preivew_page.dart'
    deferred as _i132;
import 'package:flutter_module/features/shipper/page/shipper/children/completed_bill_lading/shipper_completed_bill_lading_page.dart'
    deferred as _i128;
import 'package:flutter_module/features/shipper/page/shipper/children/delivery_bill_lading/shipper_delivery_bill_lading_page.dart'
    deferred as _i129;
import 'package:flutter_module/features/shipper/page/shipper/children/new_bill_lading/shipper_new_bill_lading_page.dart'
    deferred as _i130;
import 'package:flutter_module/features/shipper/page/shipper/shipper_page.dart'
    deferred as _i131;
import 'package:flutter_module/features/statistic_working/page/statistic_agent_checking/statistic_agent_checking_page.dart'
    deferred as _i133;
import 'package:flutter_module/features/statistic_working/page/statistic_agent_report/statistic_agent_report_page.dart'
    deferred as _i134;
import 'package:flutter_module/features/statistic_working/page/statistic_asm_checking/statistic_asm_checking_page.dart'
    deferred as _i135;
import 'package:flutter_module/features/statistic_working/page/statistic_asm_report/statistic_asm_report_page.dart'
    deferred as _i136;
import 'package:flutter_module/features/statistic_working/page/statistic_working/statistic_working_page.dart'
    deferred as _i138;
import 'package:flutter_module/features/webview/webview_bottom_sheet.dart'
    deferred as _i152;
import 'package:flutter_module/features/webview/webview_page.dart'
    deferred as _i153;
import 'package:flutter_module/features/webview/webview_payment_method_bottom_sheet.dart'
    deferred as _i154;
import 'package:flutter_module/models/academy/event_detail/academy_event_detail_model.dart'
    as _i159;
import 'package:flutter_module/models/chat/contact/chat_contact_model.dart'
    as _i166;
import 'package:flutter_module/models/chat/contact/chat_request_contact_model.dart'
    as _i164;
import 'package:flutter_module/models/chat/message/message_model.dart' as _i165;
import 'package:flutter_module/models/chat/thread/chat_thread_model.dart'
    as _i163;
import 'package:flutter_module/models/client/ad_link/ad_link_model.dart'
    as _i175;
import 'package:flutter_module/models/collaborator/collaborator_my_supporter_waiting_model.dart'
    as _i181;
import 'package:flutter_module/models/home_data/home_data_model.dart' as _i169;
import 'package:flutter_module/models/mfast/report/report_submit_response_model.dart'
    as _i191;
import 'package:flutter_module/models/mtrade/cart/mtrade_cart_product_model.dart'
    as _i173;
import 'package:flutter_module/models/mtrade/order/mtrade_pay_now_order_model.dart'
    as _i182;
import 'package:flutter_module/models/mtrade/product/mtrade_brochure_product_model.dart'
    as _i186;
import 'package:flutter_module/models/mtrade/product_detail/mtrade_product_detail_model.dart'
    as _i176;
import 'package:flutter_module/models/mtrade/promotion/data_product_variations_model.dart'
    as _i174;
import 'package:flutter_module/models/mtrade/promotion/mtrade_promotion_model.dart'
    as _i172;
import 'package:flutter_module/models/personal_setting/bank_account_model.dart'
    as _i162;
import 'package:flutter_module/models/shipper/document/photo_preview_model.dart'
    as _i187;
import 'package:flutter_module/services/api/authentication/payload/register_payload.dart'
    as _i180;
import 'package:flutter_module/services/api/mtrade/payload/mtrade_pay_now_order_payload.dart'
    as _i178;
import 'package:scroll_to_index/scroll_to_index.dart' as _i170;

abstract class $AppRouter extends _i157.RootStackRouter {
  $AppRouter({super.navigatorKey});

  @override
  final Map<String, _i157.PageFactory> pagesMap = {
    AboutRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i1.loadLibrary,
          () => _i1.AboutPage(),
        ),
      );
    },
    AcademyCheckInEventRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<AcademyCheckInEventRouteArgs>(
          orElse: () => AcademyCheckInEventRouteArgs(
                eventID: queryParams.optString('eventID'),
                status: queryParams.optString('status'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i2.loadLibrary,
          () => _i2.AcademyCheckInEventPage(
            key: args.key,
            eventID: args.eventID,
            status: args.status,
          ),
        ),
      );
    },
    AcademyCheckOutEventRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<AcademyCheckOutEventRouteArgs>(
          orElse: () => AcademyCheckOutEventRouteArgs(
                eventID: queryParams.optString('eventID'),
                status: queryParams.optString('status'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i3.loadLibrary,
          () => _i3.AcademyCheckOutEventPage(
            key: args.key,
            eventID: args.eventID,
            status: args.status,
          ),
        ),
      );
    },
    AcademyEventDetailRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<AcademyEventDetailRouteArgs>(
          orElse: () => AcademyEventDetailRouteArgs(
              eventID: queryParams.optString('eventID')));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i4.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i4.AcademyEventDetailPage(
            key: args.key,
            eventID: args.eventID,
          )),
        ),
      );
    },
    AcademyRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i5.loadLibrary,
          () => _i157.WrappedRoute(child: _i5.AcademyPage()),
        ),
      );
    },
    AcademyQuizRoute.name: (routeData) {
      final args = routeData.argsAs<AcademyQuizRouteArgs>(
          orElse: () => const AcademyQuizRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i6.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i6.AcademyQuizPage(
            key: args.key,
            event: args.event,
            mobilePhone: args.mobilePhone,
            readOnly: args.readOnly,
          )),
        ),
      );
    },
    AcademyRegisterEventRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<AcademyRegisterEventRouteArgs>(
          orElse: () => AcademyRegisterEventRouteArgs(
                eventID: queryParams.optString('eventID'),
                status: queryParams.optString('status'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i7.loadLibrary,
          () => _i7.AcademyRegisterEventPage(
            key: args.key,
            eventID: args.eventID,
            status: args.status,
          ),
        ),
      );
    },
    AcademyRegisteredEventRoute.name: (routeData) {
      final args = routeData.argsAs<AcademyRegisteredEventRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i8.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i8.AcademyRegisteredEventPage(
            key: args.key,
            status: args.status,
          )),
        ),
      );
    },
    AccountSettingRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i9.loadLibrary,
          () => _i9.AccountSettingPage(),
        ),
      );
    },
    AccountVisibleSettingRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i10.loadLibrary,
          () => _i157.WrappedRoute(child: _i10.AccountVisibleSettingPage()),
        ),
      );
    },
    AdLinkListRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i11.loadLibrary,
          () => _i11.AdLinkListPage(),
        ),
      );
    },
    AdLinkRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i12.loadLibrary,
          () => _i157.WrappedRoute(child: _i12.AdLinkPage()),
        ),
      );
    },
    AdLinkStatisticRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i13.loadLibrary,
          () => _i13.AdLinkStatisticPage(),
        ),
      );
    },
    AddBIDVBankAccountRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i14.loadLibrary,
          () => _i157.WrappedRoute(child: _i14.AddBIDVBankAccountPage()),
        ),
      );
    },
    AddBankAccountRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i15.loadLibrary,
          () => _i157.WrappedRoute(child: _i15.AddBankAccountPage()),
        ),
      );
    },
    AllChatSupportRequestListRoute.name: (routeData) {
      final args = routeData.argsAs<AllChatSupportRequestListRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i16.loadLibrary,
          () => _i16.AllChatSupportRequestListPage(
            key: args.key,
            type: args.type,
          ),
        ),
      );
    },
    BankAccountDetailRoute.name: (routeData) {
      final args = routeData.argsAs<BankAccountDetailRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i17.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i17.BankAccountDetailPage(
            key: args.key,
            bankAccount: args.bankAccount,
            isCanRemoveBankAccount: args.isCanRemoveBankAccount,
          )),
        ),
      );
    },
    BankAccountRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<BankAccountRouteArgs>(
          orElse: () =>
              BankAccountRouteArgs(initIndex: queryParams.optInt('initKey')));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i18.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i18.BankAccountPage(
            key: args.key,
            initIndex: args.initIndex,
          )),
        ),
      );
    },
    BankAccountTabRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i19.loadLibrary,
          () => _i19.BankAccountTabPage(),
        ),
      );
    },
    BlockUsersRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i20.loadLibrary,
          () => _i157.WrappedRoute(child: _i20.BlockUsersPage()),
        ),
      );
    },
    BottomSheetRegisteredEventRoute.name: (routeData) {
      final args = routeData.argsAs<BottomSheetRegisteredEventRouteArgs>(
          orElse: () => const BottomSheetRegisteredEventRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i21.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i21.BottomSheetRegisteredEventPage(
            key: args.key,
            title: args.title,
          )),
        ),
      );
    },
    ChatAddContactRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i22.loadLibrary,
          () => _i157.WrappedRoute(child: _i22.ChatAddContactPage()),
        ),
      );
    },
    ChatAddMemberThreadRoute.name: (routeData) {
      final args = routeData.argsAs<ChatAddMemberThreadRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i23.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i23.ChatAddMemberThreadPage(
            key: args.key,
            thread: args.thread,
          )),
        ),
      );
    },
    ChatBotRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<ChatBotRouteArgs>(
          orElse: () => ChatBotRouteArgs(
                title: queryParams.optString('title'),
                botID: queryParams.optString('botID'),
                type: queryParams.optString('type'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i24.loadLibrary,
          () => _i24.ChatBotPage(
            key: args.key,
            title: args.title,
            botID: args.botID,
            type: args.type,
          ),
        ),
      );
    },
    ChatContactRequestRoute.name: (routeData) {
      final args = routeData.argsAs<ChatContactRequestRouteArgs>(
          orElse: () => const ChatContactRequestRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i25.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i25.ChatContactRequestPage(
            key: args.key,
            invitations: args.invitations,
            sentRequests: args.sentRequests,
            initialIndex: args.initialIndex,
          )),
        ),
      );
    },
    ChatContactRequestReceivedRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i26.loadLibrary,
          () => _i26.ChatContactRequestReceivedPage(),
        ),
      );
    },
    ChatContactRequestSentRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i27.loadLibrary,
          () => _i27.ChatContactRequestSentPage(),
        ),
      );
    },
    ChatContactsRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i28.loadLibrary,
          () => _i28.ChatContactsPage(),
        ),
      );
    },
    ChatForwardMessageRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<ChatForwardMessageRouteArgs>(
          orElse: () =>
              ChatForwardMessageRouteArgs(message: queryParams.get('message')));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i29.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i29.ChatForwardMessagePage(
            key: args.key,
            message: args.message,
          )),
        ),
      );
    },
    ChatGeneralImageRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i30.loadLibrary,
          () => _i30.ChatGeneralImagePage(),
        ),
      );
    },
    ChatGeneralLinkRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i31.loadLibrary,
          () => _i31.ChatGeneralLinkPage(),
        ),
      );
    },
    ChatGeneralMediaRoute.name: (routeData) {
      final args = routeData.argsAs<ChatGeneralMediaRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i32.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i32.ChatGeneralMediaPage(
            key: args.key,
            thread: args.thread,
          )),
        ),
      );
    },
    ChatGeneralVideoRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i33.loadLibrary,
          () => _i33.ChatGeneralVideoPage(),
        ),
      );
    },
    ChatMemberThreadRoute.name: (routeData) {
      final args = routeData.argsAs<ChatMemberThreadRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i34.loadLibrary,
          () => _i34.ChatMemberThreadPage(
            key: args.key,
            thread: args.thread,
          ),
        ),
      );
    },
    ChatRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<ChatRouteArgs>(
          orElse: () => ChatRouteArgs(
                chatBotID: queryParams.optString('chatBotID'),
                chatUserID: queryParams.optString('chatUserID'),
                threadID: queryParams.optString('threadID'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i35.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i35.ChatPage(
            key: args.key,
            chatBotID: args.chatBotID,
            chatUserID: args.chatUserID,
            threadID: args.threadID,
          )),
        ),
      );
    },
    ChatPreviewImageRoute.name: (routeData) {
      final args = routeData.argsAs<ChatPreviewImageRouteArgs>(
          orElse: () => const ChatPreviewImageRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i36.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i36.ChatPreviewImagePage(
            key: args.key,
            images: args.images,
            initialIndex: args.initialIndex,
            onForwardMessage: args.onForwardMessage,
            onDeleteMessage: args.onDeleteMessage,
          )),
        ),
      );
    },
    ChatPreviewVideoRoute.name: (routeData) {
      final args = routeData.argsAs<ChatPreviewVideoRouteArgs>(
          orElse: () => const ChatPreviewVideoRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i37.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i37.ChatPreviewVideoPage(
            key: args.key,
            videos: args.videos,
            initialIndex: args.initialIndex,
            onForwardMessage: args.onForwardMessage,
            onDeleteMessage: args.onDeleteMessage,
          )),
        ),
      );
    },
    ChatSearchContactRoute.name: (routeData) {
      final args = routeData.argsAs<ChatSearchContactRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i38.loadLibrary,
          () => _i38.ChatSearchContactPage(
            key: args.key,
            contacts: args.contacts,
          ),
        ),
      );
    },
    ChatSettingRoute.name: (routeData) {
      final args = routeData.argsAs<ChatSettingRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i39.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i39.ChatSettingPage(
            key: args.key,
            thread: args.thread,
          )),
        ),
      );
    },
    ChatSupportRequestListRoute.name: (routeData) {
      final args = routeData.argsAs<ChatSupportRequestListRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i40.loadLibrary,
          () => _i40.ChatSupportRequestListPage(
            key: args.key,
            type: args.type,
          ),
        ),
      );
    },
    ChatSupportRequestRoute.name: (routeData) {
      final args = routeData.argsAs<ChatSupportRequestRouteArgs>(
          orElse: () => const ChatSupportRequestRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i24.loadLibrary,
          () => _i24.ChatSupportRequestPage(
            key: args.key,
            botID: args.botID,
            type: args.type,
          ),
        ),
      );
    },
    ChatSupportTicketRoute.name: (routeData) {
      final args = routeData.argsAs<ChatSupportTicketRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i41.loadLibrary,
          () => _i41.ChatSupportTicketPage(
            key: args.key,
            userId: args.userId,
            workspaceId: args.workspaceId,
            themeColor: args.themeColor,
          ),
        ),
      );
    },
    ChatThreadRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i42.loadLibrary,
          () => _i42.ChatThreadPage(),
        ),
      );
    },
    ClientDetailMiddleRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<ClientDetailMiddleRouteArgs>(
          orElse: () => ClientDetailMiddleRouteArgs(
                clientID: queryParams.optString('ID'),
                itemID: queryParams.optString('itemID'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i43.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i43.ClientDetailMiddlePage(
            key: args.key,
            type: args.type,
            clientID: args.clientID,
            initialIndex: args.initialIndex,
            itemID: args.itemID,
          )),
        ),
      );
    },
    ClientListRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i44.loadLibrary,
          () => _i44.ClientListPage(),
        ),
      );
    },
    ClientRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i45.loadLibrary,
          () => _i45.ClientPage(),
        ),
      );
    },
    ClientStatisticRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i46.loadLibrary,
          () => _i157.WrappedRoute(child: _i46.ClientStatisticPage()),
        ),
      );
    },
    ClosedChatSupportRequestListRoute.name: (routeData) {
      final args = routeData.argsAs<ClosedChatSupportRequestListRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i47.loadLibrary,
          () => _i47.ClosedChatSupportRequestListPage(
            key: args.key,
            type: args.type,
          ),
        ),
      );
    },
    CollaboratorNeedToCareRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<CollaboratorNeedToCareRouteArgs>(
          orElse: () => CollaboratorNeedToCareRouteArgs(
              initIndex: queryParams.optInt('initIndex')));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i48.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i48.CollaboratorNeedToCarePage(
            key: args.key,
            collaboratorStatus: args.collaboratorStatus,
            initIndex: args.initIndex,
          )),
        ),
      );
    },
    CollaboratorPendingConfrimRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<CollaboratorPendingConfrimRouteArgs>(
          orElse: () => CollaboratorPendingConfrimRouteArgs(
              id: queryParams.optString('ID')));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i49.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i49.CollaboratorPendingConfrimPage(
            key: args.key,
            id: args.id,
            onRemoveItem: args.onRemoveItem,
          )),
        ),
      );
    },
    CollaboratorPendingRoute.name: (routeData) {
      final args = routeData.argsAs<CollaboratorPendingRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i50.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i50.CollaboratorPendingPage(
            key: args.key,
            userPending: args.userPending,
            onUserPendingChange: args.onUserPendingChange,
          )),
        ),
      );
    },
    ContestTabRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i51.loadLibrary,
          () => _i157.WrappedRoute(child: _i51.ContestTabPage()),
        ),
      );
    },
    CreateThreadGroupRoute.name: (routeData) {
      final args = routeData.argsAs<CreateThreadGroupRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i52.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i52.CreateThreadGroupPage(
            key: args.key,
            contacts: args.contacts,
          )),
        ),
      );
    },
    DeliveryPolicyRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<DeliveryPolicyRouteArgs>(
          orElse: () => DeliveryPolicyRouteArgs(
                url: queryParams.optString('url'),
                title: queryParams.optString(
                  'title',
                  "MTrade",
                ),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i53.loadLibrary,
          () => _i53.DeliveryPolicyPage(
            key: args.key,
            url: args.url,
            title: args.title,
          ),
        ),
      );
    },
    FluctuationNotificationRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i54.loadLibrary,
          () => _i54.FluctuationNotificationPage(),
        ),
      );
    },
    GeneralNotificationRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i55.loadLibrary,
          () => _i55.GeneralNotificationPage(),
        ),
      );
    },
    HistoryIncomeRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i56.loadLibrary,
          () => _i56.HistoryIncomePage(),
        ),
      );
    },
    HomeRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i57.loadLibrary,
          () => _i157.WrappedRoute(child: _i57.HomePage()),
        ),
      );
    },
    HomeSearchRoute.name: (routeData) {
      final args = routeData.argsAs<HomeSearchRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i58.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i58.HomeSearchPage(
            key: args.key,
            homeGroups: args.homeGroups,
          )),
        ),
      );
    },
    IncomeRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<IncomeRouteArgs>(
          orElse: () =>
              IncomeRouteArgs(initIndex: queryParams.optString('initIndex')));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i59.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i59.IncomePage(
            key: args.key,
            initIndex: args.initIndex,
          )),
        ),
      );
    },
    KnowledgesTabRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i60.loadLibrary,
          () => _i157.WrappedRoute(child: _i60.KnowledgesTabPage()),
        ),
      );
    },
    LegendaryCollaboratorRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i61.loadLibrary,
          () => _i61.LegendaryCollaboratorPage(),
        ),
      );
    },
    LegendaryCommunityRoute.name: (routeData) {
      final args = routeData.argsAs<LegendaryCommunityRouteArgs>(
          orElse: () => const LegendaryCommunityRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i62.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i62.LegendaryCommunityPage(
            key: args.key,
            userID: args.userID,
          )),
        ),
      );
    },
    LegendaryHierCollaboratorRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<LegendaryHierCollaboratorRouteArgs>(
          orElse: () => LegendaryHierCollaboratorRouteArgs(
              userID: queryParams.optString('userID')));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i63.loadLibrary,
          () => _i63.LegendaryHierCollaboratorPage(
            key: args.key,
            userID: args.userID,
          ),
        ),
      );
    },
    LegendaryOverviewRoute.name: (routeData) {
      final args = routeData.argsAs<LegendaryOverviewRouteArgs>(
          orElse: () => const LegendaryOverviewRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i64.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i64.LegendaryOverviewPage(
            key: args.key,
            userID: args.userID,
            autoScrollController: args.autoScrollController,
            legendaryExperienceKey: args.legendaryExperienceKey,
            legendaryIncomeKey: args.legendaryIncomeKey,
            legendaryCollaboratorKey: args.legendaryCollaboratorKey,
          )),
        ),
      );
    },
    LegendaryRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<LegendaryRouteArgs>(
          orElse: () =>
              LegendaryRouteArgs(userID: queryParams.optString('userID')));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i65.loadLibrary,
          () => _i65.LegendaryPage(
            key: args.key,
            userID: args.userID,
          ),
        ),
      );
    },
    LoginHistoryRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i66.loadLibrary,
          () => _i157.WrappedRoute(child: _i66.LoginHistoryPage()),
        ),
      );
    },
    LoginRoute.name: (routeData) {
      final args = routeData.argsAs<LoginRouteArgs>(
          orElse: () => const LoginRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i67.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i67.LoginPage(
            key: args.key,
            onSuccess: args.onSuccess,
          )),
        ),
      );
    },
    MFastAccountIdentificationRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i68.loadLibrary,
          () =>
              _i157.WrappedRoute(child: _i68.MFastAccountIdentificationPage()),
        ),
      );
    },
    MFastContractCollaboratorRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i69.loadLibrary,
          () => _i69.MFastContractCollaboratorPage(),
        ),
      );
    },
    MFastNotificationAdminRoute.name: (routeData) {
      final args = routeData.argsAs<MFastNotificationAdminRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i70.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i70.MFastNotificationAdminPage(
            key: args.key,
            category: args.category,
          )),
        ),
      );
    },
    MFastNotificationRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i71.loadLibrary,
          () => _i157.WrappedRoute(child: _i71.MFastNotificationPage()),
        ),
      );
    },
    MFastNotificationSettingRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i72.loadLibrary,
          () => _i157.WrappedRoute(child: _i72.MFastNotificationSettingPage()),
        ),
      );
    },
    MFastNotificationSystemRoute.name: (routeData) {
      final args = routeData.argsAs<MFastNotificationSystemRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i73.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i73.MFastNotificationSystemPage(
            key: args.key,
            category: args.category,
          )),
        ),
      );
    },
    MFastRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i74.loadLibrary,
          () => _i74.MFastPage(),
        ),
      );
    },
    MFastUpdatePhoneNumberRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i75.loadLibrary,
          () => _i157.WrappedRoute(child: _i75.MFastUpdatePhoneNumberPage()),
        ),
      );
    },
    MTradeBrochureRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i76.loadLibrary,
          () => _i157.WrappedRoute(child: _i76.MTradeBrochurePage()),
        ),
      );
    },
    MTradeCartTabRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i77.loadLibrary,
          () => _i157.WrappedRoute(child: _i77.MTradeCartTabPage()),
        ),
      );
    },
    MTradeDetailCollaboratorRoute.name: (routeData) {
      final args = routeData.argsAs<MTradeDetailCollaboratorRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i78.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i78.MTradeDetailCollaboratorPage(
            key: args.key,
            collaboratorID: args.collaboratorID,
          )),
        ),
      );
    },
    MTradeDetailPromotionRoute.name: (routeData) {
      final args = routeData.argsAs<MTradeDetailPromotionRouteArgs>(
          orElse: () => const MTradeDetailPromotionRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i79.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i79.MTradeDetailPromotionPage(
            key: args.key,
            promotion: args.promotion,
            showApplyButton: args.showApplyButton,
          )),
        ),
      );
    },
    MTradeDirectBonusRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i80.loadLibrary,
          () => _i80.MTradeDirectBonusPage(),
        ),
      );
    },
    MTradeIndirectBonusRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i81.loadLibrary,
          () => _i81.MTradeIndirectBonusPage(),
        ),
      );
    },
    MTradeMyReviewRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i82.loadLibrary,
          () => _i157.WrappedRoute(child: _i82.MTradeMyReviewPage()),
        ),
      );
    },
    MTradeNotFoundRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i83.loadLibrary,
          () => _i83.MTradeNotFoundPage(),
        ),
      );
    },
    MTradeOrderDetailRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<MTradeOrderDetailRouteArgs>(
          orElse: () => MTradeOrderDetailRouteArgs(
              orderId: queryParams.optString('orderId')));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i84.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i84.MTradeOrderDetailPage(
            key: args.key,
            orderId: args.orderId,
          )),
        ),
      );
    },
    MTradeOrderProcessStateRoute.name: (routeData) {
      final args = routeData.argsAs<MTradeOrderProcessStateRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i85.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i85.MTradeOrderProcessStatePage(
            key: args.key,
            processState: args.processState,
            collaboratorID: args.collaboratorID,
          )),
        ),
      );
    },
    MTradeOrderTabRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i86.loadLibrary,
          () => _i157.WrappedRoute(child: _i86.MTradeOrderTabPage()),
        ),
      );
    },
    MTradeRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<MTradeRouteArgs>(
          orElse: () =>
              MTradeRouteArgs(indexTab: queryParams.optInt('index_tab')));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i87.loadLibrary,
          () => _i87.MTradePage(
            key: args.key,
            indexTab: args.indexTab,
          ),
        ),
      );
    },
    MTradePayLaterOrderInformationRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<MTradePayLaterOrderInformationRouteArgs>(
          orElse: () => MTradePayLaterOrderInformationRouteArgs(
                orderID: queryParams.optString('orderID'),
                transactionID: queryParams.optString('transactionID'),
                pageID: queryParams.optString('pageID'),
                provinceCode: queryParams.optString('provinceCode'),
                districtCode: queryParams.optString('districtCode'),
                wardCode: queryParams.optString('wardCode'),
                provinceDeliveryCode:
                    queryParams.optString('provinceDeliveryCode'),
                districtDeliveryCode:
                    queryParams.optString('districtDeliveryCode'),
                wardDeliveryCode: queryParams.optString('wardDeliveryCode'),
                source: queryParams.optString('source'),
                orders: queryParams.optString('orders'),
                selectedLoanSchemeID:
                    queryParams.optString('selectedLoanSchemeID'),
                selectedDownPaymentPercent:
                    queryParams.optString('selectedDownPaymentPercent'),
                selectedLoanTenor: queryParams.optString('selectedLoanTenor'),
                selectedJoinInsurance:
                    queryParams.optString('selectedJoinInsurance'),
                mobilePhone: queryParams.optString('mobilePhone'),
                idNumber: queryParams.optString('idNumber'),
                nameHeadOfHousehold:
                    queryParams.optString('nameHeadOfHousehold'),
                idNumberHeadOfHousehold:
                    queryParams.optString('idNumberHeadOfHousehold'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i88.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i88.MTradePayLaterOrderInformationPage(
            key: args.key,
            products: args.products,
            promotions: args.promotions,
            orderID: args.orderID,
            transactionID: args.transactionID,
            pageID: args.pageID,
            provinceCode: args.provinceCode,
            districtCode: args.districtCode,
            wardCode: args.wardCode,
            provinceDeliveryCode: args.provinceDeliveryCode,
            districtDeliveryCode: args.districtDeliveryCode,
            wardDeliveryCode: args.wardDeliveryCode,
            source: args.source,
            orders: args.orders,
            selectedLoanSchemeID: args.selectedLoanSchemeID,
            selectedDownPaymentPercent: args.selectedDownPaymentPercent,
            selectedLoanTenor: args.selectedLoanTenor,
            selectedJoinInsurance: args.selectedJoinInsurance,
            mobilePhone: args.mobilePhone,
            idNumber: args.idNumber,
            nameHeadOfHousehold: args.nameHeadOfHousehold,
            idNumberHeadOfHousehold: args.idNumberHeadOfHousehold,
          )),
        ),
      );
    },
    MTradePayNowOrderInformationRoute.name: (routeData) {
      final args = routeData.argsAs<MTradePayNowOrderInformationRouteArgs>(
          orElse: () => const MTradePayNowOrderInformationRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i89.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i89.MTradePayNowOrderInformationPage(
            key: args.key,
            products: args.products,
            promotions: args.promotions,
          )),
        ),
      );
    },
    MTradePersonalLinkSetupRoute.name: (routeData) {
      final args = routeData.argsAs<MTradePersonalLinkSetupRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i90.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i90.MTradePersonalLinkSetupPage(
            key: args.key,
            item: args.item,
          )),
        ),
      );
    },
    MTradePersonalWebsiteSetupRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<MTradePersonalWebsiteSetupRouteArgs>(
          orElse: () => MTradePersonalWebsiteSetupRouteArgs(
              source: queryParams.optString('source')));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i91.loadLibrary,
          () => _i91.MTradePersonalWebsiteSetupPage(
            key: args.key,
            source: args.source,
          ),
        ),
      );
    },
    MTradePersonalWebsiteStatisticRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<MTradePersonalWebsiteStatisticRouteArgs>(
          orElse: () => MTradePersonalWebsiteStatisticRouteArgs(
              source: queryParams.optString('source')));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i92.loadLibrary,
          () => _i92.MTradePersonalWebsiteStatisticPage(
            key: args.key,
            source: args.source,
          ),
        ),
      );
    },
    MTradePersonalWebsiteTabbarRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<MTradePersonalWebsiteTabbarRouteArgs>(
          orElse: () => MTradePersonalWebsiteTabbarRouteArgs(
                indexTab: queryParams.optInt('index_tab'),
                source: queryParams.optString('source'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i93.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i93.MTradePersonalWebsiteTabbarPage(
            key: args.key,
            indexTab: args.indexTab,
            source: args.source,
          )),
        ),
      );
    },
    MTradeProductDetailBottomSheetRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<MTradeProductDetailBottomSheetRouteArgs>(
          orElse: () => MTradeProductDetailBottomSheetRouteArgs(
              productCode: queryParams.optString('productCode')));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i94.loadLibrary,
          () => _i94.MTradeProductDetailBottomSheet(
            key: args.key,
            productCode: args.productCode,
            product: args.product,
            type: args.type,
          ),
        ),
      );
    },
    MTradeProductDetailRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<MTradeProductDetailRouteArgs>(
          orElse: () => MTradeProductDetailRouteArgs(
                productCode: queryParams.optString('productCode'),
                pageID: queryParams.optString('pageID'),
                provinceCode: queryParams.optString('provinceCode'),
                districtCode: queryParams.optString('districtCode'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i95.loadLibrary,
          () => _i95.MTradeProductDetailPage(
            key: args.key,
            productCode: args.productCode,
            product: args.product,
            type: args.type,
            pageID: args.pageID,
            provinceCode: args.provinceCode,
            districtCode: args.districtCode,
          ),
        ),
      );
    },
    MTradeProductRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<MTradeProductRouteArgs>(
          orElse: () => MTradeProductRouteArgs(
                pageID: queryParams.optString('pageID'),
                provinceCode: queryParams.optString('provinceCode'),
                districtCode: queryParams.optString('districtCode'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i96.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i96.MTradeProductPage(
            key: args.key,
            pageID: args.pageID,
            provinceCode: args.provinceCode,
            districtCode: args.districtCode,
          )),
        ),
      );
    },
    MTradeProductTabRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i97.loadLibrary,
          () => _i157.WrappedRoute(child: _i97.MTradeProductTabPage()),
        ),
      );
    },
    MTradePromotionRoute.name: (routeData) {
      final args = routeData.argsAs<MTradePromotionRouteArgs>(
          orElse: () => const MTradePromotionRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i98.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i98.MTradePromotionPage(
            key: args.key,
            orderItems: args.orderItems,
            invalidTicketCodes: args.invalidTicketCodes,
            initPromotions: args.initPromotions,
            provinceCode: args.provinceCode,
            districtCode: args.districtCode,
            wardCode: args.wardCode,
            paymentMethod: args.paymentMethod,
          )),
        ),
      );
    },
    MTradeSearchOrderRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<MTradeSearchOrderRouteArgs>(
          orElse: () => MTradeSearchOrderRouteArgs(
                pageID: queryParams.optString('pageID'),
                provinceCode: queryParams.optString('provinceCode'),
                districtCode: queryParams.optString('districtCode'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i99.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i99.MTradeSearchOrderPage(
            key: args.key,
            pageID: args.pageID,
            provinceCode: args.provinceCode,
            districtCode: args.districtCode,
          )),
        ),
      );
    },
    MTradeSearchRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<MTradeSearchRouteArgs>(
          orElse: () => MTradeSearchRouteArgs(
                pageID: queryParams.optString('pageID'),
                provinceCode: queryParams.optString('provinceCode'),
                districtCode: queryParams.optString('districtCode'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i100.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i100.MTradeSearchPage(
            key: args.key,
            query: args.query,
            forceRouterPop: args.forceRouterPop,
            pageID: args.pageID,
            provinceCode: args.provinceCode,
            districtCode: args.districtCode,
          )),
        ),
      );
    },
    MTradeSearchedProductRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<MTradeSearchedProductRouteArgs>(
          orElse: () => MTradeSearchedProductRouteArgs(
                pageID: queryParams.optString('pageID'),
                provinceCode: queryParams.optString('provinceCode'),
                districtCode: queryParams.optString('districtCode'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i101.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i101.MTradeSearchedProductPage(
            key: args.key,
            title: args.title,
            query: args.query,
            group: args.group,
            pageID: args.pageID,
            provinceCode: args.provinceCode,
            districtCode: args.districtCode,
          )),
        ),
      );
    },
    MTradeToolsRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i102.loadLibrary,
          () => _i157.WrappedRoute(child: _i102.MTradeToolsPage()),
        ),
      );
    },
    MainTabbarRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i103.loadLibrary,
          () => _i157.WrappedRoute(child: _i103.MainTabbarPage()),
        ),
      );
    },
    NewSupporterRoute.name: (routeData) {
      final args = routeData.argsAs<NewSupporterRouteArgs>(
          orElse: () => const NewSupporterRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i104.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i104.NewSupporterPage(
            key: args.key,
            payload: args.payload,
            mySupporterWaiting: args.mySupporterWaiting,
          )),
        ),
      );
    },
    NewsRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<NewsRouteArgs>(
          orElse: () => NewsRouteArgs(
                focusedTabIndex: queryParams.optString('focusedTabIndex'),
                newsTabIndex: queryParams.optString('tabNewsIndex'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i105.loadLibrary,
          () => _i105.NewsPage(
            key: args.key,
            focusedTabIndex: args.focusedTabIndex,
            newsTabIndex: args.newsTabIndex,
          ),
        ),
      );
    },
    NewsTabRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<NewsTabRouteArgs>(
          orElse: () => NewsTabRouteArgs(
              newsTabIndex: queryParams.optInt('newsTabIndex')));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i106.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i106.NewsTabPage(
            key: args.key,
            newsTabIndex: args.newsTabIndex,
          )),
        ),
      );
    },
    NotificationRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i107.loadLibrary,
          () => _i107.NotificationPage(),
        ),
      );
    },
    OTPRoute.name: (routeData) {
      final args = routeData.argsAs<OTPRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i108.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i108.OTPPage(
            key: args.key,
            phoneNumber: args.phoneNumber,
            onSuccess: args.onSuccess,
            onRegister: args.onRegister,
          )),
        ),
      );
    },
    OnboardingRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i109.loadLibrary,
          () => _i157.WrappedRoute(child: _i109.OnboardingPage()),
        ),
      );
    },
    OrderOverviewRoute.name: (routeData) {
      final args = routeData.argsAs<OrderOverviewRouteArgs>(
          orElse: () => const OrderOverviewRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i110.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i110.OrderOverviewPage(
            key: args.key,
            order: args.order,
          )),
        ),
      );
    },
    PendingChatSupportRequestListRoute.name: (routeData) {
      final args = routeData.argsAs<PendingChatSupportRequestListRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i111.loadLibrary,
          () => _i111.PendingChatSupportRequestListPage(
            key: args.key,
            type: args.type,
          ),
        ),
      );
    },
    PersonalSettingRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i112.loadLibrary,
          () => _i157.WrappedRoute(child: _i112.PersonalSettingPage()),
        ),
      );
    },
    PreScreenPayLaterOrderRoute.name: (routeData) {
      final args = routeData.argsAs<PreScreenPayLaterOrderRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i113.loadLibrary,
          () => _i113.PreScreenPayLaterOrderPage(
            key: args.key,
            onNextPage: args.onNextPage,
          ),
        ),
      );
    },
    ProductSchemePayLaterOrderRoute.name: (routeData) {
      final args = routeData.argsAs<ProductSchemePayLaterOrderRouteArgs>(
          orElse: () => const ProductSchemePayLaterOrderRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i114.loadLibrary,
          () => _i114.ProductSchemePayLaterOrderPage(
            key: args.key,
            onNextPage: args.onNextPage,
            orderID: args.orderID,
            transactionID: args.transactionID,
            isLeaveRequest: args.isLeaveRequest,
            source: args.source,
            orders: args.orders,
            selectedLoanSchemeID: args.selectedLoanSchemeID,
            selectedDownPaymentPercent: args.selectedDownPaymentPercent,
            selectedLoanTenor: args.selectedLoanTenor,
            selectedJoinInsurance: args.selectedJoinInsurance,
          ),
        ),
      );
    },
    RSMPushHistoryRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i115.loadLibrary,
          () => _i115.RSMPushHistoryPage(),
        ),
      );
    },
    RSMPushRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i116.loadLibrary,
          () => _i157.WrappedRoute(child: _i116.RSMPushPage()),
        ),
      );
    },
    RSMPushUserRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i117.loadLibrary,
          () => _i117.RSMPushUserPage(),
        ),
      );
    },
    RegisterEventResultRoute.name: (routeData) {
      final args = routeData.argsAs<RegisterEventResultRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i118.loadLibrary,
          () => _i118.RegisterEventResultPage(
            key: args.key,
            status: args.status,
            title: args.title,
            message: args.message,
            buttonTitle: args.buttonTitle,
            buttonTap: args.buttonTap,
          ),
        ),
      );
    },
    RegisterMentorRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i119.loadLibrary,
          () => _i119.RegisterMentorPage(),
        ),
      );
    },
    RegisterNameRoute.name: (routeData) {
      final args = routeData.argsAs<RegisterNameRouteArgs>(
          orElse: () => const RegisterNameRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i120.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i120.RegisterNamePage(
            key: args.key,
            payload: args.payload,
          )),
        ),
      );
    },
    RegisterTaxRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i121.loadLibrary,
          () => _i157.WrappedRoute(child: _i121.RegisterTaxPage()),
        ),
      );
    },
    RespondedChatSupportRequestListRoute.name: (routeData) {
      final args = routeData.argsAs<RespondedChatSupportRequestListRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i122.loadLibrary,
          () => _i122.RespondedChatSupportRequestListPage(
            key: args.key,
            type: args.type,
          ),
        ),
      );
    },
    ResultPayLaterOrderRoute.name: (routeData) {
      final args = routeData.argsAs<ResultPayLaterOrderRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i123.loadLibrary,
          () => _i123.ResultPayLaterOrderPage(
            key: args.key,
            onNextPage: args.onNextPage,
          ),
        ),
      );
    },
    ResultRequestPayLaterOrderRoute.name: (routeData) {
      final args = routeData.argsAs<ResultRequestPayLaterOrderRouteArgs>(
          orElse: () => const ResultRequestPayLaterOrderRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i124.loadLibrary,
          () => _i124.ResultRequestPayLaterOrderPage(
            key: args.key,
            onNextPage: args.onNextPage,
            status: args.status,
            message: args.message,
          ),
        ),
      );
    },
    ReviewBrochureRoute.name: (routeData) {
      final args = routeData.argsAs<ReviewBrochureRouteArgs>(
          orElse: () => const ReviewBrochureRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i125.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i125.ReviewBrochurePage(
            key: args.key,
            type: args.type,
            selectedCategory: args.selectedCategory,
            selectedProduct: args.selectedProduct,
            selectedProductList: args.selectedProductList,
            selectedProvinceCode: args.selectedProvinceCode,
            selectedDistrictCode: args.selectedDistrictCode,
            showSaleInfo: args.showSaleInfo,
          )),
        ),
      );
    },
    SecurityRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i126.loadLibrary,
          () => _i157.WrappedRoute(child: _i126.SecurityPage()),
        ),
      );
    },
    ShipperBillLadingDetailRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<ShipperBillLadingDetailRouteArgs>(
          orElse: () => ShipperBillLadingDetailRouteArgs(
                  orderCode: queryParams.getString(
                'orderCode',
                "",
              )));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i127.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i127.ShipperBillLadingDetailPage(
            key: args.key,
            orderCode: args.orderCode,
          )),
        ),
      );
    },
    ShipperCompletedBillLadingRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i128.loadLibrary,
          () =>
              _i157.WrappedRoute(child: _i128.ShipperCompletedBillLadingPage()),
        ),
      );
    },
    ShipperDeliveryBillLadingRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i129.loadLibrary,
          () =>
              _i157.WrappedRoute(child: _i129.ShipperDeliveryBillLadingPage()),
        ),
      );
    },
    ShipperNewBillLadingRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i130.loadLibrary,
          () => _i157.WrappedRoute(child: _i130.ShipperNewBillLadingPage()),
        ),
      );
    },
    ShipperRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i131.loadLibrary,
          () => _i157.WrappedRoute(child: _i131.ShipperPage()),
        ),
      );
    },
    ShipperPhotoPreviewRoute.name: (routeData) {
      final args = routeData.argsAs<ShipperPhotoPreviewRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i132.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i132.ShipperPhotoPreviewPage(
            key: args.key,
            photos: args.photos,
            selectedPhoto: args.selectedPhoto,
          )),
        ),
      );
    },
    StatisticAgentCheckingRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<StatisticAgentCheckingRouteArgs>(
          orElse: () => StatisticAgentCheckingRouteArgs(
                userID: queryParams.optString('userID'),
                date: queryParams.optString('date'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i133.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i133.StatisticAgentCheckingPage(
            key: args.key,
            userID: args.userID,
            date: args.date,
          )),
        ),
      );
    },
    StatisticAgentReportRoute.name: (routeData) {
      final args = routeData.argsAs<StatisticAgentReportRouteArgs>(
          orElse: () => const StatisticAgentReportRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i134.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i134.StatisticAgentReportPage(
            key: args.key,
            userID: args.userID,
            date: args.date,
          )),
        ),
      );
    },
    StatisticAsmCheckingRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<StatisticAsmCheckingRouteArgs>(
          orElse: () => StatisticAsmCheckingRouteArgs(
                userID: queryParams.optString('userID'),
                level: queryParams.optString('level'),
                date: queryParams.optString('date'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i135.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i135.StatisticAsmCheckingPage(
            key: args.key,
            userID: args.userID,
            level: args.level,
            date: args.date,
          )),
        ),
      );
    },
    StatisticAsmReportRoute.name: (routeData) {
      final args = routeData.argsAs<StatisticAsmReportRouteArgs>(
          orElse: () => const StatisticAsmReportRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i136.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i136.StatisticAsmReportPage(
            key: args.key,
            userID: args.userID,
            level: args.level,
            date: args.date,
          )),
        ),
      );
    },
    StatisticIncomeRoute.name: (routeData) {
      final args = routeData.argsAs<StatisticIncomeRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i137.loadLibrary,
          () => _i137.StatisticIncomePage(
            key: args.key,
            chartController: args.chartController,
            onHistoryTypeChanged: args.onHistoryTypeChanged,
          ),
        ),
      );
    },
    StatisticWorkingRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<StatisticWorkingRouteArgs>(
          orElse: () => StatisticWorkingRouteArgs(
              indexTab: queryParams.optInt('index_tab')));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i138.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i138.StatisticWorkingPage(
            key: args.key,
            indexTab: args.indexTab,
          )),
        ),
      );
    },
    TakePictureRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<TakePictureRouteArgs>(
          orElse: () => TakePictureRouteArgs(
                type: queryParams.optString('time_checking_action'),
                isFromMFast: queryParams.optBool('is_from_mfast'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i139.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i139.TakePicturePage(
            key: args.key,
            type: args.type,
            isFromMFast: args.isFromMFast,
          )),
        ),
      );
    },
    TaxTabRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i140.loadLibrary,
          () => _i140.TaxTabPage(),
        ),
      );
    },
    ThreadMessagesRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<ThreadMessagesRouteArgs>(
          orElse: () => ThreadMessagesRouteArgs(
              threadID: queryParams.optString('threadID')));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i141.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i141.ThreadMessagesPage(
            key: args.key,
            threadID: args.threadID,
            thread: args.thread,
          )),
        ),
      );
    },
    TimeCheckingHistoryRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i142.loadLibrary,
          () => _i157.WrappedRoute(child: _i142.TimeCheckingHistoryPage()),
        ),
      );
    },
    TimeCheckingReportDetailRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<TimeCheckingReportDetailRouteArgs>(
          orElse: () => TimeCheckingReportDetailRouteArgs(
                title: queryParams.optString(
                  'title',
                  'Chi tiết báo cáo',
                ),
                reportID: queryParams.optString('reportID'),
                userID: queryParams.optString('userID'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i143.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i143.TimeCheckingReportDetailPage(
            key: args.key,
            title: args.title,
            reportID: args.reportID,
            userID: args.userID,
            submitReportData: args.submitReportData,
          )),
        ),
      );
    },
    TimeCheckingReportRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i144.loadLibrary,
          () => _i157.WrappedRoute(child: _i144.TimeCheckingReportPage()),
        ),
      );
    },
    TimeCheckingReportResultRoute.name: (routeData) {
      final args = routeData.argsAs<TimeCheckingReportResultRouteArgs>(
          orElse: () => const TimeCheckingReportResultRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i145.loadLibrary,
          () => _i145.TimeCheckingReportResultPage(
            key: args.key,
            data: args.data,
          ),
        ),
      );
    },
    TransferProductPolicyRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<TransferProductPolicyRouteArgs>(
          orElse: () => TransferProductPolicyRouteArgs(
                url: queryParams.optString('url'),
                title: queryParams.optString(
                  'title',
                  "MTrade",
                ),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i146.loadLibrary,
          () => _i146.TransferProductPolicyPage(
            key: args.key,
            url: args.url,
            title: args.title,
          ),
        ),
      );
    },
    UpdateBasicUserInfoOTPRoute.name: (routeData) {
      final args = routeData.argsAs<UpdateBasicUserInfoOTPRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i147.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i147.UpdateBasicUserInfoOTPPage(
            key: args.key,
            email: args.email,
          )),
        ),
      );
    },
    UpdateBasicUserInfoRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i148.loadLibrary,
          () => _i157.WrappedRoute(child: _i148.UpdateBasicUserInfoPage()),
        ),
      );
    },
    UpdateEmailSuccessRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i149.loadLibrary,
          () => _i149.UpdateEmailSuccessPage(),
        ),
      );
    },
    UserInfoRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i150.loadLibrary,
          () => _i157.WrappedRoute(child: _i150.UserInfoPage()),
        ),
      );
    },
    WarrantyPolicyRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<WarrantyPolicyRouteArgs>(
          orElse: () => WarrantyPolicyRouteArgs(
                url: queryParams.optString('url'),
                title: queryParams.optString(
                  'title',
                  "MTrade",
                ),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i151.loadLibrary,
          () => _i151.WarrantyPolicyPage(
            key: args.key,
            url: args.url,
            title: args.title,
          ),
        ),
      );
    },
    WebViewBottomSheetRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<WebViewBottomSheetRouteArgs>(
          orElse: () => WebViewBottomSheetRouteArgs(
                url: queryParams.optString('url'),
                title: queryParams.optString(
                  'title',
                  "MTrade",
                ),
                showTitle: queryParams.optBool(
                  'showTitle',
                  true,
                ),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i152.loadLibrary,
          () => _i152.WebViewBottomSheet(
            key: args.key,
            url: args.url,
            title: args.title,
            showTitle: args.showTitle,
          ),
        ),
      );
    },
    WebViewRoute.name: (routeData) {
      final queryParams = routeData.queryParams;
      final args = routeData.argsAs<WebViewRouteArgs>(
          orElse: () => WebViewRouteArgs(
                url: queryParams.optString('url'),
                title: queryParams.optString(
                  'title',
                  "MTrade",
                ),
                showTitle: queryParams.optBool(
                  'showTitle',
                  true,
                ),
                isShowNotificationButton:
                    queryParams.optBool('isShowNotificationButton'),
                indexTabNotification:
                    queryParams.optInt('indexTabNotification'),
                isBackableInside: queryParams.optBool('isBackableInside'),
                urlsStack: queryParams.get('urlsStack'),
                unbackableURLs: queryParams.get('unbackableURLs'),
                needDecode: queryParams.getBool(
                  'needDecode',
                  true,
                ),
                injectFunc: queryParams.optString('injectFunc'),
              ));
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i153.loadLibrary,
          () => _i153.WebViewPage(
            key: args.key,
            url: args.url,
            title: args.title,
            showTitle: args.showTitle,
            isShowNotificationButton: args.isShowNotificationButton,
            indexTabNotification: args.indexTabNotification,
            isBackableInside: args.isBackableInside,
            urlsStack: args.urlsStack,
            unbackableURLs: args.unbackableURLs,
            needDecode: args.needDecode,
            injectFunc: args.injectFunc,
          ),
        ),
      );
    },
    WebViewPaymentMethodBottomSheetRoute.name: (routeData) {
      final args = routeData.argsAs<WebViewPaymentMethodBottomSheetRouteArgs>(
          orElse: () => const WebViewPaymentMethodBottomSheetRouteArgs());
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i154.loadLibrary,
          () => _i154.WebViewPaymentMethodBottomSheet(
            key: args.key,
            title: args.title,
            wardCode: args.wardCode,
            districtCode: args.districtCode,
            provinceCode: args.provinceCode,
            totalAmount: args.totalAmount,
            orderItems: args.orderItems,
          ),
        ),
      );
    },
    WithdrawIncomeOTPRoute.name: (routeData) {
      final args = routeData.argsAs<WithdrawIncomeOTPRouteArgs>();
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i155.loadLibrary,
          () => _i157.WrappedRoute(
              child: _i155.WithdrawIncomeOTPPage(
            key: args.key,
            phoneNumber: args.phoneNumber,
            transactionBankID: args.transactionBankID,
            transactionMoney: args.transactionMoney,
            latitude: args.latitude,
            longitude: args.longitude,
          )),
        ),
      );
    },
    WithdrawIncomeRoute.name: (routeData) {
      return _i157.AutoRoutePage<dynamic>(
        routeData: routeData,
        child: _i157.DeferredWidget(
          _i156.loadLibrary,
          () => _i156.WithdrawIncomePage(),
        ),
      );
    },
  };
}

/// generated route for
/// [_i1.AboutPage]
class AboutRoute extends _i157.PageRouteInfo<void> {
  const AboutRoute({List<_i157.PageRouteInfo>? children})
      : super(
          AboutRoute.name,
          initialChildren: children,
        );

  static const String name = 'AboutRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i2.AcademyCheckInEventPage]
class AcademyCheckInEventRoute
    extends _i157.PageRouteInfo<AcademyCheckInEventRouteArgs> {
  AcademyCheckInEventRoute({
    _i158.Key? key,
    String? eventID,
    String? status,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          AcademyCheckInEventRoute.name,
          args: AcademyCheckInEventRouteArgs(
            key: key,
            eventID: eventID,
            status: status,
          ),
          rawQueryParams: {
            'eventID': eventID,
            'status': status,
          },
          initialChildren: children,
        );

  static const String name = 'AcademyCheckInEventRoute';

  static const _i157.PageInfo<AcademyCheckInEventRouteArgs> page =
      _i157.PageInfo<AcademyCheckInEventRouteArgs>(name);
}

class AcademyCheckInEventRouteArgs {
  const AcademyCheckInEventRouteArgs({
    this.key,
    this.eventID,
    this.status,
  });

  final _i158.Key? key;

  final String? eventID;

  final String? status;

  @override
  String toString() {
    return 'AcademyCheckInEventRouteArgs{key: $key, eventID: $eventID, status: $status}';
  }
}

/// generated route for
/// [_i3.AcademyCheckOutEventPage]
class AcademyCheckOutEventRoute
    extends _i157.PageRouteInfo<AcademyCheckOutEventRouteArgs> {
  AcademyCheckOutEventRoute({
    _i158.Key? key,
    String? eventID,
    String? status,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          AcademyCheckOutEventRoute.name,
          args: AcademyCheckOutEventRouteArgs(
            key: key,
            eventID: eventID,
            status: status,
          ),
          rawQueryParams: {
            'eventID': eventID,
            'status': status,
          },
          initialChildren: children,
        );

  static const String name = 'AcademyCheckOutEventRoute';

  static const _i157.PageInfo<AcademyCheckOutEventRouteArgs> page =
      _i157.PageInfo<AcademyCheckOutEventRouteArgs>(name);
}

class AcademyCheckOutEventRouteArgs {
  const AcademyCheckOutEventRouteArgs({
    this.key,
    this.eventID,
    this.status,
  });

  final _i158.Key? key;

  final String? eventID;

  final String? status;

  @override
  String toString() {
    return 'AcademyCheckOutEventRouteArgs{key: $key, eventID: $eventID, status: $status}';
  }
}

/// generated route for
/// [_i4.AcademyEventDetailPage]
class AcademyEventDetailRoute
    extends _i157.PageRouteInfo<AcademyEventDetailRouteArgs> {
  AcademyEventDetailRoute({
    _i158.Key? key,
    String? eventID,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          AcademyEventDetailRoute.name,
          args: AcademyEventDetailRouteArgs(
            key: key,
            eventID: eventID,
          ),
          rawQueryParams: {'eventID': eventID},
          initialChildren: children,
        );

  static const String name = 'AcademyEventDetailRoute';

  static const _i157.PageInfo<AcademyEventDetailRouteArgs> page =
      _i157.PageInfo<AcademyEventDetailRouteArgs>(name);
}

class AcademyEventDetailRouteArgs {
  const AcademyEventDetailRouteArgs({
    this.key,
    this.eventID,
  });

  final _i158.Key? key;

  final String? eventID;

  @override
  String toString() {
    return 'AcademyEventDetailRouteArgs{key: $key, eventID: $eventID}';
  }
}

/// generated route for
/// [_i5.AcademyPage]
class AcademyRoute extends _i157.PageRouteInfo<void> {
  const AcademyRoute({List<_i157.PageRouteInfo>? children})
      : super(
          AcademyRoute.name,
          initialChildren: children,
        );

  static const String name = 'AcademyRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i6.AcademyQuizPage]
class AcademyQuizRoute extends _i157.PageRouteInfo<AcademyQuizRouteArgs> {
  AcademyQuizRoute({
    _i158.Key? key,
    _i159.AcademyEventDetailModel? event,
    String? mobilePhone,
    bool? readOnly,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          AcademyQuizRoute.name,
          args: AcademyQuizRouteArgs(
            key: key,
            event: event,
            mobilePhone: mobilePhone,
            readOnly: readOnly,
          ),
          initialChildren: children,
        );

  static const String name = 'AcademyQuizRoute';

  static const _i157.PageInfo<AcademyQuizRouteArgs> page =
      _i157.PageInfo<AcademyQuizRouteArgs>(name);
}

class AcademyQuizRouteArgs {
  const AcademyQuizRouteArgs({
    this.key,
    this.event,
    this.mobilePhone,
    this.readOnly,
  });

  final _i158.Key? key;

  final _i159.AcademyEventDetailModel? event;

  final String? mobilePhone;

  final bool? readOnly;

  @override
  String toString() {
    return 'AcademyQuizRouteArgs{key: $key, event: $event, mobilePhone: $mobilePhone, readOnly: $readOnly}';
  }
}

/// generated route for
/// [_i7.AcademyRegisterEventPage]
class AcademyRegisterEventRoute
    extends _i157.PageRouteInfo<AcademyRegisterEventRouteArgs> {
  AcademyRegisterEventRoute({
    _i158.Key? key,
    String? eventID,
    String? status,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          AcademyRegisterEventRoute.name,
          args: AcademyRegisterEventRouteArgs(
            key: key,
            eventID: eventID,
            status: status,
          ),
          rawQueryParams: {
            'eventID': eventID,
            'status': status,
          },
          initialChildren: children,
        );

  static const String name = 'AcademyRegisterEventRoute';

  static const _i157.PageInfo<AcademyRegisterEventRouteArgs> page =
      _i157.PageInfo<AcademyRegisterEventRouteArgs>(name);
}

class AcademyRegisterEventRouteArgs {
  const AcademyRegisterEventRouteArgs({
    this.key,
    this.eventID,
    this.status,
  });

  final _i158.Key? key;

  final String? eventID;

  final String? status;

  @override
  String toString() {
    return 'AcademyRegisterEventRouteArgs{key: $key, eventID: $eventID, status: $status}';
  }
}

/// generated route for
/// [_i8.AcademyRegisteredEventPage]
class AcademyRegisteredEventRoute
    extends _i157.PageRouteInfo<AcademyRegisteredEventRouteArgs> {
  AcademyRegisteredEventRoute({
    _i160.Key? key,
    required String? status,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          AcademyRegisteredEventRoute.name,
          args: AcademyRegisteredEventRouteArgs(
            key: key,
            status: status,
          ),
          initialChildren: children,
        );

  static const String name = 'AcademyRegisteredEventRoute';

  static const _i157.PageInfo<AcademyRegisteredEventRouteArgs> page =
      _i157.PageInfo<AcademyRegisteredEventRouteArgs>(name);
}

class AcademyRegisteredEventRouteArgs {
  const AcademyRegisteredEventRouteArgs({
    this.key,
    required this.status,
  });

  final _i160.Key? key;

  final String? status;

  @override
  String toString() {
    return 'AcademyRegisteredEventRouteArgs{key: $key, status: $status}';
  }
}

/// generated route for
/// [_i9.AccountSettingPage]
class AccountSettingRoute extends _i157.PageRouteInfo<void> {
  const AccountSettingRoute({List<_i157.PageRouteInfo>? children})
      : super(
          AccountSettingRoute.name,
          initialChildren: children,
        );

  static const String name = 'AccountSettingRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i10.AccountVisibleSettingPage]
class AccountVisibleSettingRoute extends _i157.PageRouteInfo<void> {
  const AccountVisibleSettingRoute({List<_i157.PageRouteInfo>? children})
      : super(
          AccountVisibleSettingRoute.name,
          initialChildren: children,
        );

  static const String name = 'AccountVisibleSettingRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i11.AdLinkListPage]
class AdLinkListRoute extends _i157.PageRouteInfo<void> {
  const AdLinkListRoute({List<_i157.PageRouteInfo>? children})
      : super(
          AdLinkListRoute.name,
          initialChildren: children,
        );

  static const String name = 'AdLinkListRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i12.AdLinkPage]
class AdLinkRoute extends _i157.PageRouteInfo<void> {
  const AdLinkRoute({List<_i157.PageRouteInfo>? children})
      : super(
          AdLinkRoute.name,
          initialChildren: children,
        );

  static const String name = 'AdLinkRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i13.AdLinkStatisticPage]
class AdLinkStatisticRoute extends _i157.PageRouteInfo<void> {
  const AdLinkStatisticRoute({List<_i157.PageRouteInfo>? children})
      : super(
          AdLinkStatisticRoute.name,
          initialChildren: children,
        );

  static const String name = 'AdLinkStatisticRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i14.AddBIDVBankAccountPage]
class AddBIDVBankAccountRoute extends _i157.PageRouteInfo<void> {
  const AddBIDVBankAccountRoute({List<_i157.PageRouteInfo>? children})
      : super(
          AddBIDVBankAccountRoute.name,
          initialChildren: children,
        );

  static const String name = 'AddBIDVBankAccountRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i15.AddBankAccountPage]
class AddBankAccountRoute extends _i157.PageRouteInfo<void> {
  const AddBankAccountRoute({List<_i157.PageRouteInfo>? children})
      : super(
          AddBankAccountRoute.name,
          initialChildren: children,
        );

  static const String name = 'AddBankAccountRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i16.AllChatSupportRequestListPage]
class AllChatSupportRequestListRoute
    extends _i157.PageRouteInfo<AllChatSupportRequestListRouteArgs> {
  AllChatSupportRequestListRoute({
    _i158.Key? key,
    required String type,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          AllChatSupportRequestListRoute.name,
          args: AllChatSupportRequestListRouteArgs(
            key: key,
            type: type,
          ),
          initialChildren: children,
        );

  static const String name = 'AllChatSupportRequestListRoute';

  static const _i157.PageInfo<AllChatSupportRequestListRouteArgs> page =
      _i157.PageInfo<AllChatSupportRequestListRouteArgs>(name);
}

class AllChatSupportRequestListRouteArgs {
  const AllChatSupportRequestListRouteArgs({
    this.key,
    required this.type,
  });

  final _i158.Key? key;

  final String type;

  @override
  String toString() {
    return 'AllChatSupportRequestListRouteArgs{key: $key, type: $type}';
  }
}

/// generated route for
/// [_i17.BankAccountDetailPage]
class BankAccountDetailRoute
    extends _i157.PageRouteInfo<BankAccountDetailRouteArgs> {
  BankAccountDetailRoute({
    _i161.Key? key,
    required _i162.BankAccountModel bankAccount,
    bool isCanRemoveBankAccount = false,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          BankAccountDetailRoute.name,
          args: BankAccountDetailRouteArgs(
            key: key,
            bankAccount: bankAccount,
            isCanRemoveBankAccount: isCanRemoveBankAccount,
          ),
          initialChildren: children,
        );

  static const String name = 'BankAccountDetailRoute';

  static const _i157.PageInfo<BankAccountDetailRouteArgs> page =
      _i157.PageInfo<BankAccountDetailRouteArgs>(name);
}

class BankAccountDetailRouteArgs {
  const BankAccountDetailRouteArgs({
    this.key,
    required this.bankAccount,
    this.isCanRemoveBankAccount = false,
  });

  final _i161.Key? key;

  final _i162.BankAccountModel bankAccount;

  final bool isCanRemoveBankAccount;

  @override
  String toString() {
    return 'BankAccountDetailRouteArgs{key: $key, bankAccount: $bankAccount, isCanRemoveBankAccount: $isCanRemoveBankAccount}';
  }
}

/// generated route for
/// [_i18.BankAccountPage]
class BankAccountRoute extends _i157.PageRouteInfo<BankAccountRouteArgs> {
  BankAccountRoute({
    _i158.Key? key,
    int? initIndex,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          BankAccountRoute.name,
          args: BankAccountRouteArgs(
            key: key,
            initIndex: initIndex,
          ),
          rawQueryParams: {'initKey': initIndex},
          initialChildren: children,
        );

  static const String name = 'BankAccountRoute';

  static const _i157.PageInfo<BankAccountRouteArgs> page =
      _i157.PageInfo<BankAccountRouteArgs>(name);
}

class BankAccountRouteArgs {
  const BankAccountRouteArgs({
    this.key,
    this.initIndex,
  });

  final _i158.Key? key;

  final int? initIndex;

  @override
  String toString() {
    return 'BankAccountRouteArgs{key: $key, initIndex: $initIndex}';
  }
}

/// generated route for
/// [_i19.BankAccountTabPage]
class BankAccountTabRoute extends _i157.PageRouteInfo<void> {
  const BankAccountTabRoute({List<_i157.PageRouteInfo>? children})
      : super(
          BankAccountTabRoute.name,
          initialChildren: children,
        );

  static const String name = 'BankAccountTabRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i20.BlockUsersPage]
class BlockUsersRoute extends _i157.PageRouteInfo<void> {
  const BlockUsersRoute({List<_i157.PageRouteInfo>? children})
      : super(
          BlockUsersRoute.name,
          initialChildren: children,
        );

  static const String name = 'BlockUsersRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i21.BottomSheetRegisteredEventPage]
class BottomSheetRegisteredEventRoute
    extends _i157.PageRouteInfo<BottomSheetRegisteredEventRouteArgs> {
  BottomSheetRegisteredEventRoute({
    _i158.Key? key,
    String title = 'Danh sách sự kiện đã đăng ký',
    List<_i157.PageRouteInfo>? children,
  }) : super(
          BottomSheetRegisteredEventRoute.name,
          args: BottomSheetRegisteredEventRouteArgs(
            key: key,
            title: title,
          ),
          initialChildren: children,
        );

  static const String name = 'BottomSheetRegisteredEventRoute';

  static const _i157.PageInfo<BottomSheetRegisteredEventRouteArgs> page =
      _i157.PageInfo<BottomSheetRegisteredEventRouteArgs>(name);
}

class BottomSheetRegisteredEventRouteArgs {
  const BottomSheetRegisteredEventRouteArgs({
    this.key,
    this.title = 'Danh sách sự kiện đã đăng ký',
  });

  final _i158.Key? key;

  final String title;

  @override
  String toString() {
    return 'BottomSheetRegisteredEventRouteArgs{key: $key, title: $title}';
  }
}

/// generated route for
/// [_i22.ChatAddContactPage]
class ChatAddContactRoute extends _i157.PageRouteInfo<void> {
  const ChatAddContactRoute({List<_i157.PageRouteInfo>? children})
      : super(
          ChatAddContactRoute.name,
          initialChildren: children,
        );

  static const String name = 'ChatAddContactRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i23.ChatAddMemberThreadPage]
class ChatAddMemberThreadRoute
    extends _i157.PageRouteInfo<ChatAddMemberThreadRouteArgs> {
  ChatAddMemberThreadRoute({
    _i158.Key? key,
    required _i163.ChatThreadModel thread,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ChatAddMemberThreadRoute.name,
          args: ChatAddMemberThreadRouteArgs(
            key: key,
            thread: thread,
          ),
          initialChildren: children,
        );

  static const String name = 'ChatAddMemberThreadRoute';

  static const _i157.PageInfo<ChatAddMemberThreadRouteArgs> page =
      _i157.PageInfo<ChatAddMemberThreadRouteArgs>(name);
}

class ChatAddMemberThreadRouteArgs {
  const ChatAddMemberThreadRouteArgs({
    this.key,
    required this.thread,
  });

  final _i158.Key? key;

  final _i163.ChatThreadModel thread;

  @override
  String toString() {
    return 'ChatAddMemberThreadRouteArgs{key: $key, thread: $thread}';
  }
}

/// generated route for
/// [_i24.ChatBotPage]
class ChatBotRoute extends _i157.PageRouteInfo<ChatBotRouteArgs> {
  ChatBotRoute({
    _i158.Key? key,
    String? title,
    String? botID,
    String? type,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ChatBotRoute.name,
          args: ChatBotRouteArgs(
            key: key,
            title: title,
            botID: botID,
            type: type,
          ),
          rawQueryParams: {
            'title': title,
            'botID': botID,
            'type': type,
          },
          initialChildren: children,
        );

  static const String name = 'ChatBotRoute';

  static const _i157.PageInfo<ChatBotRouteArgs> page =
      _i157.PageInfo<ChatBotRouteArgs>(name);
}

class ChatBotRouteArgs {
  const ChatBotRouteArgs({
    this.key,
    this.title,
    this.botID,
    this.type,
  });

  final _i158.Key? key;

  final String? title;

  final String? botID;

  final String? type;

  @override
  String toString() {
    return 'ChatBotRouteArgs{key: $key, title: $title, botID: $botID, type: $type}';
  }
}

/// generated route for
/// [_i25.ChatContactRequestPage]
class ChatContactRequestRoute
    extends _i157.PageRouteInfo<ChatContactRequestRouteArgs> {
  ChatContactRequestRoute({
    _i158.Key? key,
    List<_i164.ChatRequestContactModel>? invitations = const [],
    List<_i164.ChatRequestContactModel>? sentRequests = const [],
    int? initialIndex = 0,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ChatContactRequestRoute.name,
          args: ChatContactRequestRouteArgs(
            key: key,
            invitations: invitations,
            sentRequests: sentRequests,
            initialIndex: initialIndex,
          ),
          initialChildren: children,
        );

  static const String name = 'ChatContactRequestRoute';

  static const _i157.PageInfo<ChatContactRequestRouteArgs> page =
      _i157.PageInfo<ChatContactRequestRouteArgs>(name);
}

class ChatContactRequestRouteArgs {
  const ChatContactRequestRouteArgs({
    this.key,
    this.invitations = const [],
    this.sentRequests = const [],
    this.initialIndex = 0,
  });

  final _i158.Key? key;

  final List<_i164.ChatRequestContactModel>? invitations;

  final List<_i164.ChatRequestContactModel>? sentRequests;

  final int? initialIndex;

  @override
  String toString() {
    return 'ChatContactRequestRouteArgs{key: $key, invitations: $invitations, sentRequests: $sentRequests, initialIndex: $initialIndex}';
  }
}

/// generated route for
/// [_i26.ChatContactRequestReceivedPage]
class ChatContactRequestReceivedRoute extends _i157.PageRouteInfo<void> {
  const ChatContactRequestReceivedRoute({List<_i157.PageRouteInfo>? children})
      : super(
          ChatContactRequestReceivedRoute.name,
          initialChildren: children,
        );

  static const String name = 'ChatContactRequestReceivedRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i27.ChatContactRequestSentPage]
class ChatContactRequestSentRoute extends _i157.PageRouteInfo<void> {
  const ChatContactRequestSentRoute({List<_i157.PageRouteInfo>? children})
      : super(
          ChatContactRequestSentRoute.name,
          initialChildren: children,
        );

  static const String name = 'ChatContactRequestSentRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i28.ChatContactsPage]
class ChatContactsRoute extends _i157.PageRouteInfo<void> {
  const ChatContactsRoute({List<_i157.PageRouteInfo>? children})
      : super(
          ChatContactsRoute.name,
          initialChildren: children,
        );

  static const String name = 'ChatContactsRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i29.ChatForwardMessagePage]
class ChatForwardMessageRoute
    extends _i157.PageRouteInfo<ChatForwardMessageRouteArgs> {
  ChatForwardMessageRoute({
    _i158.Key? key,
    _i165.MessageModel? message,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ChatForwardMessageRoute.name,
          args: ChatForwardMessageRouteArgs(
            key: key,
            message: message,
          ),
          rawQueryParams: {'message': message},
          initialChildren: children,
        );

  static const String name = 'ChatForwardMessageRoute';

  static const _i157.PageInfo<ChatForwardMessageRouteArgs> page =
      _i157.PageInfo<ChatForwardMessageRouteArgs>(name);
}

class ChatForwardMessageRouteArgs {
  const ChatForwardMessageRouteArgs({
    this.key,
    this.message,
  });

  final _i158.Key? key;

  final _i165.MessageModel? message;

  @override
  String toString() {
    return 'ChatForwardMessageRouteArgs{key: $key, message: $message}';
  }
}

/// generated route for
/// [_i30.ChatGeneralImagePage]
class ChatGeneralImageRoute extends _i157.PageRouteInfo<void> {
  const ChatGeneralImageRoute({List<_i157.PageRouteInfo>? children})
      : super(
          ChatGeneralImageRoute.name,
          initialChildren: children,
        );

  static const String name = 'ChatGeneralImageRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i31.ChatGeneralLinkPage]
class ChatGeneralLinkRoute extends _i157.PageRouteInfo<void> {
  const ChatGeneralLinkRoute({List<_i157.PageRouteInfo>? children})
      : super(
          ChatGeneralLinkRoute.name,
          initialChildren: children,
        );

  static const String name = 'ChatGeneralLinkRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i32.ChatGeneralMediaPage]
class ChatGeneralMediaRoute
    extends _i157.PageRouteInfo<ChatGeneralMediaRouteArgs> {
  ChatGeneralMediaRoute({
    _i158.Key? key,
    required _i163.ChatThreadModel thread,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ChatGeneralMediaRoute.name,
          args: ChatGeneralMediaRouteArgs(
            key: key,
            thread: thread,
          ),
          initialChildren: children,
        );

  static const String name = 'ChatGeneralMediaRoute';

  static const _i157.PageInfo<ChatGeneralMediaRouteArgs> page =
      _i157.PageInfo<ChatGeneralMediaRouteArgs>(name);
}

class ChatGeneralMediaRouteArgs {
  const ChatGeneralMediaRouteArgs({
    this.key,
    required this.thread,
  });

  final _i158.Key? key;

  final _i163.ChatThreadModel thread;

  @override
  String toString() {
    return 'ChatGeneralMediaRouteArgs{key: $key, thread: $thread}';
  }
}

/// generated route for
/// [_i33.ChatGeneralVideoPage]
class ChatGeneralVideoRoute extends _i157.PageRouteInfo<void> {
  const ChatGeneralVideoRoute({List<_i157.PageRouteInfo>? children})
      : super(
          ChatGeneralVideoRoute.name,
          initialChildren: children,
        );

  static const String name = 'ChatGeneralVideoRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i34.ChatMemberThreadPage]
class ChatMemberThreadRoute
    extends _i157.PageRouteInfo<ChatMemberThreadRouteArgs> {
  ChatMemberThreadRoute({
    _i158.Key? key,
    required _i163.ChatThreadModel thread,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ChatMemberThreadRoute.name,
          args: ChatMemberThreadRouteArgs(
            key: key,
            thread: thread,
          ),
          initialChildren: children,
        );

  static const String name = 'ChatMemberThreadRoute';

  static const _i157.PageInfo<ChatMemberThreadRouteArgs> page =
      _i157.PageInfo<ChatMemberThreadRouteArgs>(name);
}

class ChatMemberThreadRouteArgs {
  const ChatMemberThreadRouteArgs({
    this.key,
    required this.thread,
  });

  final _i158.Key? key;

  final _i163.ChatThreadModel thread;

  @override
  String toString() {
    return 'ChatMemberThreadRouteArgs{key: $key, thread: $thread}';
  }
}

/// generated route for
/// [_i35.ChatPage]
class ChatRoute extends _i157.PageRouteInfo<ChatRouteArgs> {
  ChatRoute({
    _i158.Key? key,
    String? chatBotID,
    String? chatUserID,
    String? threadID,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ChatRoute.name,
          args: ChatRouteArgs(
            key: key,
            chatBotID: chatBotID,
            chatUserID: chatUserID,
            threadID: threadID,
          ),
          rawQueryParams: {
            'chatBotID': chatBotID,
            'chatUserID': chatUserID,
            'threadID': threadID,
          },
          initialChildren: children,
        );

  static const String name = 'ChatRoute';

  static const _i157.PageInfo<ChatRouteArgs> page =
      _i157.PageInfo<ChatRouteArgs>(name);
}

class ChatRouteArgs {
  const ChatRouteArgs({
    this.key,
    this.chatBotID,
    this.chatUserID,
    this.threadID,
  });

  final _i158.Key? key;

  final String? chatBotID;

  final String? chatUserID;

  final String? threadID;

  @override
  String toString() {
    return 'ChatRouteArgs{key: $key, chatBotID: $chatBotID, chatUserID: $chatUserID, threadID: $threadID}';
  }
}

/// generated route for
/// [_i36.ChatPreviewImagePage]
class ChatPreviewImageRoute
    extends _i157.PageRouteInfo<ChatPreviewImageRouteArgs> {
  ChatPreviewImageRoute({
    _i158.Key? key,
    List<String>? images,
    int initialIndex = 0,
    dynamic Function(int)? onForwardMessage,
    dynamic Function(int)? onDeleteMessage,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ChatPreviewImageRoute.name,
          args: ChatPreviewImageRouteArgs(
            key: key,
            images: images,
            initialIndex: initialIndex,
            onForwardMessage: onForwardMessage,
            onDeleteMessage: onDeleteMessage,
          ),
          initialChildren: children,
        );

  static const String name = 'ChatPreviewImageRoute';

  static const _i157.PageInfo<ChatPreviewImageRouteArgs> page =
      _i157.PageInfo<ChatPreviewImageRouteArgs>(name);
}

class ChatPreviewImageRouteArgs {
  const ChatPreviewImageRouteArgs({
    this.key,
    this.images,
    this.initialIndex = 0,
    this.onForwardMessage,
    this.onDeleteMessage,
  });

  final _i158.Key? key;

  final List<String>? images;

  final int initialIndex;

  final dynamic Function(int)? onForwardMessage;

  final dynamic Function(int)? onDeleteMessage;

  @override
  String toString() {
    return 'ChatPreviewImageRouteArgs{key: $key, images: $images, initialIndex: $initialIndex, onForwardMessage: $onForwardMessage, onDeleteMessage: $onDeleteMessage}';
  }
}

/// generated route for
/// [_i37.ChatPreviewVideoPage]
class ChatPreviewVideoRoute
    extends _i157.PageRouteInfo<ChatPreviewVideoRouteArgs> {
  ChatPreviewVideoRoute({
    _i158.Key? key,
    List<String>? videos,
    int initialIndex = 0,
    dynamic Function(int)? onForwardMessage,
    dynamic Function(int)? onDeleteMessage,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ChatPreviewVideoRoute.name,
          args: ChatPreviewVideoRouteArgs(
            key: key,
            videos: videos,
            initialIndex: initialIndex,
            onForwardMessage: onForwardMessage,
            onDeleteMessage: onDeleteMessage,
          ),
          initialChildren: children,
        );

  static const String name = 'ChatPreviewVideoRoute';

  static const _i157.PageInfo<ChatPreviewVideoRouteArgs> page =
      _i157.PageInfo<ChatPreviewVideoRouteArgs>(name);
}

class ChatPreviewVideoRouteArgs {
  const ChatPreviewVideoRouteArgs({
    this.key,
    this.videos,
    this.initialIndex = 0,
    this.onForwardMessage,
    this.onDeleteMessage,
  });

  final _i158.Key? key;

  final List<String>? videos;

  final int initialIndex;

  final dynamic Function(int)? onForwardMessage;

  final dynamic Function(int)? onDeleteMessage;

  @override
  String toString() {
    return 'ChatPreviewVideoRouteArgs{key: $key, videos: $videos, initialIndex: $initialIndex, onForwardMessage: $onForwardMessage, onDeleteMessage: $onDeleteMessage}';
  }
}

/// generated route for
/// [_i38.ChatSearchContactPage]
class ChatSearchContactRoute
    extends _i157.PageRouteInfo<ChatSearchContactRouteArgs> {
  ChatSearchContactRoute({
    _i158.Key? key,
    required List<_i166.ChatContactModel> contacts,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ChatSearchContactRoute.name,
          args: ChatSearchContactRouteArgs(
            key: key,
            contacts: contacts,
          ),
          initialChildren: children,
        );

  static const String name = 'ChatSearchContactRoute';

  static const _i157.PageInfo<ChatSearchContactRouteArgs> page =
      _i157.PageInfo<ChatSearchContactRouteArgs>(name);
}

class ChatSearchContactRouteArgs {
  const ChatSearchContactRouteArgs({
    this.key,
    required this.contacts,
  });

  final _i158.Key? key;

  final List<_i166.ChatContactModel> contacts;

  @override
  String toString() {
    return 'ChatSearchContactRouteArgs{key: $key, contacts: $contacts}';
  }
}

/// generated route for
/// [_i39.ChatSettingPage]
class ChatSettingRoute extends _i157.PageRouteInfo<ChatSettingRouteArgs> {
  ChatSettingRoute({
    _i158.Key? key,
    required _i163.ChatThreadModel thread,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ChatSettingRoute.name,
          args: ChatSettingRouteArgs(
            key: key,
            thread: thread,
          ),
          initialChildren: children,
        );

  static const String name = 'ChatSettingRoute';

  static const _i157.PageInfo<ChatSettingRouteArgs> page =
      _i157.PageInfo<ChatSettingRouteArgs>(name);
}

class ChatSettingRouteArgs {
  const ChatSettingRouteArgs({
    this.key,
    required this.thread,
  });

  final _i158.Key? key;

  final _i163.ChatThreadModel thread;

  @override
  String toString() {
    return 'ChatSettingRouteArgs{key: $key, thread: $thread}';
  }
}

/// generated route for
/// [_i40.ChatSupportRequestListPage]
class ChatSupportRequestListRoute
    extends _i157.PageRouteInfo<ChatSupportRequestListRouteArgs> {
  ChatSupportRequestListRoute({
    _i158.Key? key,
    required String type,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ChatSupportRequestListRoute.name,
          args: ChatSupportRequestListRouteArgs(
            key: key,
            type: type,
          ),
          initialChildren: children,
        );

  static const String name = 'ChatSupportRequestListRoute';

  static const _i157.PageInfo<ChatSupportRequestListRouteArgs> page =
      _i157.PageInfo<ChatSupportRequestListRouteArgs>(name);
}

class ChatSupportRequestListRouteArgs {
  const ChatSupportRequestListRouteArgs({
    this.key,
    required this.type,
  });

  final _i158.Key? key;

  final String type;

  @override
  String toString() {
    return 'ChatSupportRequestListRouteArgs{key: $key, type: $type}';
  }
}

/// generated route for
/// [_i24.ChatSupportRequestPage]
class ChatSupportRequestRoute
    extends _i157.PageRouteInfo<ChatSupportRequestRouteArgs> {
  ChatSupportRequestRoute({
    _i158.Key? key,
    String? botID,
    String? type,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ChatSupportRequestRoute.name,
          args: ChatSupportRequestRouteArgs(
            key: key,
            botID: botID,
            type: type,
          ),
          initialChildren: children,
        );

  static const String name = 'ChatSupportRequestRoute';

  static const _i157.PageInfo<ChatSupportRequestRouteArgs> page =
      _i157.PageInfo<ChatSupportRequestRouteArgs>(name);
}

class ChatSupportRequestRouteArgs {
  const ChatSupportRequestRouteArgs({
    this.key,
    this.botID,
    this.type,
  });

  final _i158.Key? key;

  final String? botID;

  final String? type;

  @override
  String toString() {
    return 'ChatSupportRequestRouteArgs{key: $key, botID: $botID, type: $type}';
  }
}

/// generated route for
/// [_i41.ChatSupportTicketPage]
class ChatSupportTicketRoute
    extends _i157.PageRouteInfo<ChatSupportTicketRouteArgs> {
  ChatSupportTicketRoute({
    _i158.Key? key,
    required String userId,
    required String workspaceId,
    required String? themeColor,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ChatSupportTicketRoute.name,
          args: ChatSupportTicketRouteArgs(
            key: key,
            userId: userId,
            workspaceId: workspaceId,
            themeColor: themeColor,
          ),
          initialChildren: children,
        );

  static const String name = 'ChatSupportTicketRoute';

  static const _i157.PageInfo<ChatSupportTicketRouteArgs> page =
      _i157.PageInfo<ChatSupportTicketRouteArgs>(name);
}

class ChatSupportTicketRouteArgs {
  const ChatSupportTicketRouteArgs({
    this.key,
    required this.userId,
    required this.workspaceId,
    required this.themeColor,
  });

  final _i158.Key? key;

  final String userId;

  final String workspaceId;

  final String? themeColor;

  @override
  String toString() {
    return 'ChatSupportTicketRouteArgs{key: $key, userId: $userId, workspaceId: $workspaceId, themeColor: $themeColor}';
  }
}

/// generated route for
/// [_i42.ChatThreadPage]
class ChatThreadRoute extends _i157.PageRouteInfo<void> {
  const ChatThreadRoute({List<_i157.PageRouteInfo>? children})
      : super(
          ChatThreadRoute.name,
          initialChildren: children,
        );

  static const String name = 'ChatThreadRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i43.ClientDetailMiddlePage]
class ClientDetailMiddleRoute
    extends _i157.PageRouteInfo<ClientDetailMiddleRouteArgs> {
  ClientDetailMiddleRoute({
    _i158.Key? key,
    _i167.ClientDetailType? type,
    String? clientID,
    int? initialIndex,
    String? itemID,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ClientDetailMiddleRoute.name,
          args: ClientDetailMiddleRouteArgs(
            key: key,
            type: type,
            clientID: clientID,
            initialIndex: initialIndex,
            itemID: itemID,
          ),
          rawQueryParams: {
            'ID': clientID,
            'itemID': itemID,
          },
          initialChildren: children,
        );

  static const String name = 'ClientDetailMiddleRoute';

  static const _i157.PageInfo<ClientDetailMiddleRouteArgs> page =
      _i157.PageInfo<ClientDetailMiddleRouteArgs>(name);
}

class ClientDetailMiddleRouteArgs {
  const ClientDetailMiddleRouteArgs({
    this.key,
    this.type,
    this.clientID,
    this.initialIndex,
    this.itemID,
  });

  final _i158.Key? key;

  final _i167.ClientDetailType? type;

  final String? clientID;

  final int? initialIndex;

  final String? itemID;

  @override
  String toString() {
    return 'ClientDetailMiddleRouteArgs{key: $key, type: $type, clientID: $clientID, initialIndex: $initialIndex, itemID: $itemID}';
  }
}

/// generated route for
/// [_i44.ClientListPage]
class ClientListRoute extends _i157.PageRouteInfo<void> {
  const ClientListRoute({List<_i157.PageRouteInfo>? children})
      : super(
          ClientListRoute.name,
          initialChildren: children,
        );

  static const String name = 'ClientListRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i45.ClientPage]
class ClientRoute extends _i157.PageRouteInfo<void> {
  const ClientRoute({List<_i157.PageRouteInfo>? children})
      : super(
          ClientRoute.name,
          initialChildren: children,
        );

  static const String name = 'ClientRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i46.ClientStatisticPage]
class ClientStatisticRoute extends _i157.PageRouteInfo<void> {
  const ClientStatisticRoute({List<_i157.PageRouteInfo>? children})
      : super(
          ClientStatisticRoute.name,
          initialChildren: children,
        );

  static const String name = 'ClientStatisticRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i47.ClosedChatSupportRequestListPage]
class ClosedChatSupportRequestListRoute
    extends _i157.PageRouteInfo<ClosedChatSupportRequestListRouteArgs> {
  ClosedChatSupportRequestListRoute({
    _i158.Key? key,
    required String type,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ClosedChatSupportRequestListRoute.name,
          args: ClosedChatSupportRequestListRouteArgs(
            key: key,
            type: type,
          ),
          initialChildren: children,
        );

  static const String name = 'ClosedChatSupportRequestListRoute';

  static const _i157.PageInfo<ClosedChatSupportRequestListRouteArgs> page =
      _i157.PageInfo<ClosedChatSupportRequestListRouteArgs>(name);
}

class ClosedChatSupportRequestListRouteArgs {
  const ClosedChatSupportRequestListRouteArgs({
    this.key,
    required this.type,
  });

  final _i158.Key? key;

  final String type;

  @override
  String toString() {
    return 'ClosedChatSupportRequestListRouteArgs{key: $key, type: $type}';
  }
}

/// generated route for
/// [_i48.CollaboratorNeedToCarePage]
class CollaboratorNeedToCareRoute
    extends _i157.PageRouteInfo<CollaboratorNeedToCareRouteArgs> {
  CollaboratorNeedToCareRoute({
    _i158.Key? key,
    _i168.CollaboratorStatus? collaboratorStatus,
    int? initIndex,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          CollaboratorNeedToCareRoute.name,
          args: CollaboratorNeedToCareRouteArgs(
            key: key,
            collaboratorStatus: collaboratorStatus,
            initIndex: initIndex,
          ),
          rawQueryParams: {'initIndex': initIndex},
          initialChildren: children,
        );

  static const String name = 'CollaboratorNeedToCareRoute';

  static const _i157.PageInfo<CollaboratorNeedToCareRouteArgs> page =
      _i157.PageInfo<CollaboratorNeedToCareRouteArgs>(name);
}

class CollaboratorNeedToCareRouteArgs {
  const CollaboratorNeedToCareRouteArgs({
    this.key,
    this.collaboratorStatus,
    this.initIndex,
  });

  final _i158.Key? key;

  final _i168.CollaboratorStatus? collaboratorStatus;

  final int? initIndex;

  @override
  String toString() {
    return 'CollaboratorNeedToCareRouteArgs{key: $key, collaboratorStatus: $collaboratorStatus, initIndex: $initIndex}';
  }
}

/// generated route for
/// [_i49.CollaboratorPendingConfrimPage]
class CollaboratorPendingConfrimRoute
    extends _i157.PageRouteInfo<CollaboratorPendingConfrimRouteArgs> {
  CollaboratorPendingConfrimRoute({
    _i158.Key? key,
    String? id,
    dynamic Function(String?)? onRemoveItem,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          CollaboratorPendingConfrimRoute.name,
          args: CollaboratorPendingConfrimRouteArgs(
            key: key,
            id: id,
            onRemoveItem: onRemoveItem,
          ),
          rawQueryParams: {'ID': id},
          initialChildren: children,
        );

  static const String name = 'CollaboratorPendingConfrimRoute';

  static const _i157.PageInfo<CollaboratorPendingConfrimRouteArgs> page =
      _i157.PageInfo<CollaboratorPendingConfrimRouteArgs>(name);
}

class CollaboratorPendingConfrimRouteArgs {
  const CollaboratorPendingConfrimRouteArgs({
    this.key,
    this.id,
    this.onRemoveItem,
  });

  final _i158.Key? key;

  final String? id;

  final dynamic Function(String?)? onRemoveItem;

  @override
  String toString() {
    return 'CollaboratorPendingConfrimRouteArgs{key: $key, id: $id, onRemoveItem: $onRemoveItem}';
  }
}

/// generated route for
/// [_i50.CollaboratorPendingPage]
class CollaboratorPendingRoute
    extends _i157.PageRouteInfo<CollaboratorPendingRouteArgs> {
  CollaboratorPendingRoute({
    _i158.Key? key,
    required int userPending,
    required dynamic Function(int) onUserPendingChange,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          CollaboratorPendingRoute.name,
          args: CollaboratorPendingRouteArgs(
            key: key,
            userPending: userPending,
            onUserPendingChange: onUserPendingChange,
          ),
          initialChildren: children,
        );

  static const String name = 'CollaboratorPendingRoute';

  static const _i157.PageInfo<CollaboratorPendingRouteArgs> page =
      _i157.PageInfo<CollaboratorPendingRouteArgs>(name);
}

class CollaboratorPendingRouteArgs {
  const CollaboratorPendingRouteArgs({
    this.key,
    required this.userPending,
    required this.onUserPendingChange,
  });

  final _i158.Key? key;

  final int userPending;

  final dynamic Function(int) onUserPendingChange;

  @override
  String toString() {
    return 'CollaboratorPendingRouteArgs{key: $key, userPending: $userPending, onUserPendingChange: $onUserPendingChange}';
  }
}

/// generated route for
/// [_i51.ContestTabPage]
class ContestTabRoute extends _i157.PageRouteInfo<void> {
  const ContestTabRoute({List<_i157.PageRouteInfo>? children})
      : super(
          ContestTabRoute.name,
          initialChildren: children,
        );

  static const String name = 'ContestTabRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i52.CreateThreadGroupPage]
class CreateThreadGroupRoute
    extends _i157.PageRouteInfo<CreateThreadGroupRouteArgs> {
  CreateThreadGroupRoute({
    _i158.Key? key,
    required List<_i166.ChatContactModel> contacts,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          CreateThreadGroupRoute.name,
          args: CreateThreadGroupRouteArgs(
            key: key,
            contacts: contacts,
          ),
          initialChildren: children,
        );

  static const String name = 'CreateThreadGroupRoute';

  static const _i157.PageInfo<CreateThreadGroupRouteArgs> page =
      _i157.PageInfo<CreateThreadGroupRouteArgs>(name);
}

class CreateThreadGroupRouteArgs {
  const CreateThreadGroupRouteArgs({
    this.key,
    required this.contacts,
  });

  final _i158.Key? key;

  final List<_i166.ChatContactModel> contacts;

  @override
  String toString() {
    return 'CreateThreadGroupRouteArgs{key: $key, contacts: $contacts}';
  }
}

/// generated route for
/// [_i53.DeliveryPolicyPage]
class DeliveryPolicyRoute extends _i157.PageRouteInfo<DeliveryPolicyRouteArgs> {
  DeliveryPolicyRoute({
    _i158.Key? key,
    String? url,
    String? title = "MTrade",
    List<_i157.PageRouteInfo>? children,
  }) : super(
          DeliveryPolicyRoute.name,
          args: DeliveryPolicyRouteArgs(
            key: key,
            url: url,
            title: title,
          ),
          rawQueryParams: {
            'url': url,
            'title': title,
          },
          initialChildren: children,
        );

  static const String name = 'DeliveryPolicyRoute';

  static const _i157.PageInfo<DeliveryPolicyRouteArgs> page =
      _i157.PageInfo<DeliveryPolicyRouteArgs>(name);
}

class DeliveryPolicyRouteArgs {
  const DeliveryPolicyRouteArgs({
    this.key,
    this.url,
    this.title = "MTrade",
  });

  final _i158.Key? key;

  final String? url;

  final String? title;

  @override
  String toString() {
    return 'DeliveryPolicyRouteArgs{key: $key, url: $url, title: $title}';
  }
}

/// generated route for
/// [_i54.FluctuationNotificationPage]
class FluctuationNotificationRoute extends _i157.PageRouteInfo<void> {
  const FluctuationNotificationRoute({List<_i157.PageRouteInfo>? children})
      : super(
          FluctuationNotificationRoute.name,
          initialChildren: children,
        );

  static const String name = 'FluctuationNotificationRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i55.GeneralNotificationPage]
class GeneralNotificationRoute extends _i157.PageRouteInfo<void> {
  const GeneralNotificationRoute({List<_i157.PageRouteInfo>? children})
      : super(
          GeneralNotificationRoute.name,
          initialChildren: children,
        );

  static const String name = 'GeneralNotificationRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i56.HistoryIncomePage]
class HistoryIncomeRoute extends _i157.PageRouteInfo<void> {
  const HistoryIncomeRoute({List<_i157.PageRouteInfo>? children})
      : super(
          HistoryIncomeRoute.name,
          initialChildren: children,
        );

  static const String name = 'HistoryIncomeRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i57.HomePage]
class HomeRoute extends _i157.PageRouteInfo<void> {
  const HomeRoute({List<_i157.PageRouteInfo>? children})
      : super(
          HomeRoute.name,
          initialChildren: children,
        );

  static const String name = 'HomeRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i58.HomeSearchPage]
class HomeSearchRoute extends _i157.PageRouteInfo<HomeSearchRouteArgs> {
  HomeSearchRoute({
    _i158.Key? key,
    required List<_i169.HomeDataModel> homeGroups,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          HomeSearchRoute.name,
          args: HomeSearchRouteArgs(
            key: key,
            homeGroups: homeGroups,
          ),
          initialChildren: children,
        );

  static const String name = 'HomeSearchRoute';

  static const _i157.PageInfo<HomeSearchRouteArgs> page =
      _i157.PageInfo<HomeSearchRouteArgs>(name);
}

class HomeSearchRouteArgs {
  const HomeSearchRouteArgs({
    this.key,
    required this.homeGroups,
  });

  final _i158.Key? key;

  final List<_i169.HomeDataModel> homeGroups;

  @override
  String toString() {
    return 'HomeSearchRouteArgs{key: $key, homeGroups: $homeGroups}';
  }
}

/// generated route for
/// [_i59.IncomePage]
class IncomeRoute extends _i157.PageRouteInfo<IncomeRouteArgs> {
  IncomeRoute({
    _i158.Key? key,
    String? initIndex,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          IncomeRoute.name,
          args: IncomeRouteArgs(
            key: key,
            initIndex: initIndex,
          ),
          rawQueryParams: {'initIndex': initIndex},
          initialChildren: children,
        );

  static const String name = 'IncomeRoute';

  static const _i157.PageInfo<IncomeRouteArgs> page =
      _i157.PageInfo<IncomeRouteArgs>(name);
}

class IncomeRouteArgs {
  const IncomeRouteArgs({
    this.key,
    this.initIndex,
  });

  final _i158.Key? key;

  final String? initIndex;

  @override
  String toString() {
    return 'IncomeRouteArgs{key: $key, initIndex: $initIndex}';
  }
}

/// generated route for
/// [_i60.KnowledgesTabPage]
class KnowledgesTabRoute extends _i157.PageRouteInfo<void> {
  const KnowledgesTabRoute({List<_i157.PageRouteInfo>? children})
      : super(
          KnowledgesTabRoute.name,
          initialChildren: children,
        );

  static const String name = 'KnowledgesTabRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i61.LegendaryCollaboratorPage]
class LegendaryCollaboratorRoute extends _i157.PageRouteInfo<void> {
  const LegendaryCollaboratorRoute({List<_i157.PageRouteInfo>? children})
      : super(
          LegendaryCollaboratorRoute.name,
          initialChildren: children,
        );

  static const String name = 'LegendaryCollaboratorRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i62.LegendaryCommunityPage]
class LegendaryCommunityRoute
    extends _i157.PageRouteInfo<LegendaryCommunityRouteArgs> {
  LegendaryCommunityRoute({
    _i158.Key? key,
    String? userID,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          LegendaryCommunityRoute.name,
          args: LegendaryCommunityRouteArgs(
            key: key,
            userID: userID,
          ),
          initialChildren: children,
        );

  static const String name = 'LegendaryCommunityRoute';

  static const _i157.PageInfo<LegendaryCommunityRouteArgs> page =
      _i157.PageInfo<LegendaryCommunityRouteArgs>(name);
}

class LegendaryCommunityRouteArgs {
  const LegendaryCommunityRouteArgs({
    this.key,
    this.userID,
  });

  final _i158.Key? key;

  final String? userID;

  @override
  String toString() {
    return 'LegendaryCommunityRouteArgs{key: $key, userID: $userID}';
  }
}

/// generated route for
/// [_i63.LegendaryHierCollaboratorPage]
class LegendaryHierCollaboratorRoute
    extends _i157.PageRouteInfo<LegendaryHierCollaboratorRouteArgs> {
  LegendaryHierCollaboratorRoute({
    _i158.Key? key,
    String? userID,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          LegendaryHierCollaboratorRoute.name,
          args: LegendaryHierCollaboratorRouteArgs(
            key: key,
            userID: userID,
          ),
          rawQueryParams: {'userID': userID},
          initialChildren: children,
        );

  static const String name = 'LegendaryHierCollaboratorRoute';

  static const _i157.PageInfo<LegendaryHierCollaboratorRouteArgs> page =
      _i157.PageInfo<LegendaryHierCollaboratorRouteArgs>(name);
}

class LegendaryHierCollaboratorRouteArgs {
  const LegendaryHierCollaboratorRouteArgs({
    this.key,
    this.userID,
  });

  final _i158.Key? key;

  final String? userID;

  @override
  String toString() {
    return 'LegendaryHierCollaboratorRouteArgs{key: $key, userID: $userID}';
  }
}

/// generated route for
/// [_i64.LegendaryOverviewPage]
class LegendaryOverviewRoute
    extends _i157.PageRouteInfo<LegendaryOverviewRouteArgs> {
  LegendaryOverviewRoute({
    _i158.Key? key,
    String? userID,
    _i170.AutoScrollController? autoScrollController,
    _i158.GlobalKey<_i158.State<_i158.StatefulWidget>>? legendaryExperienceKey,
    _i158.GlobalKey<_i158.State<_i158.StatefulWidget>>? legendaryIncomeKey,
    _i158.GlobalKey<_i158.State<_i158.StatefulWidget>>?
        legendaryCollaboratorKey,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          LegendaryOverviewRoute.name,
          args: LegendaryOverviewRouteArgs(
            key: key,
            userID: userID,
            autoScrollController: autoScrollController,
            legendaryExperienceKey: legendaryExperienceKey,
            legendaryIncomeKey: legendaryIncomeKey,
            legendaryCollaboratorKey: legendaryCollaboratorKey,
          ),
          initialChildren: children,
        );

  static const String name = 'LegendaryOverviewRoute';

  static const _i157.PageInfo<LegendaryOverviewRouteArgs> page =
      _i157.PageInfo<LegendaryOverviewRouteArgs>(name);
}

class LegendaryOverviewRouteArgs {
  const LegendaryOverviewRouteArgs({
    this.key,
    this.userID,
    this.autoScrollController,
    this.legendaryExperienceKey,
    this.legendaryIncomeKey,
    this.legendaryCollaboratorKey,
  });

  final _i158.Key? key;

  final String? userID;

  final _i170.AutoScrollController? autoScrollController;

  final _i158.GlobalKey<_i158.State<_i158.StatefulWidget>>?
      legendaryExperienceKey;

  final _i158.GlobalKey<_i158.State<_i158.StatefulWidget>>? legendaryIncomeKey;

  final _i158.GlobalKey<_i158.State<_i158.StatefulWidget>>?
      legendaryCollaboratorKey;

  @override
  String toString() {
    return 'LegendaryOverviewRouteArgs{key: $key, userID: $userID, autoScrollController: $autoScrollController, legendaryExperienceKey: $legendaryExperienceKey, legendaryIncomeKey: $legendaryIncomeKey, legendaryCollaboratorKey: $legendaryCollaboratorKey}';
  }
}

/// generated route for
/// [_i65.LegendaryPage]
class LegendaryRoute extends _i157.PageRouteInfo<LegendaryRouteArgs> {
  LegendaryRoute({
    _i158.Key? key,
    String? userID,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          LegendaryRoute.name,
          args: LegendaryRouteArgs(
            key: key,
            userID: userID,
          ),
          rawQueryParams: {'userID': userID},
          initialChildren: children,
        );

  static const String name = 'LegendaryRoute';

  static const _i157.PageInfo<LegendaryRouteArgs> page =
      _i157.PageInfo<LegendaryRouteArgs>(name);
}

class LegendaryRouteArgs {
  const LegendaryRouteArgs({
    this.key,
    this.userID,
  });

  final _i158.Key? key;

  final String? userID;

  @override
  String toString() {
    return 'LegendaryRouteArgs{key: $key, userID: $userID}';
  }
}

/// generated route for
/// [_i66.LoginHistoryPage]
class LoginHistoryRoute extends _i157.PageRouteInfo<void> {
  const LoginHistoryRoute({List<_i157.PageRouteInfo>? children})
      : super(
          LoginHistoryRoute.name,
          initialChildren: children,
        );

  static const String name = 'LoginHistoryRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i67.LoginPage]
class LoginRoute extends _i157.PageRouteInfo<LoginRouteArgs> {
  LoginRoute({
    _i158.Key? key,
    dynamic Function()? onSuccess,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          LoginRoute.name,
          args: LoginRouteArgs(
            key: key,
            onSuccess: onSuccess,
          ),
          initialChildren: children,
        );

  static const String name = 'LoginRoute';

  static const _i157.PageInfo<LoginRouteArgs> page =
      _i157.PageInfo<LoginRouteArgs>(name);
}

class LoginRouteArgs {
  const LoginRouteArgs({
    this.key,
    this.onSuccess,
  });

  final _i158.Key? key;

  final dynamic Function()? onSuccess;

  @override
  String toString() {
    return 'LoginRouteArgs{key: $key, onSuccess: $onSuccess}';
  }
}

/// generated route for
/// [_i68.MFastAccountIdentificationPage]
class MFastAccountIdentificationRoute extends _i157.PageRouteInfo<void> {
  const MFastAccountIdentificationRoute({List<_i157.PageRouteInfo>? children})
      : super(
          MFastAccountIdentificationRoute.name,
          initialChildren: children,
        );

  static const String name = 'MFastAccountIdentificationRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i69.MFastContractCollaboratorPage]
class MFastContractCollaboratorRoute extends _i157.PageRouteInfo<void> {
  const MFastContractCollaboratorRoute({List<_i157.PageRouteInfo>? children})
      : super(
          MFastContractCollaboratorRoute.name,
          initialChildren: children,
        );

  static const String name = 'MFastContractCollaboratorRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i70.MFastNotificationAdminPage]
class MFastNotificationAdminRoute
    extends _i157.PageRouteInfo<MFastNotificationAdminRouteArgs> {
  MFastNotificationAdminRoute({
    _i158.Key? key,
    required _i171.NotificationCategory category,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MFastNotificationAdminRoute.name,
          args: MFastNotificationAdminRouteArgs(
            key: key,
            category: category,
          ),
          initialChildren: children,
        );

  static const String name = 'MFastNotificationAdminRoute';

  static const _i157.PageInfo<MFastNotificationAdminRouteArgs> page =
      _i157.PageInfo<MFastNotificationAdminRouteArgs>(name);
}

class MFastNotificationAdminRouteArgs {
  const MFastNotificationAdminRouteArgs({
    this.key,
    required this.category,
  });

  final _i158.Key? key;

  final _i171.NotificationCategory category;

  @override
  String toString() {
    return 'MFastNotificationAdminRouteArgs{key: $key, category: $category}';
  }
}

/// generated route for
/// [_i71.MFastNotificationPage]
class MFastNotificationRoute extends _i157.PageRouteInfo<void> {
  const MFastNotificationRoute({List<_i157.PageRouteInfo>? children})
      : super(
          MFastNotificationRoute.name,
          initialChildren: children,
        );

  static const String name = 'MFastNotificationRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i72.MFastNotificationSettingPage]
class MFastNotificationSettingRoute extends _i157.PageRouteInfo<void> {
  const MFastNotificationSettingRoute({List<_i157.PageRouteInfo>? children})
      : super(
          MFastNotificationSettingRoute.name,
          initialChildren: children,
        );

  static const String name = 'MFastNotificationSettingRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i73.MFastNotificationSystemPage]
class MFastNotificationSystemRoute
    extends _i157.PageRouteInfo<MFastNotificationSystemRouteArgs> {
  MFastNotificationSystemRoute({
    _i158.Key? key,
    required _i171.NotificationCategory category,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MFastNotificationSystemRoute.name,
          args: MFastNotificationSystemRouteArgs(
            key: key,
            category: category,
          ),
          initialChildren: children,
        );

  static const String name = 'MFastNotificationSystemRoute';

  static const _i157.PageInfo<MFastNotificationSystemRouteArgs> page =
      _i157.PageInfo<MFastNotificationSystemRouteArgs>(name);
}

class MFastNotificationSystemRouteArgs {
  const MFastNotificationSystemRouteArgs({
    this.key,
    required this.category,
  });

  final _i158.Key? key;

  final _i171.NotificationCategory category;

  @override
  String toString() {
    return 'MFastNotificationSystemRouteArgs{key: $key, category: $category}';
  }
}

/// generated route for
/// [_i74.MFastPage]
class MFastRoute extends _i157.PageRouteInfo<void> {
  const MFastRoute({List<_i157.PageRouteInfo>? children})
      : super(
          MFastRoute.name,
          initialChildren: children,
        );

  static const String name = 'MFastRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i75.MFastUpdatePhoneNumberPage]
class MFastUpdatePhoneNumberRoute extends _i157.PageRouteInfo<void> {
  const MFastUpdatePhoneNumberRoute({List<_i157.PageRouteInfo>? children})
      : super(
          MFastUpdatePhoneNumberRoute.name,
          initialChildren: children,
        );

  static const String name = 'MFastUpdatePhoneNumberRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i76.MTradeBrochurePage]
class MTradeBrochureRoute extends _i157.PageRouteInfo<void> {
  const MTradeBrochureRoute({List<_i157.PageRouteInfo>? children})
      : super(
          MTradeBrochureRoute.name,
          initialChildren: children,
        );

  static const String name = 'MTradeBrochureRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i77.MTradeCartTabPage]
class MTradeCartTabRoute extends _i157.PageRouteInfo<void> {
  const MTradeCartTabRoute({List<_i157.PageRouteInfo>? children})
      : super(
          MTradeCartTabRoute.name,
          initialChildren: children,
        );

  static const String name = 'MTradeCartTabRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i78.MTradeDetailCollaboratorPage]
class MTradeDetailCollaboratorRoute
    extends _i157.PageRouteInfo<MTradeDetailCollaboratorRouteArgs> {
  MTradeDetailCollaboratorRoute({
    _i158.Key? key,
    required String collaboratorID,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradeDetailCollaboratorRoute.name,
          args: MTradeDetailCollaboratorRouteArgs(
            key: key,
            collaboratorID: collaboratorID,
          ),
          initialChildren: children,
        );

  static const String name = 'MTradeDetailCollaboratorRoute';

  static const _i157.PageInfo<MTradeDetailCollaboratorRouteArgs> page =
      _i157.PageInfo<MTradeDetailCollaboratorRouteArgs>(name);
}

class MTradeDetailCollaboratorRouteArgs {
  const MTradeDetailCollaboratorRouteArgs({
    this.key,
    required this.collaboratorID,
  });

  final _i158.Key? key;

  final String collaboratorID;

  @override
  String toString() {
    return 'MTradeDetailCollaboratorRouteArgs{key: $key, collaboratorID: $collaboratorID}';
  }
}

/// generated route for
/// [_i79.MTradeDetailPromotionPage]
class MTradeDetailPromotionRoute
    extends _i157.PageRouteInfo<MTradeDetailPromotionRouteArgs> {
  MTradeDetailPromotionRoute({
    _i158.Key? key,
    _i172.MTradePromotionModel? promotion,
    bool showApplyButton = true,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradeDetailPromotionRoute.name,
          args: MTradeDetailPromotionRouteArgs(
            key: key,
            promotion: promotion,
            showApplyButton: showApplyButton,
          ),
          initialChildren: children,
        );

  static const String name = 'MTradeDetailPromotionRoute';

  static const _i157.PageInfo<MTradeDetailPromotionRouteArgs> page =
      _i157.PageInfo<MTradeDetailPromotionRouteArgs>(name);
}

class MTradeDetailPromotionRouteArgs {
  const MTradeDetailPromotionRouteArgs({
    this.key,
    this.promotion,
    this.showApplyButton = true,
  });

  final _i158.Key? key;

  final _i172.MTradePromotionModel? promotion;

  final bool showApplyButton;

  @override
  String toString() {
    return 'MTradeDetailPromotionRouteArgs{key: $key, promotion: $promotion, showApplyButton: $showApplyButton}';
  }
}

/// generated route for
/// [_i80.MTradeDirectBonusPage]
class MTradeDirectBonusRoute extends _i157.PageRouteInfo<void> {
  const MTradeDirectBonusRoute({List<_i157.PageRouteInfo>? children})
      : super(
          MTradeDirectBonusRoute.name,
          initialChildren: children,
        );

  static const String name = 'MTradeDirectBonusRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i81.MTradeIndirectBonusPage]
class MTradeIndirectBonusRoute extends _i157.PageRouteInfo<void> {
  const MTradeIndirectBonusRoute({List<_i157.PageRouteInfo>? children})
      : super(
          MTradeIndirectBonusRoute.name,
          initialChildren: children,
        );

  static const String name = 'MTradeIndirectBonusRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i82.MTradeMyReviewPage]
class MTradeMyReviewRoute extends _i157.PageRouteInfo<void> {
  const MTradeMyReviewRoute({List<_i157.PageRouteInfo>? children})
      : super(
          MTradeMyReviewRoute.name,
          initialChildren: children,
        );

  static const String name = 'MTradeMyReviewRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i83.MTradeNotFoundPage]
class MTradeNotFoundRoute extends _i157.PageRouteInfo<void> {
  const MTradeNotFoundRoute({List<_i157.PageRouteInfo>? children})
      : super(
          MTradeNotFoundRoute.name,
          initialChildren: children,
        );

  static const String name = 'MTradeNotFoundRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i84.MTradeOrderDetailPage]
class MTradeOrderDetailRoute
    extends _i157.PageRouteInfo<MTradeOrderDetailRouteArgs> {
  MTradeOrderDetailRoute({
    _i158.Key? key,
    String? orderId,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradeOrderDetailRoute.name,
          args: MTradeOrderDetailRouteArgs(
            key: key,
            orderId: orderId,
          ),
          rawQueryParams: {'orderId': orderId},
          initialChildren: children,
        );

  static const String name = 'MTradeOrderDetailRoute';

  static const _i157.PageInfo<MTradeOrderDetailRouteArgs> page =
      _i157.PageInfo<MTradeOrderDetailRouteArgs>(name);
}

class MTradeOrderDetailRouteArgs {
  const MTradeOrderDetailRouteArgs({
    this.key,
    this.orderId,
  });

  final _i158.Key? key;

  final String? orderId;

  @override
  String toString() {
    return 'MTradeOrderDetailRouteArgs{key: $key, orderId: $orderId}';
  }
}

/// generated route for
/// [_i85.MTradeOrderProcessStatePage]
class MTradeOrderProcessStateRoute
    extends _i157.PageRouteInfo<MTradeOrderProcessStateRouteArgs> {
  MTradeOrderProcessStateRoute({
    _i158.Key? key,
    required String processState,
    String? collaboratorID,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradeOrderProcessStateRoute.name,
          args: MTradeOrderProcessStateRouteArgs(
            key: key,
            processState: processState,
            collaboratorID: collaboratorID,
          ),
          initialChildren: children,
        );

  static const String name = 'MTradeOrderProcessStateRoute';

  static const _i157.PageInfo<MTradeOrderProcessStateRouteArgs> page =
      _i157.PageInfo<MTradeOrderProcessStateRouteArgs>(name);
}

class MTradeOrderProcessStateRouteArgs {
  const MTradeOrderProcessStateRouteArgs({
    this.key,
    required this.processState,
    this.collaboratorID,
  });

  final _i158.Key? key;

  final String processState;

  final String? collaboratorID;

  @override
  String toString() {
    return 'MTradeOrderProcessStateRouteArgs{key: $key, processState: $processState, collaboratorID: $collaboratorID}';
  }
}

/// generated route for
/// [_i86.MTradeOrderTabPage]
class MTradeOrderTabRoute extends _i157.PageRouteInfo<void> {
  const MTradeOrderTabRoute({List<_i157.PageRouteInfo>? children})
      : super(
          MTradeOrderTabRoute.name,
          initialChildren: children,
        );

  static const String name = 'MTradeOrderTabRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i87.MTradePage]
class MTradeRoute extends _i157.PageRouteInfo<MTradeRouteArgs> {
  MTradeRoute({
    _i158.Key? key,
    int? indexTab,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradeRoute.name,
          args: MTradeRouteArgs(
            key: key,
            indexTab: indexTab,
          ),
          rawQueryParams: {'index_tab': indexTab},
          initialChildren: children,
        );

  static const String name = 'MTradeRoute';

  static const _i157.PageInfo<MTradeRouteArgs> page =
      _i157.PageInfo<MTradeRouteArgs>(name);
}

class MTradeRouteArgs {
  const MTradeRouteArgs({
    this.key,
    this.indexTab,
  });

  final _i158.Key? key;

  final int? indexTab;

  @override
  String toString() {
    return 'MTradeRouteArgs{key: $key, indexTab: $indexTab}';
  }
}

/// generated route for
/// [_i88.MTradePayLaterOrderInformationPage]
class MTradePayLaterOrderInformationRoute
    extends _i157.PageRouteInfo<MTradePayLaterOrderInformationRouteArgs> {
  MTradePayLaterOrderInformationRoute({
    _i161.Key? key,
    List<_i173.MTradeCartProductModel>? products,
    List<_i174.DataProductVariationsModel>? promotions,
    String? orderID,
    String? transactionID,
    String? pageID,
    String? provinceCode,
    String? districtCode,
    String? wardCode,
    String? provinceDeliveryCode,
    String? districtDeliveryCode,
    String? wardDeliveryCode,
    String? source,
    String? orders,
    String? selectedLoanSchemeID,
    String? selectedDownPaymentPercent,
    String? selectedLoanTenor,
    String? selectedJoinInsurance,
    String? mobilePhone,
    String? idNumber,
    String? nameHeadOfHousehold,
    String? idNumberHeadOfHousehold,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradePayLaterOrderInformationRoute.name,
          args: MTradePayLaterOrderInformationRouteArgs(
            key: key,
            products: products,
            promotions: promotions,
            orderID: orderID,
            transactionID: transactionID,
            pageID: pageID,
            provinceCode: provinceCode,
            districtCode: districtCode,
            wardCode: wardCode,
            provinceDeliveryCode: provinceDeliveryCode,
            districtDeliveryCode: districtDeliveryCode,
            wardDeliveryCode: wardDeliveryCode,
            source: source,
            orders: orders,
            selectedLoanSchemeID: selectedLoanSchemeID,
            selectedDownPaymentPercent: selectedDownPaymentPercent,
            selectedLoanTenor: selectedLoanTenor,
            selectedJoinInsurance: selectedJoinInsurance,
            mobilePhone: mobilePhone,
            idNumber: idNumber,
            nameHeadOfHousehold: nameHeadOfHousehold,
            idNumberHeadOfHousehold: idNumberHeadOfHousehold,
          ),
          rawQueryParams: {
            'orderID': orderID,
            'transactionID': transactionID,
            'pageID': pageID,
            'provinceCode': provinceCode,
            'districtCode': districtCode,
            'wardCode': wardCode,
            'provinceDeliveryCode': provinceDeliveryCode,
            'districtDeliveryCode': districtDeliveryCode,
            'wardDeliveryCode': wardDeliveryCode,
            'source': source,
            'orders': orders,
            'selectedLoanSchemeID': selectedLoanSchemeID,
            'selectedDownPaymentPercent': selectedDownPaymentPercent,
            'selectedLoanTenor': selectedLoanTenor,
            'selectedJoinInsurance': selectedJoinInsurance,
            'mobilePhone': mobilePhone,
            'idNumber': idNumber,
            'nameHeadOfHousehold': nameHeadOfHousehold,
            'idNumberHeadOfHousehold': idNumberHeadOfHousehold,
          },
          initialChildren: children,
        );

  static const String name = 'MTradePayLaterOrderInformationRoute';

  static const _i157.PageInfo<MTradePayLaterOrderInformationRouteArgs> page =
      _i157.PageInfo<MTradePayLaterOrderInformationRouteArgs>(name);
}

class MTradePayLaterOrderInformationRouteArgs {
  const MTradePayLaterOrderInformationRouteArgs({
    this.key,
    this.products,
    this.promotions,
    this.orderID,
    this.transactionID,
    this.pageID,
    this.provinceCode,
    this.districtCode,
    this.wardCode,
    this.provinceDeliveryCode,
    this.districtDeliveryCode,
    this.wardDeliveryCode,
    this.source,
    this.orders,
    this.selectedLoanSchemeID,
    this.selectedDownPaymentPercent,
    this.selectedLoanTenor,
    this.selectedJoinInsurance,
    this.mobilePhone,
    this.idNumber,
    this.nameHeadOfHousehold,
    this.idNumberHeadOfHousehold,
  });

  final _i161.Key? key;

  final List<_i173.MTradeCartProductModel>? products;

  final List<_i174.DataProductVariationsModel>? promotions;

  final String? orderID;

  final String? transactionID;

  final String? pageID;

  final String? provinceCode;

  final String? districtCode;

  final String? wardCode;

  final String? provinceDeliveryCode;

  final String? districtDeliveryCode;

  final String? wardDeliveryCode;

  final String? source;

  final String? orders;

  final String? selectedLoanSchemeID;

  final String? selectedDownPaymentPercent;

  final String? selectedLoanTenor;

  final String? selectedJoinInsurance;

  final String? mobilePhone;

  final String? idNumber;

  final String? nameHeadOfHousehold;

  final String? idNumberHeadOfHousehold;

  @override
  String toString() {
    return 'MTradePayLaterOrderInformationRouteArgs{key: $key, products: $products, promotions: $promotions, orderID: $orderID, transactionID: $transactionID, pageID: $pageID, provinceCode: $provinceCode, districtCode: $districtCode, wardCode: $wardCode, provinceDeliveryCode: $provinceDeliveryCode, districtDeliveryCode: $districtDeliveryCode, wardDeliveryCode: $wardDeliveryCode, source: $source, orders: $orders, selectedLoanSchemeID: $selectedLoanSchemeID, selectedDownPaymentPercent: $selectedDownPaymentPercent, selectedLoanTenor: $selectedLoanTenor, selectedJoinInsurance: $selectedJoinInsurance, mobilePhone: $mobilePhone, idNumber: $idNumber, nameHeadOfHousehold: $nameHeadOfHousehold, idNumberHeadOfHousehold: $idNumberHeadOfHousehold}';
  }
}

/// generated route for
/// [_i89.MTradePayNowOrderInformationPage]
class MTradePayNowOrderInformationRoute
    extends _i157.PageRouteInfo<MTradePayNowOrderInformationRouteArgs> {
  MTradePayNowOrderInformationRoute({
    _i158.Key? key,
    List<_i173.MTradeCartProductModel>? products,
    List<_i174.DataProductVariationsModel>? promotions,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradePayNowOrderInformationRoute.name,
          args: MTradePayNowOrderInformationRouteArgs(
            key: key,
            products: products,
            promotions: promotions,
          ),
          initialChildren: children,
        );

  static const String name = 'MTradePayNowOrderInformationRoute';

  static const _i157.PageInfo<MTradePayNowOrderInformationRouteArgs> page =
      _i157.PageInfo<MTradePayNowOrderInformationRouteArgs>(name);
}

class MTradePayNowOrderInformationRouteArgs {
  const MTradePayNowOrderInformationRouteArgs({
    this.key,
    this.products,
    this.promotions,
  });

  final _i158.Key? key;

  final List<_i173.MTradeCartProductModel>? products;

  final List<_i174.DataProductVariationsModel>? promotions;

  @override
  String toString() {
    return 'MTradePayNowOrderInformationRouteArgs{key: $key, products: $products, promotions: $promotions}';
  }
}

/// generated route for
/// [_i90.MTradePersonalLinkSetupPage]
class MTradePersonalLinkSetupRoute
    extends _i157.PageRouteInfo<MTradePersonalLinkSetupRouteArgs> {
  MTradePersonalLinkSetupRoute({
    _i158.Key? key,
    required _i175.AdLinkModel item,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradePersonalLinkSetupRoute.name,
          args: MTradePersonalLinkSetupRouteArgs(
            key: key,
            item: item,
          ),
          initialChildren: children,
        );

  static const String name = 'MTradePersonalLinkSetupRoute';

  static const _i157.PageInfo<MTradePersonalLinkSetupRouteArgs> page =
      _i157.PageInfo<MTradePersonalLinkSetupRouteArgs>(name);
}

class MTradePersonalLinkSetupRouteArgs {
  const MTradePersonalLinkSetupRouteArgs({
    this.key,
    required this.item,
  });

  final _i158.Key? key;

  final _i175.AdLinkModel item;

  @override
  String toString() {
    return 'MTradePersonalLinkSetupRouteArgs{key: $key, item: $item}';
  }
}

/// generated route for
/// [_i91.MTradePersonalWebsiteSetupPage]
class MTradePersonalWebsiteSetupRoute
    extends _i157.PageRouteInfo<MTradePersonalWebsiteSetupRouteArgs> {
  MTradePersonalWebsiteSetupRoute({
    _i158.Key? key,
    String? source,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradePersonalWebsiteSetupRoute.name,
          args: MTradePersonalWebsiteSetupRouteArgs(
            key: key,
            source: source,
          ),
          rawQueryParams: {'source': source},
          initialChildren: children,
        );

  static const String name = 'MTradePersonalWebsiteSetupRoute';

  static const _i157.PageInfo<MTradePersonalWebsiteSetupRouteArgs> page =
      _i157.PageInfo<MTradePersonalWebsiteSetupRouteArgs>(name);
}

class MTradePersonalWebsiteSetupRouteArgs {
  const MTradePersonalWebsiteSetupRouteArgs({
    this.key,
    this.source,
  });

  final _i158.Key? key;

  final String? source;

  @override
  String toString() {
    return 'MTradePersonalWebsiteSetupRouteArgs{key: $key, source: $source}';
  }
}

/// generated route for
/// [_i92.MTradePersonalWebsiteStatisticPage]
class MTradePersonalWebsiteStatisticRoute
    extends _i157.PageRouteInfo<MTradePersonalWebsiteStatisticRouteArgs> {
  MTradePersonalWebsiteStatisticRoute({
    _i158.Key? key,
    String? source,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradePersonalWebsiteStatisticRoute.name,
          args: MTradePersonalWebsiteStatisticRouteArgs(
            key: key,
            source: source,
          ),
          rawQueryParams: {'source': source},
          initialChildren: children,
        );

  static const String name = 'MTradePersonalWebsiteStatisticRoute';

  static const _i157.PageInfo<MTradePersonalWebsiteStatisticRouteArgs> page =
      _i157.PageInfo<MTradePersonalWebsiteStatisticRouteArgs>(name);
}

class MTradePersonalWebsiteStatisticRouteArgs {
  const MTradePersonalWebsiteStatisticRouteArgs({
    this.key,
    this.source,
  });

  final _i158.Key? key;

  final String? source;

  @override
  String toString() {
    return 'MTradePersonalWebsiteStatisticRouteArgs{key: $key, source: $source}';
  }
}

/// generated route for
/// [_i93.MTradePersonalWebsiteTabbarPage]
class MTradePersonalWebsiteTabbarRoute
    extends _i157.PageRouteInfo<MTradePersonalWebsiteTabbarRouteArgs> {
  MTradePersonalWebsiteTabbarRoute({
    _i158.Key? key,
    int? indexTab,
    String? source,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradePersonalWebsiteTabbarRoute.name,
          args: MTradePersonalWebsiteTabbarRouteArgs(
            key: key,
            indexTab: indexTab,
            source: source,
          ),
          rawQueryParams: {
            'index_tab': indexTab,
            'source': source,
          },
          initialChildren: children,
        );

  static const String name = 'MTradePersonalWebsiteTabbarRoute';

  static const _i157.PageInfo<MTradePersonalWebsiteTabbarRouteArgs> page =
      _i157.PageInfo<MTradePersonalWebsiteTabbarRouteArgs>(name);
}

class MTradePersonalWebsiteTabbarRouteArgs {
  const MTradePersonalWebsiteTabbarRouteArgs({
    this.key,
    this.indexTab,
    this.source,
  });

  final _i158.Key? key;

  final int? indexTab;

  final String? source;

  @override
  String toString() {
    return 'MTradePersonalWebsiteTabbarRouteArgs{key: $key, indexTab: $indexTab, source: $source}';
  }
}

/// generated route for
/// [_i94.MTradeProductDetailBottomSheet]
class MTradeProductDetailBottomSheetRoute
    extends _i157.PageRouteInfo<MTradeProductDetailBottomSheetRouteArgs> {
  MTradeProductDetailBottomSheetRoute({
    _i158.Key? key,
    String? productCode,
    _i176.MTradeProductDetailModel? product,
    _i177.MTradeProductDetailType type = _i177.MTradeProductDetailType.product,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradeProductDetailBottomSheetRoute.name,
          args: MTradeProductDetailBottomSheetRouteArgs(
            key: key,
            productCode: productCode,
            product: product,
            type: type,
          ),
          rawQueryParams: {'productCode': productCode},
          initialChildren: children,
        );

  static const String name = 'MTradeProductDetailBottomSheetRoute';

  static const _i157.PageInfo<MTradeProductDetailBottomSheetRouteArgs> page =
      _i157.PageInfo<MTradeProductDetailBottomSheetRouteArgs>(name);
}

class MTradeProductDetailBottomSheetRouteArgs {
  const MTradeProductDetailBottomSheetRouteArgs({
    this.key,
    this.productCode,
    this.product,
    this.type = _i177.MTradeProductDetailType.product,
  });

  final _i158.Key? key;

  final String? productCode;

  final _i176.MTradeProductDetailModel? product;

  final _i177.MTradeProductDetailType type;

  @override
  String toString() {
    return 'MTradeProductDetailBottomSheetRouteArgs{key: $key, productCode: $productCode, product: $product, type: $type}';
  }
}

/// generated route for
/// [_i95.MTradeProductDetailPage]
class MTradeProductDetailRoute
    extends _i157.PageRouteInfo<MTradeProductDetailRouteArgs> {
  MTradeProductDetailRoute({
    _i161.Key? key,
    String? productCode,
    _i176.MTradeProductDetailModel? product,
    _i177.MTradeProductDetailType type = _i177.MTradeProductDetailType.product,
    String? pageID,
    String? provinceCode,
    String? districtCode,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradeProductDetailRoute.name,
          args: MTradeProductDetailRouteArgs(
            key: key,
            productCode: productCode,
            product: product,
            type: type,
            pageID: pageID,
            provinceCode: provinceCode,
            districtCode: districtCode,
          ),
          rawQueryParams: {
            'productCode': productCode,
            'pageID': pageID,
            'provinceCode': provinceCode,
            'districtCode': districtCode,
          },
          initialChildren: children,
        );

  static const String name = 'MTradeProductDetailRoute';

  static const _i157.PageInfo<MTradeProductDetailRouteArgs> page =
      _i157.PageInfo<MTradeProductDetailRouteArgs>(name);
}

class MTradeProductDetailRouteArgs {
  const MTradeProductDetailRouteArgs({
    this.key,
    this.productCode,
    this.product,
    this.type = _i177.MTradeProductDetailType.product,
    this.pageID,
    this.provinceCode,
    this.districtCode,
  });

  final _i161.Key? key;

  final String? productCode;

  final _i176.MTradeProductDetailModel? product;

  final _i177.MTradeProductDetailType type;

  final String? pageID;

  final String? provinceCode;

  final String? districtCode;

  @override
  String toString() {
    return 'MTradeProductDetailRouteArgs{key: $key, productCode: $productCode, product: $product, type: $type, pageID: $pageID, provinceCode: $provinceCode, districtCode: $districtCode}';
  }
}

/// generated route for
/// [_i96.MTradeProductPage]
class MTradeProductRoute extends _i157.PageRouteInfo<MTradeProductRouteArgs> {
  MTradeProductRoute({
    _i158.Key? key,
    String? pageID,
    String? provinceCode,
    String? districtCode,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradeProductRoute.name,
          args: MTradeProductRouteArgs(
            key: key,
            pageID: pageID,
            provinceCode: provinceCode,
            districtCode: districtCode,
          ),
          rawQueryParams: {
            'pageID': pageID,
            'provinceCode': provinceCode,
            'districtCode': districtCode,
          },
          initialChildren: children,
        );

  static const String name = 'MTradeProductRoute';

  static const _i157.PageInfo<MTradeProductRouteArgs> page =
      _i157.PageInfo<MTradeProductRouteArgs>(name);
}

class MTradeProductRouteArgs {
  const MTradeProductRouteArgs({
    this.key,
    this.pageID,
    this.provinceCode,
    this.districtCode,
  });

  final _i158.Key? key;

  final String? pageID;

  final String? provinceCode;

  final String? districtCode;

  @override
  String toString() {
    return 'MTradeProductRouteArgs{key: $key, pageID: $pageID, provinceCode: $provinceCode, districtCode: $districtCode}';
  }
}

/// generated route for
/// [_i97.MTradeProductTabPage]
class MTradeProductTabRoute extends _i157.PageRouteInfo<void> {
  const MTradeProductTabRoute({List<_i157.PageRouteInfo>? children})
      : super(
          MTradeProductTabRoute.name,
          initialChildren: children,
        );

  static const String name = 'MTradeProductTabRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i98.MTradePromotionPage]
class MTradePromotionRoute
    extends _i157.PageRouteInfo<MTradePromotionRouteArgs> {
  MTradePromotionRoute({
    _i158.Key? key,
    List<_i178.OrderItems>? orderItems,
    List<String>? invalidTicketCodes,
    List<_i174.DataProductVariationsModel> initPromotions = const [],
    String? provinceCode,
    String? districtCode,
    String? wardCode,
    _i179.MTradePaymentType? paymentMethod,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradePromotionRoute.name,
          args: MTradePromotionRouteArgs(
            key: key,
            orderItems: orderItems,
            invalidTicketCodes: invalidTicketCodes,
            initPromotions: initPromotions,
            provinceCode: provinceCode,
            districtCode: districtCode,
            wardCode: wardCode,
            paymentMethod: paymentMethod,
          ),
          initialChildren: children,
        );

  static const String name = 'MTradePromotionRoute';

  static const _i157.PageInfo<MTradePromotionRouteArgs> page =
      _i157.PageInfo<MTradePromotionRouteArgs>(name);
}

class MTradePromotionRouteArgs {
  const MTradePromotionRouteArgs({
    this.key,
    this.orderItems,
    this.invalidTicketCodes,
    this.initPromotions = const [],
    this.provinceCode,
    this.districtCode,
    this.wardCode,
    this.paymentMethod,
  });

  final _i158.Key? key;

  final List<_i178.OrderItems>? orderItems;

  final List<String>? invalidTicketCodes;

  final List<_i174.DataProductVariationsModel> initPromotions;

  final String? provinceCode;

  final String? districtCode;

  final String? wardCode;

  final _i179.MTradePaymentType? paymentMethod;

  @override
  String toString() {
    return 'MTradePromotionRouteArgs{key: $key, orderItems: $orderItems, invalidTicketCodes: $invalidTicketCodes, initPromotions: $initPromotions, provinceCode: $provinceCode, districtCode: $districtCode, wardCode: $wardCode, paymentMethod: $paymentMethod}';
  }
}

/// generated route for
/// [_i99.MTradeSearchOrderPage]
class MTradeSearchOrderRoute
    extends _i157.PageRouteInfo<MTradeSearchOrderRouteArgs> {
  MTradeSearchOrderRoute({
    _i158.Key? key,
    String? pageID,
    String? provinceCode,
    String? districtCode,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradeSearchOrderRoute.name,
          args: MTradeSearchOrderRouteArgs(
            key: key,
            pageID: pageID,
            provinceCode: provinceCode,
            districtCode: districtCode,
          ),
          rawQueryParams: {
            'pageID': pageID,
            'provinceCode': provinceCode,
            'districtCode': districtCode,
          },
          initialChildren: children,
        );

  static const String name = 'MTradeSearchOrderRoute';

  static const _i157.PageInfo<MTradeSearchOrderRouteArgs> page =
      _i157.PageInfo<MTradeSearchOrderRouteArgs>(name);
}

class MTradeSearchOrderRouteArgs {
  const MTradeSearchOrderRouteArgs({
    this.key,
    this.pageID,
    this.provinceCode,
    this.districtCode,
  });

  final _i158.Key? key;

  final String? pageID;

  final String? provinceCode;

  final String? districtCode;

  @override
  String toString() {
    return 'MTradeSearchOrderRouteArgs{key: $key, pageID: $pageID, provinceCode: $provinceCode, districtCode: $districtCode}';
  }
}

/// generated route for
/// [_i100.MTradeSearchPage]
class MTradeSearchRoute extends _i157.PageRouteInfo<MTradeSearchRouteArgs> {
  MTradeSearchRoute({
    _i158.Key? key,
    String? query,
    bool forceRouterPop = false,
    String? pageID,
    String? provinceCode,
    String? districtCode,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradeSearchRoute.name,
          args: MTradeSearchRouteArgs(
            key: key,
            query: query,
            forceRouterPop: forceRouterPop,
            pageID: pageID,
            provinceCode: provinceCode,
            districtCode: districtCode,
          ),
          rawQueryParams: {
            'pageID': pageID,
            'provinceCode': provinceCode,
            'districtCode': districtCode,
          },
          initialChildren: children,
        );

  static const String name = 'MTradeSearchRoute';

  static const _i157.PageInfo<MTradeSearchRouteArgs> page =
      _i157.PageInfo<MTradeSearchRouteArgs>(name);
}

class MTradeSearchRouteArgs {
  const MTradeSearchRouteArgs({
    this.key,
    this.query,
    this.forceRouterPop = false,
    this.pageID,
    this.provinceCode,
    this.districtCode,
  });

  final _i158.Key? key;

  final String? query;

  final bool forceRouterPop;

  final String? pageID;

  final String? provinceCode;

  final String? districtCode;

  @override
  String toString() {
    return 'MTradeSearchRouteArgs{key: $key, query: $query, forceRouterPop: $forceRouterPop, pageID: $pageID, provinceCode: $provinceCode, districtCode: $districtCode}';
  }
}

/// generated route for
/// [_i101.MTradeSearchedProductPage]
class MTradeSearchedProductRoute
    extends _i157.PageRouteInfo<MTradeSearchedProductRouteArgs> {
  MTradeSearchedProductRoute({
    _i158.Key? key,
    String title = "Bán hàng trả chậm",
    String? query,
    String? group,
    String? pageID,
    String? provinceCode,
    String? districtCode,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          MTradeSearchedProductRoute.name,
          args: MTradeSearchedProductRouteArgs(
            key: key,
            title: title,
            query: query,
            group: group,
            pageID: pageID,
            provinceCode: provinceCode,
            districtCode: districtCode,
          ),
          rawQueryParams: {
            'pageID': pageID,
            'provinceCode': provinceCode,
            'districtCode': districtCode,
          },
          initialChildren: children,
        );

  static const String name = 'MTradeSearchedProductRoute';

  static const _i157.PageInfo<MTradeSearchedProductRouteArgs> page =
      _i157.PageInfo<MTradeSearchedProductRouteArgs>(name);
}

class MTradeSearchedProductRouteArgs {
  const MTradeSearchedProductRouteArgs({
    this.key,
    this.title = "Bán hàng trả chậm",
    this.query,
    this.group,
    this.pageID,
    this.provinceCode,
    this.districtCode,
  });

  final _i158.Key? key;

  final String title;

  final String? query;

  final String? group;

  final String? pageID;

  final String? provinceCode;

  final String? districtCode;

  @override
  String toString() {
    return 'MTradeSearchedProductRouteArgs{key: $key, title: $title, query: $query, group: $group, pageID: $pageID, provinceCode: $provinceCode, districtCode: $districtCode}';
  }
}

/// generated route for
/// [_i102.MTradeToolsPage]
class MTradeToolsRoute extends _i157.PageRouteInfo<void> {
  const MTradeToolsRoute({List<_i157.PageRouteInfo>? children})
      : super(
          MTradeToolsRoute.name,
          initialChildren: children,
        );

  static const String name = 'MTradeToolsRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i103.MainTabbarPage]
class MainTabbarRoute extends _i157.PageRouteInfo<void> {
  const MainTabbarRoute({List<_i157.PageRouteInfo>? children})
      : super(
          MainTabbarRoute.name,
          initialChildren: children,
        );

  static const String name = 'MainTabbarRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i104.NewSupporterPage]
class NewSupporterRoute extends _i157.PageRouteInfo<NewSupporterRouteArgs> {
  NewSupporterRoute({
    _i158.Key? key,
    _i180.RegisterPayload? payload,
    _i181.MySupporterWaitingModel? mySupporterWaiting,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          NewSupporterRoute.name,
          args: NewSupporterRouteArgs(
            key: key,
            payload: payload,
            mySupporterWaiting: mySupporterWaiting,
          ),
          initialChildren: children,
        );

  static const String name = 'NewSupporterRoute';

  static const _i157.PageInfo<NewSupporterRouteArgs> page =
      _i157.PageInfo<NewSupporterRouteArgs>(name);
}

class NewSupporterRouteArgs {
  const NewSupporterRouteArgs({
    this.key,
    this.payload,
    this.mySupporterWaiting,
  });

  final _i158.Key? key;

  final _i180.RegisterPayload? payload;

  final _i181.MySupporterWaitingModel? mySupporterWaiting;

  @override
  String toString() {
    return 'NewSupporterRouteArgs{key: $key, payload: $payload, mySupporterWaiting: $mySupporterWaiting}';
  }
}

/// generated route for
/// [_i105.NewsPage]
class NewsRoute extends _i157.PageRouteInfo<NewsRouteArgs> {
  NewsRoute({
    _i158.Key? key,
    String? focusedTabIndex,
    String? newsTabIndex,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          NewsRoute.name,
          args: NewsRouteArgs(
            key: key,
            focusedTabIndex: focusedTabIndex,
            newsTabIndex: newsTabIndex,
          ),
          rawQueryParams: {
            'focusedTabIndex': focusedTabIndex,
            'tabNewsIndex': newsTabIndex,
          },
          initialChildren: children,
        );

  static const String name = 'NewsRoute';

  static const _i157.PageInfo<NewsRouteArgs> page =
      _i157.PageInfo<NewsRouteArgs>(name);
}

class NewsRouteArgs {
  const NewsRouteArgs({
    this.key,
    this.focusedTabIndex,
    this.newsTabIndex,
  });

  final _i158.Key? key;

  final String? focusedTabIndex;

  final String? newsTabIndex;

  @override
  String toString() {
    return 'NewsRouteArgs{key: $key, focusedTabIndex: $focusedTabIndex, newsTabIndex: $newsTabIndex}';
  }
}

/// generated route for
/// [_i106.NewsTabPage]
class NewsTabRoute extends _i157.PageRouteInfo<NewsTabRouteArgs> {
  NewsTabRoute({
    _i158.Key? key,
    int? newsTabIndex,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          NewsTabRoute.name,
          args: NewsTabRouteArgs(
            key: key,
            newsTabIndex: newsTabIndex,
          ),
          rawQueryParams: {'newsTabIndex': newsTabIndex},
          initialChildren: children,
        );

  static const String name = 'NewsTabRoute';

  static const _i157.PageInfo<NewsTabRouteArgs> page =
      _i157.PageInfo<NewsTabRouteArgs>(name);
}

class NewsTabRouteArgs {
  const NewsTabRouteArgs({
    this.key,
    this.newsTabIndex,
  });

  final _i158.Key? key;

  final int? newsTabIndex;

  @override
  String toString() {
    return 'NewsTabRouteArgs{key: $key, newsTabIndex: $newsTabIndex}';
  }
}

/// generated route for
/// [_i107.NotificationPage]
class NotificationRoute extends _i157.PageRouteInfo<void> {
  const NotificationRoute({List<_i157.PageRouteInfo>? children})
      : super(
          NotificationRoute.name,
          initialChildren: children,
        );

  static const String name = 'NotificationRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i108.OTPPage]
class OTPRoute extends _i157.PageRouteInfo<OTPRouteArgs> {
  OTPRoute({
    _i158.Key? key,
    required String phoneNumber,
    required dynamic Function() onSuccess,
    dynamic Function(String)? onRegister,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          OTPRoute.name,
          args: OTPRouteArgs(
            key: key,
            phoneNumber: phoneNumber,
            onSuccess: onSuccess,
            onRegister: onRegister,
          ),
          initialChildren: children,
        );

  static const String name = 'OTPRoute';

  static const _i157.PageInfo<OTPRouteArgs> page =
      _i157.PageInfo<OTPRouteArgs>(name);
}

class OTPRouteArgs {
  const OTPRouteArgs({
    this.key,
    required this.phoneNumber,
    required this.onSuccess,
    this.onRegister,
  });

  final _i158.Key? key;

  final String phoneNumber;

  final dynamic Function() onSuccess;

  final dynamic Function(String)? onRegister;

  @override
  String toString() {
    return 'OTPRouteArgs{key: $key, phoneNumber: $phoneNumber, onSuccess: $onSuccess, onRegister: $onRegister}';
  }
}

/// generated route for
/// [_i109.OnboardingPage]
class OnboardingRoute extends _i157.PageRouteInfo<void> {
  const OnboardingRoute({List<_i157.PageRouteInfo>? children})
      : super(
          OnboardingRoute.name,
          initialChildren: children,
        );

  static const String name = 'OnboardingRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i110.OrderOverviewPage]
class OrderOverviewRoute extends _i157.PageRouteInfo<OrderOverviewRouteArgs> {
  OrderOverviewRoute({
    _i158.Key? key,
    _i182.MTradePayNowOrderModel? order,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          OrderOverviewRoute.name,
          args: OrderOverviewRouteArgs(
            key: key,
            order: order,
          ),
          initialChildren: children,
        );

  static const String name = 'OrderOverviewRoute';

  static const _i157.PageInfo<OrderOverviewRouteArgs> page =
      _i157.PageInfo<OrderOverviewRouteArgs>(name);
}

class OrderOverviewRouteArgs {
  const OrderOverviewRouteArgs({
    this.key,
    this.order,
  });

  final _i158.Key? key;

  final _i182.MTradePayNowOrderModel? order;

  @override
  String toString() {
    return 'OrderOverviewRouteArgs{key: $key, order: $order}';
  }
}

/// generated route for
/// [_i111.PendingChatSupportRequestListPage]
class PendingChatSupportRequestListRoute
    extends _i157.PageRouteInfo<PendingChatSupportRequestListRouteArgs> {
  PendingChatSupportRequestListRoute({
    _i158.Key? key,
    required String type,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          PendingChatSupportRequestListRoute.name,
          args: PendingChatSupportRequestListRouteArgs(
            key: key,
            type: type,
          ),
          initialChildren: children,
        );

  static const String name = 'PendingChatSupportRequestListRoute';

  static const _i157.PageInfo<PendingChatSupportRequestListRouteArgs> page =
      _i157.PageInfo<PendingChatSupportRequestListRouteArgs>(name);
}

class PendingChatSupportRequestListRouteArgs {
  const PendingChatSupportRequestListRouteArgs({
    this.key,
    required this.type,
  });

  final _i158.Key? key;

  final String type;

  @override
  String toString() {
    return 'PendingChatSupportRequestListRouteArgs{key: $key, type: $type}';
  }
}

/// generated route for
/// [_i112.PersonalSettingPage]
class PersonalSettingRoute extends _i157.PageRouteInfo<void> {
  const PersonalSettingRoute({List<_i157.PageRouteInfo>? children})
      : super(
          PersonalSettingRoute.name,
          initialChildren: children,
        );

  static const String name = 'PersonalSettingRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i113.PreScreenPayLaterOrderPage]
class PreScreenPayLaterOrderRoute
    extends _i157.PageRouteInfo<PreScreenPayLaterOrderRouteArgs> {
  PreScreenPayLaterOrderRoute({
    _i158.Key? key,
    required Function onNextPage,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          PreScreenPayLaterOrderRoute.name,
          args: PreScreenPayLaterOrderRouteArgs(
            key: key,
            onNextPage: onNextPage,
          ),
          initialChildren: children,
        );

  static const String name = 'PreScreenPayLaterOrderRoute';

  static const _i157.PageInfo<PreScreenPayLaterOrderRouteArgs> page =
      _i157.PageInfo<PreScreenPayLaterOrderRouteArgs>(name);
}

class PreScreenPayLaterOrderRouteArgs {
  const PreScreenPayLaterOrderRouteArgs({
    this.key,
    required this.onNextPage,
  });

  final _i158.Key? key;

  final Function onNextPage;

  @override
  String toString() {
    return 'PreScreenPayLaterOrderRouteArgs{key: $key, onNextPage: $onNextPage}';
  }
}

/// generated route for
/// [_i114.ProductSchemePayLaterOrderPage]
class ProductSchemePayLaterOrderRoute
    extends _i157.PageRouteInfo<ProductSchemePayLaterOrderRouteArgs> {
  ProductSchemePayLaterOrderRoute({
    _i158.Key? key,
    Function? onNextPage,
    String? orderID,
    String? transactionID,
    bool isLeaveRequest = false,
    String? source,
    String? orders,
    String? selectedLoanSchemeID,
    String? selectedDownPaymentPercent,
    String? selectedLoanTenor,
    String? selectedJoinInsurance,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ProductSchemePayLaterOrderRoute.name,
          args: ProductSchemePayLaterOrderRouteArgs(
            key: key,
            onNextPage: onNextPage,
            orderID: orderID,
            transactionID: transactionID,
            isLeaveRequest: isLeaveRequest,
            source: source,
            orders: orders,
            selectedLoanSchemeID: selectedLoanSchemeID,
            selectedDownPaymentPercent: selectedDownPaymentPercent,
            selectedLoanTenor: selectedLoanTenor,
            selectedJoinInsurance: selectedJoinInsurance,
          ),
          initialChildren: children,
        );

  static const String name = 'ProductSchemePayLaterOrderRoute';

  static const _i157.PageInfo<ProductSchemePayLaterOrderRouteArgs> page =
      _i157.PageInfo<ProductSchemePayLaterOrderRouteArgs>(name);
}

class ProductSchemePayLaterOrderRouteArgs {
  const ProductSchemePayLaterOrderRouteArgs({
    this.key,
    this.onNextPage,
    this.orderID,
    this.transactionID,
    this.isLeaveRequest = false,
    this.source,
    this.orders,
    this.selectedLoanSchemeID,
    this.selectedDownPaymentPercent,
    this.selectedLoanTenor,
    this.selectedJoinInsurance,
  });

  final _i158.Key? key;

  final Function? onNextPage;

  final String? orderID;

  final String? transactionID;

  final bool isLeaveRequest;

  final String? source;

  final String? orders;

  final String? selectedLoanSchemeID;

  final String? selectedDownPaymentPercent;

  final String? selectedLoanTenor;

  final String? selectedJoinInsurance;

  @override
  String toString() {
    return 'ProductSchemePayLaterOrderRouteArgs{key: $key, onNextPage: $onNextPage, orderID: $orderID, transactionID: $transactionID, isLeaveRequest: $isLeaveRequest, source: $source, orders: $orders, selectedLoanSchemeID: $selectedLoanSchemeID, selectedDownPaymentPercent: $selectedDownPaymentPercent, selectedLoanTenor: $selectedLoanTenor, selectedJoinInsurance: $selectedJoinInsurance}';
  }
}

/// generated route for
/// [_i115.RSMPushHistoryPage]
class RSMPushHistoryRoute extends _i157.PageRouteInfo<void> {
  const RSMPushHistoryRoute({List<_i157.PageRouteInfo>? children})
      : super(
          RSMPushHistoryRoute.name,
          initialChildren: children,
        );

  static const String name = 'RSMPushHistoryRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i116.RSMPushPage]
class RSMPushRoute extends _i157.PageRouteInfo<void> {
  const RSMPushRoute({List<_i157.PageRouteInfo>? children})
      : super(
          RSMPushRoute.name,
          initialChildren: children,
        );

  static const String name = 'RSMPushRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i117.RSMPushUserPage]
class RSMPushUserRoute extends _i157.PageRouteInfo<void> {
  const RSMPushUserRoute({List<_i157.PageRouteInfo>? children})
      : super(
          RSMPushUserRoute.name,
          initialChildren: children,
        );

  static const String name = 'RSMPushUserRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i118.RegisterEventResultPage]
class RegisterEventResultRoute
    extends _i157.PageRouteInfo<RegisterEventResultRouteArgs> {
  RegisterEventResultRoute({
    _i161.Key? key,
    required _i183.BlocStatus status,
    String? title,
    String? message,
    String? buttonTitle,
    dynamic Function()? buttonTap,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          RegisterEventResultRoute.name,
          args: RegisterEventResultRouteArgs(
            key: key,
            status: status,
            title: title,
            message: message,
            buttonTitle: buttonTitle,
            buttonTap: buttonTap,
          ),
          initialChildren: children,
        );

  static const String name = 'RegisterEventResultRoute';

  static const _i157.PageInfo<RegisterEventResultRouteArgs> page =
      _i157.PageInfo<RegisterEventResultRouteArgs>(name);
}

class RegisterEventResultRouteArgs {
  const RegisterEventResultRouteArgs({
    this.key,
    required this.status,
    this.title,
    this.message,
    this.buttonTitle,
    this.buttonTap,
  });

  final _i161.Key? key;

  final _i183.BlocStatus status;

  final String? title;

  final String? message;

  final String? buttonTitle;

  final dynamic Function()? buttonTap;

  @override
  String toString() {
    return 'RegisterEventResultRouteArgs{key: $key, status: $status, title: $title, message: $message, buttonTitle: $buttonTitle, buttonTap: $buttonTap}';
  }
}

/// generated route for
/// [_i119.RegisterMentorPage]
class RegisterMentorRoute extends _i157.PageRouteInfo<void> {
  const RegisterMentorRoute({List<_i157.PageRouteInfo>? children})
      : super(
          RegisterMentorRoute.name,
          initialChildren: children,
        );

  static const String name = 'RegisterMentorRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i120.RegisterNamePage]
class RegisterNameRoute extends _i157.PageRouteInfo<RegisterNameRouteArgs> {
  RegisterNameRoute({
    _i158.Key? key,
    _i180.RegisterPayload? payload,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          RegisterNameRoute.name,
          args: RegisterNameRouteArgs(
            key: key,
            payload: payload,
          ),
          initialChildren: children,
        );

  static const String name = 'RegisterNameRoute';

  static const _i157.PageInfo<RegisterNameRouteArgs> page =
      _i157.PageInfo<RegisterNameRouteArgs>(name);
}

class RegisterNameRouteArgs {
  const RegisterNameRouteArgs({
    this.key,
    this.payload,
  });

  final _i158.Key? key;

  final _i180.RegisterPayload? payload;

  @override
  String toString() {
    return 'RegisterNameRouteArgs{key: $key, payload: $payload}';
  }
}

/// generated route for
/// [_i121.RegisterTaxPage]
class RegisterTaxRoute extends _i157.PageRouteInfo<void> {
  const RegisterTaxRoute({List<_i157.PageRouteInfo>? children})
      : super(
          RegisterTaxRoute.name,
          initialChildren: children,
        );

  static const String name = 'RegisterTaxRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i122.RespondedChatSupportRequestListPage]
class RespondedChatSupportRequestListRoute
    extends _i157.PageRouteInfo<RespondedChatSupportRequestListRouteArgs> {
  RespondedChatSupportRequestListRoute({
    _i158.Key? key,
    required String type,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          RespondedChatSupportRequestListRoute.name,
          args: RespondedChatSupportRequestListRouteArgs(
            key: key,
            type: type,
          ),
          initialChildren: children,
        );

  static const String name = 'RespondedChatSupportRequestListRoute';

  static const _i157.PageInfo<RespondedChatSupportRequestListRouteArgs> page =
      _i157.PageInfo<RespondedChatSupportRequestListRouteArgs>(name);
}

class RespondedChatSupportRequestListRouteArgs {
  const RespondedChatSupportRequestListRouteArgs({
    this.key,
    required this.type,
  });

  final _i158.Key? key;

  final String type;

  @override
  String toString() {
    return 'RespondedChatSupportRequestListRouteArgs{key: $key, type: $type}';
  }
}

/// generated route for
/// [_i123.ResultPayLaterOrderPage]
class ResultPayLaterOrderRoute
    extends _i157.PageRouteInfo<ResultPayLaterOrderRouteArgs> {
  ResultPayLaterOrderRoute({
    _i161.Key? key,
    required Function onNextPage,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ResultPayLaterOrderRoute.name,
          args: ResultPayLaterOrderRouteArgs(
            key: key,
            onNextPage: onNextPage,
          ),
          initialChildren: children,
        );

  static const String name = 'ResultPayLaterOrderRoute';

  static const _i157.PageInfo<ResultPayLaterOrderRouteArgs> page =
      _i157.PageInfo<ResultPayLaterOrderRouteArgs>(name);
}

class ResultPayLaterOrderRouteArgs {
  const ResultPayLaterOrderRouteArgs({
    this.key,
    required this.onNextPage,
  });

  final _i161.Key? key;

  final Function onNextPage;

  @override
  String toString() {
    return 'ResultPayLaterOrderRouteArgs{key: $key, onNextPage: $onNextPage}';
  }
}

/// generated route for
/// [_i124.ResultRequestPayLaterOrderPage]
class ResultRequestPayLaterOrderRoute
    extends _i157.PageRouteInfo<ResultRequestPayLaterOrderRouteArgs> {
  ResultRequestPayLaterOrderRoute({
    _i158.Key? key,
    Function? onNextPage,
    bool status = true,
    String? message,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ResultRequestPayLaterOrderRoute.name,
          args: ResultRequestPayLaterOrderRouteArgs(
            key: key,
            onNextPage: onNextPage,
            status: status,
            message: message,
          ),
          initialChildren: children,
        );

  static const String name = 'ResultRequestPayLaterOrderRoute';

  static const _i157.PageInfo<ResultRequestPayLaterOrderRouteArgs> page =
      _i157.PageInfo<ResultRequestPayLaterOrderRouteArgs>(name);
}

class ResultRequestPayLaterOrderRouteArgs {
  const ResultRequestPayLaterOrderRouteArgs({
    this.key,
    this.onNextPage,
    this.status = true,
    this.message,
  });

  final _i158.Key? key;

  final Function? onNextPage;

  final bool status;

  final String? message;

  @override
  String toString() {
    return 'ResultRequestPayLaterOrderRouteArgs{key: $key, onNextPage: $onNextPage, status: $status, message: $message}';
  }
}

/// generated route for
/// [_i125.ReviewBrochurePage]
class ReviewBrochureRoute extends _i157.PageRouteInfo<ReviewBrochureRouteArgs> {
  ReviewBrochureRoute({
    _i158.Key? key,
    _i184.BrochureType? type,
    _i185.DataWrapper? selectedCategory,
    _i186.MTradeBrochureProductModel? selectedProduct,
    List<_i186.MTradeBrochureProductModel>? selectedProductList,
    String? selectedProvinceCode,
    String? selectedDistrictCode,
    bool? showSaleInfo,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ReviewBrochureRoute.name,
          args: ReviewBrochureRouteArgs(
            key: key,
            type: type,
            selectedCategory: selectedCategory,
            selectedProduct: selectedProduct,
            selectedProductList: selectedProductList,
            selectedProvinceCode: selectedProvinceCode,
            selectedDistrictCode: selectedDistrictCode,
            showSaleInfo: showSaleInfo,
          ),
          initialChildren: children,
        );

  static const String name = 'ReviewBrochureRoute';

  static const _i157.PageInfo<ReviewBrochureRouteArgs> page =
      _i157.PageInfo<ReviewBrochureRouteArgs>(name);
}

class ReviewBrochureRouteArgs {
  const ReviewBrochureRouteArgs({
    this.key,
    this.type,
    this.selectedCategory,
    this.selectedProduct,
    this.selectedProductList,
    this.selectedProvinceCode,
    this.selectedDistrictCode,
    this.showSaleInfo,
  });

  final _i158.Key? key;

  final _i184.BrochureType? type;

  final _i185.DataWrapper? selectedCategory;

  final _i186.MTradeBrochureProductModel? selectedProduct;

  final List<_i186.MTradeBrochureProductModel>? selectedProductList;

  final String? selectedProvinceCode;

  final String? selectedDistrictCode;

  final bool? showSaleInfo;

  @override
  String toString() {
    return 'ReviewBrochureRouteArgs{key: $key, type: $type, selectedCategory: $selectedCategory, selectedProduct: $selectedProduct, selectedProductList: $selectedProductList, selectedProvinceCode: $selectedProvinceCode, selectedDistrictCode: $selectedDistrictCode, showSaleInfo: $showSaleInfo}';
  }
}

/// generated route for
/// [_i126.SecurityPage]
class SecurityRoute extends _i157.PageRouteInfo<void> {
  const SecurityRoute({List<_i157.PageRouteInfo>? children})
      : super(
          SecurityRoute.name,
          initialChildren: children,
        );

  static const String name = 'SecurityRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i127.ShipperBillLadingDetailPage]
class ShipperBillLadingDetailRoute
    extends _i157.PageRouteInfo<ShipperBillLadingDetailRouteArgs> {
  ShipperBillLadingDetailRoute({
    _i158.Key? key,
    String orderCode = "",
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ShipperBillLadingDetailRoute.name,
          args: ShipperBillLadingDetailRouteArgs(
            key: key,
            orderCode: orderCode,
          ),
          rawQueryParams: {'orderCode': orderCode},
          initialChildren: children,
        );

  static const String name = 'ShipperBillLadingDetailRoute';

  static const _i157.PageInfo<ShipperBillLadingDetailRouteArgs> page =
      _i157.PageInfo<ShipperBillLadingDetailRouteArgs>(name);
}

class ShipperBillLadingDetailRouteArgs {
  const ShipperBillLadingDetailRouteArgs({
    this.key,
    this.orderCode = "",
  });

  final _i158.Key? key;

  final String orderCode;

  @override
  String toString() {
    return 'ShipperBillLadingDetailRouteArgs{key: $key, orderCode: $orderCode}';
  }
}

/// generated route for
/// [_i128.ShipperCompletedBillLadingPage]
class ShipperCompletedBillLadingRoute extends _i157.PageRouteInfo<void> {
  const ShipperCompletedBillLadingRoute({List<_i157.PageRouteInfo>? children})
      : super(
          ShipperCompletedBillLadingRoute.name,
          initialChildren: children,
        );

  static const String name = 'ShipperCompletedBillLadingRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i129.ShipperDeliveryBillLadingPage]
class ShipperDeliveryBillLadingRoute extends _i157.PageRouteInfo<void> {
  const ShipperDeliveryBillLadingRoute({List<_i157.PageRouteInfo>? children})
      : super(
          ShipperDeliveryBillLadingRoute.name,
          initialChildren: children,
        );

  static const String name = 'ShipperDeliveryBillLadingRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i130.ShipperNewBillLadingPage]
class ShipperNewBillLadingRoute extends _i157.PageRouteInfo<void> {
  const ShipperNewBillLadingRoute({List<_i157.PageRouteInfo>? children})
      : super(
          ShipperNewBillLadingRoute.name,
          initialChildren: children,
        );

  static const String name = 'ShipperNewBillLadingRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i131.ShipperPage]
class ShipperRoute extends _i157.PageRouteInfo<void> {
  const ShipperRoute({List<_i157.PageRouteInfo>? children})
      : super(
          ShipperRoute.name,
          initialChildren: children,
        );

  static const String name = 'ShipperRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i132.ShipperPhotoPreviewPage]
class ShipperPhotoPreviewRoute
    extends _i157.PageRouteInfo<ShipperPhotoPreviewRouteArgs> {
  ShipperPhotoPreviewRoute({
    _i158.Key? key,
    required List<_i187.PhotoPreviewModel> photos,
    required String selectedPhoto,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ShipperPhotoPreviewRoute.name,
          args: ShipperPhotoPreviewRouteArgs(
            key: key,
            photos: photos,
            selectedPhoto: selectedPhoto,
          ),
          initialChildren: children,
        );

  static const String name = 'ShipperPhotoPreviewRoute';

  static const _i157.PageInfo<ShipperPhotoPreviewRouteArgs> page =
      _i157.PageInfo<ShipperPhotoPreviewRouteArgs>(name);
}

class ShipperPhotoPreviewRouteArgs {
  const ShipperPhotoPreviewRouteArgs({
    this.key,
    required this.photos,
    required this.selectedPhoto,
  });

  final _i158.Key? key;

  final List<_i187.PhotoPreviewModel> photos;

  final String selectedPhoto;

  @override
  String toString() {
    return 'ShipperPhotoPreviewRouteArgs{key: $key, photos: $photos, selectedPhoto: $selectedPhoto}';
  }
}

/// generated route for
/// [_i133.StatisticAgentCheckingPage]
class StatisticAgentCheckingRoute
    extends _i157.PageRouteInfo<StatisticAgentCheckingRouteArgs> {
  StatisticAgentCheckingRoute({
    _i158.Key? key,
    String? userID,
    String? date,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          StatisticAgentCheckingRoute.name,
          args: StatisticAgentCheckingRouteArgs(
            key: key,
            userID: userID,
            date: date,
          ),
          rawQueryParams: {
            'userID': userID,
            'date': date,
          },
          initialChildren: children,
        );

  static const String name = 'StatisticAgentCheckingRoute';

  static const _i157.PageInfo<StatisticAgentCheckingRouteArgs> page =
      _i157.PageInfo<StatisticAgentCheckingRouteArgs>(name);
}

class StatisticAgentCheckingRouteArgs {
  const StatisticAgentCheckingRouteArgs({
    this.key,
    this.userID,
    this.date,
  });

  final _i158.Key? key;

  final String? userID;

  final String? date;

  @override
  String toString() {
    return 'StatisticAgentCheckingRouteArgs{key: $key, userID: $userID, date: $date}';
  }
}

/// generated route for
/// [_i134.StatisticAgentReportPage]
class StatisticAgentReportRoute
    extends _i157.PageRouteInfo<StatisticAgentReportRouteArgs> {
  StatisticAgentReportRoute({
    _i158.Key? key,
    String? userID,
    String? date,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          StatisticAgentReportRoute.name,
          args: StatisticAgentReportRouteArgs(
            key: key,
            userID: userID,
            date: date,
          ),
          initialChildren: children,
        );

  static const String name = 'StatisticAgentReportRoute';

  static const _i157.PageInfo<StatisticAgentReportRouteArgs> page =
      _i157.PageInfo<StatisticAgentReportRouteArgs>(name);
}

class StatisticAgentReportRouteArgs {
  const StatisticAgentReportRouteArgs({
    this.key,
    this.userID,
    this.date,
  });

  final _i158.Key? key;

  final String? userID;

  final String? date;

  @override
  String toString() {
    return 'StatisticAgentReportRouteArgs{key: $key, userID: $userID, date: $date}';
  }
}

/// generated route for
/// [_i135.StatisticAsmCheckingPage]
class StatisticAsmCheckingRoute
    extends _i157.PageRouteInfo<StatisticAsmCheckingRouteArgs> {
  StatisticAsmCheckingRoute({
    _i158.Key? key,
    String? userID,
    String? level,
    String? date,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          StatisticAsmCheckingRoute.name,
          args: StatisticAsmCheckingRouteArgs(
            key: key,
            userID: userID,
            level: level,
            date: date,
          ),
          rawQueryParams: {
            'userID': userID,
            'level': level,
            'date': date,
          },
          initialChildren: children,
        );

  static const String name = 'StatisticAsmCheckingRoute';

  static const _i157.PageInfo<StatisticAsmCheckingRouteArgs> page =
      _i157.PageInfo<StatisticAsmCheckingRouteArgs>(name);
}

class StatisticAsmCheckingRouteArgs {
  const StatisticAsmCheckingRouteArgs({
    this.key,
    this.userID,
    this.level,
    this.date,
  });

  final _i158.Key? key;

  final String? userID;

  final String? level;

  final String? date;

  @override
  String toString() {
    return 'StatisticAsmCheckingRouteArgs{key: $key, userID: $userID, level: $level, date: $date}';
  }
}

/// generated route for
/// [_i136.StatisticAsmReportPage]
class StatisticAsmReportRoute
    extends _i157.PageRouteInfo<StatisticAsmReportRouteArgs> {
  StatisticAsmReportRoute({
    _i158.Key? key,
    String? userID,
    String? level,
    String? date,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          StatisticAsmReportRoute.name,
          args: StatisticAsmReportRouteArgs(
            key: key,
            userID: userID,
            level: level,
            date: date,
          ),
          initialChildren: children,
        );

  static const String name = 'StatisticAsmReportRoute';

  static const _i157.PageInfo<StatisticAsmReportRouteArgs> page =
      _i157.PageInfo<StatisticAsmReportRouteArgs>(name);
}

class StatisticAsmReportRouteArgs {
  const StatisticAsmReportRouteArgs({
    this.key,
    this.userID,
    this.level,
    this.date,
  });

  final _i158.Key? key;

  final String? userID;

  final String? level;

  final String? date;

  @override
  String toString() {
    return 'StatisticAsmReportRouteArgs{key: $key, userID: $userID, level: $level, date: $date}';
  }
}

/// generated route for
/// [_i137.StatisticIncomePage]
class StatisticIncomeRoute
    extends _i157.PageRouteInfo<StatisticIncomeRouteArgs> {
  StatisticIncomeRoute({
    _i158.Key? key,
    required _i188.DonutChartController chartController,
    required dynamic Function(_i189.HistoryIncomeType) onHistoryTypeChanged,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          StatisticIncomeRoute.name,
          args: StatisticIncomeRouteArgs(
            key: key,
            chartController: chartController,
            onHistoryTypeChanged: onHistoryTypeChanged,
          ),
          initialChildren: children,
        );

  static const String name = 'StatisticIncomeRoute';

  static const _i157.PageInfo<StatisticIncomeRouteArgs> page =
      _i157.PageInfo<StatisticIncomeRouteArgs>(name);
}

class StatisticIncomeRouteArgs {
  const StatisticIncomeRouteArgs({
    this.key,
    required this.chartController,
    required this.onHistoryTypeChanged,
  });

  final _i158.Key? key;

  final _i188.DonutChartController chartController;

  final dynamic Function(_i189.HistoryIncomeType) onHistoryTypeChanged;

  @override
  String toString() {
    return 'StatisticIncomeRouteArgs{key: $key, chartController: $chartController, onHistoryTypeChanged: $onHistoryTypeChanged}';
  }
}

/// generated route for
/// [_i138.StatisticWorkingPage]
class StatisticWorkingRoute
    extends _i157.PageRouteInfo<StatisticWorkingRouteArgs> {
  StatisticWorkingRoute({
    _i158.Key? key,
    int? indexTab,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          StatisticWorkingRoute.name,
          args: StatisticWorkingRouteArgs(
            key: key,
            indexTab: indexTab,
          ),
          rawQueryParams: {'index_tab': indexTab},
          initialChildren: children,
        );

  static const String name = 'StatisticWorkingRoute';

  static const _i157.PageInfo<StatisticWorkingRouteArgs> page =
      _i157.PageInfo<StatisticWorkingRouteArgs>(name);
}

class StatisticWorkingRouteArgs {
  const StatisticWorkingRouteArgs({
    this.key,
    this.indexTab,
  });

  final _i158.Key? key;

  final int? indexTab;

  @override
  String toString() {
    return 'StatisticWorkingRouteArgs{key: $key, indexTab: $indexTab}';
  }
}

/// generated route for
/// [_i139.TakePicturePage]
class TakePictureRoute extends _i157.PageRouteInfo<TakePictureRouteArgs> {
  TakePictureRoute({
    _i158.Key? key,
    String? type,
    bool? isFromMFast,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          TakePictureRoute.name,
          args: TakePictureRouteArgs(
            key: key,
            type: type,
            isFromMFast: isFromMFast,
          ),
          rawQueryParams: {
            'time_checking_action': type,
            'is_from_mfast': isFromMFast,
          },
          initialChildren: children,
        );

  static const String name = 'TakePictureRoute';

  static const _i157.PageInfo<TakePictureRouteArgs> page =
      _i157.PageInfo<TakePictureRouteArgs>(name);
}

class TakePictureRouteArgs {
  const TakePictureRouteArgs({
    this.key,
    this.type,
    this.isFromMFast,
  });

  final _i158.Key? key;

  final String? type;

  final bool? isFromMFast;

  @override
  String toString() {
    return 'TakePictureRouteArgs{key: $key, type: $type, isFromMFast: $isFromMFast}';
  }
}

/// generated route for
/// [_i140.TaxTabPage]
class TaxTabRoute extends _i157.PageRouteInfo<void> {
  const TaxTabRoute({List<_i157.PageRouteInfo>? children})
      : super(
          TaxTabRoute.name,
          initialChildren: children,
        );

  static const String name = 'TaxTabRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i141.ThreadMessagesPage]
class ThreadMessagesRoute extends _i157.PageRouteInfo<ThreadMessagesRouteArgs> {
  ThreadMessagesRoute({
    _i160.Key? key,
    String? threadID,
    _i163.ChatThreadModel? thread,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          ThreadMessagesRoute.name,
          args: ThreadMessagesRouteArgs(
            key: key,
            threadID: threadID,
            thread: thread,
          ),
          rawQueryParams: {'threadID': threadID},
          initialChildren: children,
        );

  static const String name = 'ThreadMessagesRoute';

  static const _i157.PageInfo<ThreadMessagesRouteArgs> page =
      _i157.PageInfo<ThreadMessagesRouteArgs>(name);
}

class ThreadMessagesRouteArgs {
  const ThreadMessagesRouteArgs({
    this.key,
    this.threadID,
    this.thread,
  });

  final _i160.Key? key;

  final String? threadID;

  final _i163.ChatThreadModel? thread;

  @override
  String toString() {
    return 'ThreadMessagesRouteArgs{key: $key, threadID: $threadID, thread: $thread}';
  }
}

/// generated route for
/// [_i142.TimeCheckingHistoryPage]
class TimeCheckingHistoryRoute extends _i157.PageRouteInfo<void> {
  const TimeCheckingHistoryRoute({List<_i157.PageRouteInfo>? children})
      : super(
          TimeCheckingHistoryRoute.name,
          initialChildren: children,
        );

  static const String name = 'TimeCheckingHistoryRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i143.TimeCheckingReportDetailPage]
class TimeCheckingReportDetailRoute
    extends _i157.PageRouteInfo<TimeCheckingReportDetailRouteArgs> {
  TimeCheckingReportDetailRoute({
    _i158.Key? key,
    String? title = 'Chi tiết báo cáo',
    String? reportID,
    String? userID,
    _i190.SubmitReportData? submitReportData,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          TimeCheckingReportDetailRoute.name,
          args: TimeCheckingReportDetailRouteArgs(
            key: key,
            title: title,
            reportID: reportID,
            userID: userID,
            submitReportData: submitReportData,
          ),
          rawQueryParams: {
            'title': title,
            'reportID': reportID,
            'userID': userID,
          },
          initialChildren: children,
        );

  static const String name = 'TimeCheckingReportDetailRoute';

  static const _i157.PageInfo<TimeCheckingReportDetailRouteArgs> page =
      _i157.PageInfo<TimeCheckingReportDetailRouteArgs>(name);
}

class TimeCheckingReportDetailRouteArgs {
  const TimeCheckingReportDetailRouteArgs({
    this.key,
    this.title = 'Chi tiết báo cáo',
    this.reportID,
    this.userID,
    this.submitReportData,
  });

  final _i158.Key? key;

  final String? title;

  final String? reportID;

  final String? userID;

  final _i190.SubmitReportData? submitReportData;

  @override
  String toString() {
    return 'TimeCheckingReportDetailRouteArgs{key: $key, title: $title, reportID: $reportID, userID: $userID, submitReportData: $submitReportData}';
  }
}

/// generated route for
/// [_i144.TimeCheckingReportPage]
class TimeCheckingReportRoute extends _i157.PageRouteInfo<void> {
  const TimeCheckingReportRoute({List<_i157.PageRouteInfo>? children})
      : super(
          TimeCheckingReportRoute.name,
          initialChildren: children,
        );

  static const String name = 'TimeCheckingReportRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i145.TimeCheckingReportResultPage]
class TimeCheckingReportResultRoute
    extends _i157.PageRouteInfo<TimeCheckingReportResultRouteArgs> {
  TimeCheckingReportResultRoute({
    _i158.Key? key,
    _i191.ReportSubmitResponseModel? data,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          TimeCheckingReportResultRoute.name,
          args: TimeCheckingReportResultRouteArgs(
            key: key,
            data: data,
          ),
          initialChildren: children,
        );

  static const String name = 'TimeCheckingReportResultRoute';

  static const _i157.PageInfo<TimeCheckingReportResultRouteArgs> page =
      _i157.PageInfo<TimeCheckingReportResultRouteArgs>(name);
}

class TimeCheckingReportResultRouteArgs {
  const TimeCheckingReportResultRouteArgs({
    this.key,
    this.data,
  });

  final _i158.Key? key;

  final _i191.ReportSubmitResponseModel? data;

  @override
  String toString() {
    return 'TimeCheckingReportResultRouteArgs{key: $key, data: $data}';
  }
}

/// generated route for
/// [_i146.TransferProductPolicyPage]
class TransferProductPolicyRoute
    extends _i157.PageRouteInfo<TransferProductPolicyRouteArgs> {
  TransferProductPolicyRoute({
    _i158.Key? key,
    String? url,
    String? title = "MTrade",
    List<_i157.PageRouteInfo>? children,
  }) : super(
          TransferProductPolicyRoute.name,
          args: TransferProductPolicyRouteArgs(
            key: key,
            url: url,
            title: title,
          ),
          rawQueryParams: {
            'url': url,
            'title': title,
          },
          initialChildren: children,
        );

  static const String name = 'TransferProductPolicyRoute';

  static const _i157.PageInfo<TransferProductPolicyRouteArgs> page =
      _i157.PageInfo<TransferProductPolicyRouteArgs>(name);
}

class TransferProductPolicyRouteArgs {
  const TransferProductPolicyRouteArgs({
    this.key,
    this.url,
    this.title = "MTrade",
  });

  final _i158.Key? key;

  final String? url;

  final String? title;

  @override
  String toString() {
    return 'TransferProductPolicyRouteArgs{key: $key, url: $url, title: $title}';
  }
}

/// generated route for
/// [_i147.UpdateBasicUserInfoOTPPage]
class UpdateBasicUserInfoOTPRoute
    extends _i157.PageRouteInfo<UpdateBasicUserInfoOTPRouteArgs> {
  UpdateBasicUserInfoOTPRoute({
    _i158.Key? key,
    required String email,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          UpdateBasicUserInfoOTPRoute.name,
          args: UpdateBasicUserInfoOTPRouteArgs(
            key: key,
            email: email,
          ),
          initialChildren: children,
        );

  static const String name = 'UpdateBasicUserInfoOTPRoute';

  static const _i157.PageInfo<UpdateBasicUserInfoOTPRouteArgs> page =
      _i157.PageInfo<UpdateBasicUserInfoOTPRouteArgs>(name);
}

class UpdateBasicUserInfoOTPRouteArgs {
  const UpdateBasicUserInfoOTPRouteArgs({
    this.key,
    required this.email,
  });

  final _i158.Key? key;

  final String email;

  @override
  String toString() {
    return 'UpdateBasicUserInfoOTPRouteArgs{key: $key, email: $email}';
  }
}

/// generated route for
/// [_i148.UpdateBasicUserInfoPage]
class UpdateBasicUserInfoRoute extends _i157.PageRouteInfo<void> {
  const UpdateBasicUserInfoRoute({List<_i157.PageRouteInfo>? children})
      : super(
          UpdateBasicUserInfoRoute.name,
          initialChildren: children,
        );

  static const String name = 'UpdateBasicUserInfoRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i149.UpdateEmailSuccessPage]
class UpdateEmailSuccessRoute extends _i157.PageRouteInfo<void> {
  const UpdateEmailSuccessRoute({List<_i157.PageRouteInfo>? children})
      : super(
          UpdateEmailSuccessRoute.name,
          initialChildren: children,
        );

  static const String name = 'UpdateEmailSuccessRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i150.UserInfoPage]
class UserInfoRoute extends _i157.PageRouteInfo<void> {
  const UserInfoRoute({List<_i157.PageRouteInfo>? children})
      : super(
          UserInfoRoute.name,
          initialChildren: children,
        );

  static const String name = 'UserInfoRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}

/// generated route for
/// [_i151.WarrantyPolicyPage]
class WarrantyPolicyRoute extends _i157.PageRouteInfo<WarrantyPolicyRouteArgs> {
  WarrantyPolicyRoute({
    _i158.Key? key,
    String? url,
    String? title = "MTrade",
    List<_i157.PageRouteInfo>? children,
  }) : super(
          WarrantyPolicyRoute.name,
          args: WarrantyPolicyRouteArgs(
            key: key,
            url: url,
            title: title,
          ),
          rawQueryParams: {
            'url': url,
            'title': title,
          },
          initialChildren: children,
        );

  static const String name = 'WarrantyPolicyRoute';

  static const _i157.PageInfo<WarrantyPolicyRouteArgs> page =
      _i157.PageInfo<WarrantyPolicyRouteArgs>(name);
}

class WarrantyPolicyRouteArgs {
  const WarrantyPolicyRouteArgs({
    this.key,
    this.url,
    this.title = "MTrade",
  });

  final _i158.Key? key;

  final String? url;

  final String? title;

  @override
  String toString() {
    return 'WarrantyPolicyRouteArgs{key: $key, url: $url, title: $title}';
  }
}

/// generated route for
/// [_i152.WebViewBottomSheet]
class WebViewBottomSheetRoute
    extends _i157.PageRouteInfo<WebViewBottomSheetRouteArgs> {
  WebViewBottomSheetRoute({
    _i158.Key? key,
    String? url,
    String? title = "MTrade",
    bool? showTitle = true,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          WebViewBottomSheetRoute.name,
          args: WebViewBottomSheetRouteArgs(
            key: key,
            url: url,
            title: title,
            showTitle: showTitle,
          ),
          rawQueryParams: {
            'url': url,
            'title': title,
            'showTitle': showTitle,
          },
          initialChildren: children,
        );

  static const String name = 'WebViewBottomSheetRoute';

  static const _i157.PageInfo<WebViewBottomSheetRouteArgs> page =
      _i157.PageInfo<WebViewBottomSheetRouteArgs>(name);
}

class WebViewBottomSheetRouteArgs {
  const WebViewBottomSheetRouteArgs({
    this.key,
    this.url,
    this.title = "MTrade",
    this.showTitle = true,
  });

  final _i158.Key? key;

  final String? url;

  final String? title;

  final bool? showTitle;

  @override
  String toString() {
    return 'WebViewBottomSheetRouteArgs{key: $key, url: $url, title: $title, showTitle: $showTitle}';
  }
}

/// generated route for
/// [_i153.WebViewPage]
class WebViewRoute extends _i157.PageRouteInfo<WebViewRouteArgs> {
  WebViewRoute({
    _i161.Key? key,
    String? url,
    String? title = "MTrade",
    bool? showTitle = true,
    bool? isShowNotificationButton,
    int? indexTabNotification,
    bool? isBackableInside,
    List<String>? urlsStack,
    List<String>? unbackableURLs,
    bool needDecode = true,
    String? injectFunc,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          WebViewRoute.name,
          args: WebViewRouteArgs(
            key: key,
            url: url,
            title: title,
            showTitle: showTitle,
            isShowNotificationButton: isShowNotificationButton,
            indexTabNotification: indexTabNotification,
            isBackableInside: isBackableInside,
            urlsStack: urlsStack,
            unbackableURLs: unbackableURLs,
            needDecode: needDecode,
            injectFunc: injectFunc,
          ),
          rawQueryParams: {
            'url': url,
            'title': title,
            'showTitle': showTitle,
            'isShowNotificationButton': isShowNotificationButton,
            'indexTabNotification': indexTabNotification,
            'isBackableInside': isBackableInside,
            'urlsStack': urlsStack,
            'unbackableURLs': unbackableURLs,
            'needDecode': needDecode,
            'injectFunc': injectFunc,
          },
          initialChildren: children,
        );

  static const String name = 'WebViewRoute';

  static const _i157.PageInfo<WebViewRouteArgs> page =
      _i157.PageInfo<WebViewRouteArgs>(name);
}

class WebViewRouteArgs {
  const WebViewRouteArgs({
    this.key,
    this.url,
    this.title = "MTrade",
    this.showTitle = true,
    this.isShowNotificationButton,
    this.indexTabNotification,
    this.isBackableInside,
    this.urlsStack,
    this.unbackableURLs,
    this.needDecode = true,
    this.injectFunc,
  });

  final _i161.Key? key;

  final String? url;

  final String? title;

  final bool? showTitle;

  final bool? isShowNotificationButton;

  final int? indexTabNotification;

  final bool? isBackableInside;

  final List<String>? urlsStack;

  final List<String>? unbackableURLs;

  final bool needDecode;

  final String? injectFunc;

  @override
  String toString() {
    return 'WebViewRouteArgs{key: $key, url: $url, title: $title, showTitle: $showTitle, isShowNotificationButton: $isShowNotificationButton, indexTabNotification: $indexTabNotification, isBackableInside: $isBackableInside, urlsStack: $urlsStack, unbackableURLs: $unbackableURLs, needDecode: $needDecode, injectFunc: $injectFunc}';
  }
}

/// generated route for
/// [_i154.WebViewPaymentMethodBottomSheet]
class WebViewPaymentMethodBottomSheetRoute
    extends _i157.PageRouteInfo<WebViewPaymentMethodBottomSheetRouteArgs> {
  WebViewPaymentMethodBottomSheetRoute({
    _i158.Key? key,
    String title = "Chọn phương thức thanh toán",
    String? wardCode,
    String? districtCode,
    String? provinceCode,
    double? totalAmount,
    List<_i178.OrderItems>? orderItems,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          WebViewPaymentMethodBottomSheetRoute.name,
          args: WebViewPaymentMethodBottomSheetRouteArgs(
            key: key,
            title: title,
            wardCode: wardCode,
            districtCode: districtCode,
            provinceCode: provinceCode,
            totalAmount: totalAmount,
            orderItems: orderItems,
          ),
          initialChildren: children,
        );

  static const String name = 'WebViewPaymentMethodBottomSheetRoute';

  static const _i157.PageInfo<WebViewPaymentMethodBottomSheetRouteArgs> page =
      _i157.PageInfo<WebViewPaymentMethodBottomSheetRouteArgs>(name);
}

class WebViewPaymentMethodBottomSheetRouteArgs {
  const WebViewPaymentMethodBottomSheetRouteArgs({
    this.key,
    this.title = "Chọn phương thức thanh toán",
    this.wardCode,
    this.districtCode,
    this.provinceCode,
    this.totalAmount,
    this.orderItems,
  });

  final _i158.Key? key;

  final String title;

  final String? wardCode;

  final String? districtCode;

  final String? provinceCode;

  final double? totalAmount;

  final List<_i178.OrderItems>? orderItems;

  @override
  String toString() {
    return 'WebViewPaymentMethodBottomSheetRouteArgs{key: $key, title: $title, wardCode: $wardCode, districtCode: $districtCode, provinceCode: $provinceCode, totalAmount: $totalAmount, orderItems: $orderItems}';
  }
}

/// generated route for
/// [_i155.WithdrawIncomeOTPPage]
class WithdrawIncomeOTPRoute
    extends _i157.PageRouteInfo<WithdrawIncomeOTPRouteArgs> {
  WithdrawIncomeOTPRoute({
    _i158.Key? key,
    required String phoneNumber,
    required String transactionBankID,
    required String transactionMoney,
    required double? latitude,
    required double? longitude,
    List<_i157.PageRouteInfo>? children,
  }) : super(
          WithdrawIncomeOTPRoute.name,
          args: WithdrawIncomeOTPRouteArgs(
            key: key,
            phoneNumber: phoneNumber,
            transactionBankID: transactionBankID,
            transactionMoney: transactionMoney,
            latitude: latitude,
            longitude: longitude,
          ),
          initialChildren: children,
        );

  static const String name = 'WithdrawIncomeOTPRoute';

  static const _i157.PageInfo<WithdrawIncomeOTPRouteArgs> page =
      _i157.PageInfo<WithdrawIncomeOTPRouteArgs>(name);
}

class WithdrawIncomeOTPRouteArgs {
  const WithdrawIncomeOTPRouteArgs({
    this.key,
    required this.phoneNumber,
    required this.transactionBankID,
    required this.transactionMoney,
    required this.latitude,
    required this.longitude,
  });

  final _i158.Key? key;

  final String phoneNumber;

  final String transactionBankID;

  final String transactionMoney;

  final double? latitude;

  final double? longitude;

  @override
  String toString() {
    return 'WithdrawIncomeOTPRouteArgs{key: $key, phoneNumber: $phoneNumber, transactionBankID: $transactionBankID, transactionMoney: $transactionMoney, latitude: $latitude, longitude: $longitude}';
  }
}

/// generated route for
/// [_i156.WithdrawIncomePage]
class WithdrawIncomeRoute extends _i157.PageRouteInfo<void> {
  const WithdrawIncomeRoute({List<_i157.PageRouteInfo>? children})
      : super(
          WithdrawIncomeRoute.name,
          initialChildren: children,
        );

  static const String name = 'WithdrawIncomeRoute';

  static const _i157.PageInfo<void> page = _i157.PageInfo<void>(name);
}
