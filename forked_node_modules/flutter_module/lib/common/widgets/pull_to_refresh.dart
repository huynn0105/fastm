
import 'package:flutter/material.dart';
import 'package:pull_to_refresh_notification/pull_to_refresh_notification.dart';

import '../colors.dart';

double get maxDragOffset => 60;
double hideHeight = maxDragOffset / 2.3;
double refreshHeight = maxDragOffset / 1.5;

class PullToRefreshHeader extends StatelessWidget {
  const PullToRefreshHeader({super.key, this.info});

  final PullToRefreshScrollNotificationInfo? info;

  @override
  Widget build(BuildContext context) {
    if (info == null) {
      return Container();
    }
    String text = '';
    if (info!.mode == PullToRefreshIndicatorMode.armed) {
      text = 'Release to refresh';
    } else if (info!.mode == PullToRefreshIndicatorMode.refresh || info!.mode == PullToRefreshIndicatorMode.snap) {
      text = 'Loading...';
    } else if (info!.mode == PullToRefreshIndicatorMode.done) {
      text = 'Refresh completed.';
    } else if (info!.mode == PullToRefreshIndicatorMode.drag) {
      text = 'Pull to refresh';
    } else if (info!.mode == PullToRefreshIndicatorMode.canceled) {
      text = 'Cancel refresh';
    }
    final double dragOffset = info?.dragOffset ?? 0.0;

    final double top = -hideHeight + dragOffset;
    return Container(
      height: dragOffset,
      color: Colors.transparent,
      child: Stack(
        children: <Widget>[
          Positioned(
            left: 0.0,
            right: 0.0,
            top: top,
            child: Row(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.center,
              children: <Widget>[
                const CircularProgressIndicator(
                  valueColor: AlwaysStoppedAnimation<Color>(UIColors.primaryColor),
                ),
              ],
            ),
          )
        ],
      ),
    );
  }
}
