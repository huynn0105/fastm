import 'package:flutter/services.dart';
import 'package:flutter_module/common/utils/log_util.dart';
import 'package:local_auth/local_auth.dart';
import 'package:local_auth_android/local_auth_android.dart';
import 'package:local_auth_ios/local_auth_ios.dart';

class BiometricsHelper {
  BiometricsHelper._();

  static Future<bool> checkAvailableBiometrics({bool withoutLogin = false}) async {
    final LocalAuthentication auth = LocalAuthentication();
    final bool canAuthenticateWithBiometrics = await auth.canCheckBiometrics;
    final List<BiometricType> availableBiometrics = await auth.getAvailableBiometrics();
    bool canAuthenticate = canAuthenticateWithBiometrics || await auth.isDeviceSupported();
    canAuthenticate = canAuthenticate && availableBiometrics.isNotEmpty;

    // if (availableBiometrics.contains(BiometricType.face) || availableBiometrics.contains(BiometricType.iris)) {
    //   biometricType = BiometricType.face;
    // } else if (availableBiometrics.contains(BiometricType.fingerprint) ||
    //     availableBiometrics.contains(BiometricType.strong) ||
    //     availableBiometrics.contains(BiometricType.weak)) {
    //   biometricType = BiometricType.fingerprint;
    // }

    return canAuthenticate;
  }

  static Future<bool> authenticateWithBiometrics() async {
    try {
      final LocalAuthentication auth = LocalAuthentication();
      final authenticated = await auth.authenticate(
        localizedReason: 'Yêu cầu xác thực',
        options: const AuthenticationOptions(
          stickyAuth: true,
          biometricOnly: true,
        ),
        authMessages: const <AuthMessages>[
          AndroidAuthMessages(
            signInTitle: 'Đăng nhập nhanh',
            biometricHint: '',
            cancelButton: 'Hủy',
          ),
          IOSAuthMessages(
              // cancelButton: 'No thanks',
              ),
        ],
      );
      return authenticated;
    } on PlatformException catch (e) {
      AppLog.d('BiometricsHelper', e.toString());
    }
    return false;
  }
}
