import 'package:app_settings/app_settings.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter_contacts/flutter_contacts.dart';

import '../dialogs/dialog_provider.dart';

class ContactUtil {
  ContactUtil._();

  static final ContactUtil instance = ContactUtil._();

  Future<bool> requestPermission({BuildContext? context, bool openSettings = false}) async {
    bool isGranted = await FlutterContacts.requestPermission(readonly: true);
    if (isGranted == false) {
      if (openSettings) {
        if (context?.mounted == true) {
          _showOpenAppSettingsDialog(context!);
        }
      }
      return false;
    }
    return true;
  }

  _showOpenAppSettingsDialog(BuildContext context) {
    DialogProvider.instance.showConfirmDialog(
      context,
      title: 'Thông báo',
      message: 'Vui lòng cho phép Quyền truy cập danh bạ để sử dụng chức năng này!',
      negativeTitle: 'Hủy',
      positiveTitle: 'Đồng ý',
      positiveCallback: () {
        AppSettings.openAppSettings();
      },
    );
  }

  Future<List<Contact>?> getContacts({BuildContext? context, bool permissionAllowed = false}) async {
    if (!permissionAllowed) {
      bool? isGranted = await requestPermission(context: context);
      if (isGranted == false) {
        return null;
      }
    }
    List<Contact> contacts = await FlutterContacts.getContacts(
      withProperties: true,
      withThumbnail: false,
      withPhoto: false,
    );
    return contacts;
  }

  Future<List<Contact>?> getContactsRequire({bool permissionAllowed = false, BuildContext? context}) async {
    if (!permissionAllowed) {
      bool? isGranted = await requestPermission(context: context, openSettings: true);
      if (isGranted == false) {
        return null;
      }
    }
    List<Contact> contacts = await FlutterContacts.getContacts(
      withProperties: true,
      withThumbnail: false,
      withPhoto: false,
    );
    return contacts;
  }
}
