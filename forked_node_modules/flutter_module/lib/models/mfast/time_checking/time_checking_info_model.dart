import 'package:flutter_module/common/enum/mfast/time_checking_status.dart';
import 'package:flutter_module/common/utils/datetime_util.dart';
import 'package:flutter_module/common/utils/text_util.dart';

class TimeCheckingInfoModel {
  String? date;
  List<String>? successHistory;
  String? additionCheckingType;
  List<CheckingHistoryDetail>? historyDetail;
  List<ReportHistoryModel>? reportHistory;

  TimeCheckingInfoModel({
    this.date,
    this.successHistory,
    this.additionCheckingType,
    this.historyDetail,
    this.reportHistory,
  });

  TimeCheckingInfoModel.fromJson(Map<String, dynamic> json) {
    date = json["date"];
    successHistory = json["successHistory"] == null ? null : List<String>.from(json["successHistory"]);
    additionCheckingType = json["additionCheckingType"];
    historyDetail = json["historyDetail"] == null
        ? null
        : (json["historyDetail"] as List).map((e) => CheckingHistoryDetail.fromJson(e)).toList();
    reportHistory = json["reportHistory"] == null
        ? null
        : (json["reportHistory"] as List).map((e) => ReportHistoryModel.fromJson(e)).toList();

    ///
    // final mockHistoryDetail = [
    //   {
    //     "typeName": "Điểm danh cuối giờ",
    //     "type": "checkout",
    //     "image": null,
    //     "lat": null,
    //     "lon": null,
    //     "checkingTimeStart": "2024-01-27 23:23:00",
    //     "checkingTimeEnd": "2024-01-27 23:24:00",
    //     "checkTimeline": "23:19 - 23:20",
    //     "checkTime": null,
    //     "status": "pending",
    //     "color": "#cea709",
    //     "url": null
    //   },
    //   {
    //     "typeName": "Điểm danh đầu giờ",
    //     "type": "checkin",
    //     "image": null,
    //     "lat": null,
    //     "lon": null,
    //     "checkingTimeStart": "2024-01-27 16:40:00",
    //     "checkingTimeEnd": "2024-01-27 16:42:00",
    //     "checkTimeline": "16:40 - 16:42",
    //     "checkTime": null,
    //     "status": "fail",
    //     "color": "#005fff",
    //     "url": null
    //   }
    // ];
    // historyDetail = mockHistoryDetail.map((e) => CheckingHistoryDetail.fromJson(e)).toList();
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> map = <String, dynamic>{};
    map["date"] = date;
    if (successHistory != null) {
      map["successHistory"] = successHistory;
    }
    map["additionCheckingType"] = additionCheckingType;
    if (historyDetail != null) {
      map["historyDetail"] = historyDetail?.map((e) => e.toJson()).toList();
    }
    if (reportHistory != null) {
      map["reportHistory"] = reportHistory?.map((e) => e.toJson()).toList();
    }
    return map;
  }
}

class ReportHistoryModel {
  String? reportId;
  double? totalIncome;
  double? estKpi;
  String? reportTime;
  String? note;

  ReportHistoryModel({
    this.reportId,
    this.totalIncome,
    this.estKpi,
    this.reportTime,
    this.note,
  });

  ReportHistoryModel.fromJson(Map<String, dynamic> json) {
    reportId = json["reportID"];
    totalIncome = TextUtils.parseDouble(json["totalIncome"]);
    estKpi = TextUtils.parseDouble(json["estKpi"]);
    reportTime = json["reportTime"];
    note = json["note"];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> map = <String, dynamic>{};
    map["reportID"] = reportId;
    map["totalIncome"] = totalIncome;
    map["estKpi"] = estKpi;
    map["reportTime"] = reportTime;
    map["note"] = note;
    return map;
  }
}

class CheckingHistoryDetail {
  String? typeName;
  String? type;
  String? image;
  String? lat;
  String? lon;
  String? checkingTimeStart;
  String? checkingTimeEnd;
  String? checkTimeline;
  String? checkTime;
  String? status;
  String? color;
  String? url;
  int? duration;

  CheckingHistoryDetail({
    this.typeName,
    this.type,
    this.image,
    this.lat,
    this.lon,
    this.checkingTimeStart,
    this.checkingTimeEnd,
    this.checkTimeline,
    this.checkTime,
    this.status,
    this.color,
    this.url,
    this.duration,
  });

  CheckingHistoryDetail.fromJson(Map<String, dynamic> json) {
    typeName = json["typeName"];
    type = json["type"];
    image = json["image"];
    lat = json["lat"];
    lon = json["lon"];
    checkingTimeStart = json["checkingTimeStart"];
    checkingTimeEnd = json["checkingTimeEnd"];
    checkTimeline = json["checkTimeline"];
    checkTime = json["checkTime"];
    status = json["status"];
    color = json["color"];
    url = json["url"];
    duration = TextUtils.parseInt(json["duration"]);
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> map = <String, dynamic>{};
    map["typeName"] = typeName;
    map["type"] = type;
    map["image"] = image;
    map["lat"] = lat;
    map["lon"] = lon;
    map["checkingTimeStart"] = checkingTimeStart;
    map["checkingTimeEnd"] = checkingTimeEnd;
    map["checkTimeline"] = checkTimeline;
    map["checkTime"] = checkTime;
    map["status"] = status;
    map["color"] = color;
    map["url"] = url;
    map["duration"] = duration;
    return map;
  }

  TimeCheckingStatus getStatus() {
    return TimeCheckingStatus.fromValue(status);
  }

  int getRemainSeconds() {
    return duration ?? 0;
    // final startTime = DateTimeUtil.getDate(
    //   checkingTimeStart ?? '',
    //   format: DateTimeFormat.yyyy_MM_dd_HH_mm_ss,
    //   isFromUTC: false,
    // );
    // final endTime = DateTimeUtil.getDate(
    //   checkingTimeEnd ?? '',
    //   format: DateTimeFormat.yyyy_MM_dd_HH_mm_ss,
    //   isFromUTC: false,
    // );
    // final isBetween = startTime != null && endTime != null
    //     ? DateTime.now().isAfter(startTime) && DateTime.now().isBefore(endTime)
    //     : false;
    // final remainSeconds = isBetween
    //     ? DateTimeUtil.convertStringRemainSeconds(
    //         checkingTimeEnd,
    //         format: DateTimeFormat.yyyy_MM_dd_HH_mm_ss,
    //         isFromUtc: false,
    //       )
    //     : 0;
    // return remainSeconds;
  }
}
