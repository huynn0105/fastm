import 'package:flutter_module/common/utils/text_util.dart';

import '../../../common/enum/mfast/report_item_type.dart';

class ReportModel {
  String id;
  String image;
  String title;
  String projectID;
  String groupID;
  List<ReportItemModel> items;

  ReportModel({
    required this.id,
    required this.image,
    required this.title,
    required this.items,
    required this.groupID,
    required this.projectID,
  });

  factory ReportModel.fromJson(Map<String, dynamic> json) {
    List<dynamic> rawItems = json['items'] ?? [];
    List<ReportItemModel> items = rawItems.map((item) => ReportItemModel.fromJson(item)).toList();

    return ReportModel(
      id: json['id'] ?? '',
      image: json['image'] ?? '',
      title: json['title'] ?? '',
      projectID: json['projectID'] ?? '',
      groupID: json['groupID'] ?? '',
      items: items,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'image': image,
      'title': title,
      'projectID': projectID,
      'groupID': groupID,
      'items': items.map((x) => x.toJson()).toList(),
    };
  }

  ReportModel copyWith({
    String? id,
    String? image,
    String? title,
    String? projectID,
    String? groupID,
    List<ReportItemModel>? items,
  }) {
    return ReportModel(
      id: id ?? this.id,
      image: image ?? this.image,
      title: title ?? this.title,
      projectID: projectID ?? this.projectID,
      groupID: groupID ?? this.groupID,
      items: items ?? this.items,
    );
  }
}

class ReportItemModel {
  String title;
  String description;
  bool isSum;
  List<ReportDetailItemModel> items;

  ReportItemModel({
    required this.title,
    required this.description,
    required this.items,
    required this.isSum,
  });

  factory ReportItemModel.fromJson(Map<String, dynamic> json) {
    List<dynamic> rawDetailItems = json['items'] ?? [];
    List<ReportDetailItemModel> detailItems =
        rawDetailItems.map((item) => ReportDetailItemModel.fromJson(item)).toList();

    return ReportItemModel(
      title: json['title'] ?? '',
      description: json['description'] ?? '',
      items: detailItems,
      isSum: json['isSum'] ?? '',
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'title': title,
      'description': description,
      'isSum': isSum,
      'items': items.map((x) => x.toJson()).toList(),
    };
  }

  ReportItemModel copyWith({
    String? title,
    String? description,
    bool? isSum,
    List<ReportDetailItemModel>? items,
  }) {
    return ReportItemModel(
      title: title ?? this.title,
      description: description ?? this.description,
      isSum: isSum ?? this.isSum,
      items: items ?? this.items,
    );
  }
}

class ReportDetailItemModel {
  String id;
  String label;
  String placeholder;
  String? unit;
  bool required;
  int minValue;
  int? maxValue;
  int? value;
  String? displayValue;
  ReportItemType type;
  String? logID;

  ReportDetailItemModel({
    required this.id,
    required this.label,
    required this.placeholder,
    required this.value,
    required this.unit,
    required this.required,
    required this.minValue,
    required this.maxValue,
    this.displayValue,
    this.type = ReportItemType.count,
    this.logID,
  });

  factory ReportDetailItemModel.fromJson(Map<String, dynamic> json) {
    return ReportDetailItemModel(
      id: json['id'] ?? '',
      label: json['label'] ?? '',
      placeholder: json['placeholder'] ?? '',
      unit: json['unit'],
      logID: json['logID'],
      required: json['required'] ?? false,
      minValue: TextUtils.parseInt(json['minValue']) ?? 0,
      maxValue: TextUtils.parseInt(json['maxValue']),
      value: TextUtils.parseInt(json['value']),
      displayValue: json['displayValue'],
      type: ReportItemType.fromValue(json['type']),
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'label': label,
      'placeholder': placeholder,
      'value': value,
      'unit': unit,
      'required': required,
      'minValue': minValue,
      'displayValue': displayValue,
      'type': type.name,
      'logID': logID,
    };
  }

  ReportDetailItemModel copyWith({
    String? id,
    String? label,
    String? placeholder,
    String? unit,
    bool? required,
    int? minValue,
    int? maxValue,
    int? value,
    String? displayValue,
    ReportItemType? type,
    String? logID,
  }) {
    return ReportDetailItemModel(
      id: id ?? this.id,
      label: label ?? this.label,
      placeholder: placeholder ?? this.placeholder,
      unit: unit ?? this.unit,
      required: required ?? this.required,
      minValue: minValue ?? this.minValue,
      maxValue: maxValue ?? this.maxValue,
      value: value ?? this.value,
      displayValue: displayValue ?? this.displayValue,
      type: type ?? this.type,
      logID: logID ?? this.logID,
    );
  }
}
