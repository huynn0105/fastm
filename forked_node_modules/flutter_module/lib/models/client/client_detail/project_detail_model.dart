// ignore_for_file: public_member_api_docs, sort_constructors_first
import 'package:flutter_module/common/utils/text_util.dart';

class ProjectDetailModel {
  ProjectDetailModel({
    this.finance,
    this.insurance,
    this.daa,
    this.mpl,
  });

  FinanceProjectDetailModel? finance;
  InsuranceProjectDetailModel? insurance;
  DAAProjectDetailModel? daa;
  MPLProjectDetailModel? mpl;

  ProjectDetailModel.fromFinanceJson(Map<String, dynamic> json) {
    finance = FinanceProjectDetailModel.fromJson(json);
  }
  ProjectDetailModel.fromInsuranceJson(Map<String, dynamic> json) {
    insurance = InsuranceProjectDetailModel.fromJson(json);
  }
  ProjectDetailModel.fromDAAJson(Map<String, dynamic> json) {
    daa = DAAProjectDetailModel.fromJson(json);
  }
  ProjectDetailModel.fromMPLJson(Map<String, dynamic> json) {
    mpl = MPLProjectDetailModel.fromJson(json);
  }
}

class FinanceProjectDetailModel {
  String? iD;
  String? appUID;
  String? appModel;
  String? progress;
  double? uwApproveAmount;
  double? uwRequestAmount;
  int? uwTenureRequested;
  int? uwTermApproved;
  String? uwProductname;
  String? uwContractNumber;
  String? lastProcessDate;
  String? projectID;
  String? dsaProcessSubsID;
  String? initFullName;
  String? lastFullName;
  String? projectName;
  String? iconURL;
  String? webviewURL;
  String? saleCode;
  String? lastProcessText;

  FinanceProjectDetailModel(
      {this.iD,
      this.appUID,
      this.appModel,
      this.progress,
      this.uwApproveAmount,
      this.uwRequestAmount,
      this.uwTenureRequested,
      this.uwTermApproved,
      this.uwProductname,
      this.uwContractNumber,
      this.lastProcessDate,
      this.projectID,
      this.dsaProcessSubsID,
      this.initFullName,
      this.lastFullName,
      this.projectName,
      this.iconURL,
      this.webviewURL,
      this.saleCode,
      this.lastProcessText});

  FinanceProjectDetailModel.fromJson(Map<String, dynamic> json) {
    iD = json['ID'];
    appUID = json['appUID'];
    appModel = json['appModel'];
    progress = json['progress'];
    uwRequestAmount = TextUtils.parseDouble(json['uwRequestAmount']);
    uwApproveAmount = TextUtils.parseDouble(json['uwApproveAmount']);
    uwTenureRequested = TextUtils.parseInt(json['uwTenureRequested']);
    uwTermApproved = TextUtils.parseInt(json['uwTermApproved']);
    uwProductname = json['uwProductname'];
    lastProcessDate = json['lastProcessDate'];
    projectID = json['projectID'];
    dsaProcessSubsID = json['dsaProcessSubsID'];
    initFullName = json['initFullName'];
    projectName = json['projectName'];
    iconURL = json['iconURL'];
    webviewURL = json['webviewURL'];
    lastProcessText = json['lastProcessText'];
    uwContractNumber = json['uwContractNumber'];
    saleCode = json['saleCode'];
    lastProcessText = json['lastProcessText'];
  }
}

class InsuranceProjectDetailModel {
  String? iD;
  String? partner;
  String? projectName;
  String? startDate;
  String? expiredDate;
  String? desc;
  String? iconURL;
  String? webviewURL;
  String? partnerText;
  String? productType;
  String? insuranceAmount;

  InsuranceProjectDetailModel(
      {this.iD,
      this.partner,
      this.projectName,
      this.startDate,
      this.expiredDate,
      this.desc,
      this.iconURL,
      this.webviewURL,
      this.partnerText,
      this.productType,
      this.insuranceAmount});

  InsuranceProjectDetailModel.fromJson(Map<String, dynamic> json) {
    iD = json['ID'];
    partner = json['partner'];
    projectName = json['projectName'];
    startDate = json['startDate'];
    expiredDate = json['expiredDate'];
    desc = json['desc'];
    iconURL = json['iconURL'];
    webviewURL = json['webviewURL'];
    partnerText = json['partnerText'];
    productType = json['productType'];
    insuranceAmount = json['insuranceAmount'];
  }
}

class DAAProjectDetailModel {
  String? projectAlias;
  String? webviewURL;
  String? lastProcessDate;
  String? lastProcessText;

  DAAProjectDetailModel({this.projectAlias, this.webviewURL, this.lastProcessDate, this.lastProcessText});

  DAAProjectDetailModel.fromJson(Map<String, dynamic> json) {
    projectAlias = json['projectAlias'];
    webviewURL = json['webviewURL'];
    lastProcessDate = json['lastProcessDate'];
    lastProcessText = json['processText'] ?? json['lastProcessText'];
  }
}

class MPLProjectDetailModel {
  String? itemIDs;
  String? iD;
  String? orderID;
  String? amountAfterTax;
  String? createdDate;
  String? paymentID;
  String? updatedDate;
  String? status;
  String? processID;
  String? processText;
  String? appID;
  String? mplToken;
  String? icon;
  String? fullName;
  String? mobilePhone;
  String? paymentMethod;
  String? processStateID;
  int? sumBonus;
  int? totalAmount;
  int? totalQuantity;
  List<MPLItem>? items;
  String? iconURL;
  String? title;
  String? webviewURL;
  String? lastProcessText;

  MPLProjectDetailModel(
      {this.itemIDs,
      this.iD,
      this.orderID,
      this.amountAfterTax,
      this.createdDate,
      this.paymentID,
      this.updatedDate,
      this.status,
      this.processID,
      this.processText,
      this.appID,
      this.mplToken,
      this.icon,
      this.fullName,
      this.mobilePhone,
      this.paymentMethod,
      this.processStateID,
      this.sumBonus,
      this.totalAmount,
      this.totalQuantity,
      this.items,
      this.iconURL,
      this.title,
      this.webviewURL,
      this.lastProcessText});

  MPLProjectDetailModel.fromJson(Map<String, dynamic> json) {
    itemIDs = json['itemIDs'];
    iD = json['ID'];
    orderID = json['orderID'];
    amountAfterTax = json['amountAfterTax'];
    createdDate = json['createdDate'];
    paymentID = json['paymentID'];
    updatedDate = json['updatedDate'];
    status = json['status'];
    processID = json['processID'];
    processText = json['processText'];
    appID = json['appID'];
    mplToken = json['mplToken'];
    icon = json['icon'];
    fullName = json['fullName'];
    mobilePhone = json['mobilePhone'];
    paymentMethod = json['paymentMethod'];
    processStateID = json['processStateID'];
    sumBonus = json['sum_bonus'];
    totalAmount = json['total_amount'];
    totalQuantity = json['total_quantity'];
    if (json['items'] != null) {
      items = <MPLItem>[];
      json['items'].forEach((v) {
        items!.add(MPLItem.fromJson(v));
      });
    }
    iconURL = json['iconURL'];
    title = json['title'];
    webviewURL = json['webviewURL'];
    lastProcessText = json['processText'] ?? json['lastProcessText'];
  }
}

class MPLItem {
  String? productName;
  String? quantity;
  String? amount;
  String? createdDate;
  String? updatedDate;
  String? itemID;
  String? processID;
  String? processText;
  String? addressFull;
  String? price;
  String? image;

  MPLItem(
      {this.productName,
      this.quantity,
      this.amount,
      this.createdDate,
      this.updatedDate,
      this.itemID,
      this.processID,
      this.processText,
      this.addressFull,
      this.price,
      this.image});

  MPLItem.fromJson(Map<String, dynamic> json) {
    productName = json['productName'];
    quantity = json['quantity'];
    amount = json['amount'];
    createdDate = json['createdDate'];
    updatedDate = json['updatedDate'];
    itemID = json['itemID'];
    processID = json['processID'];
    processText = json['processText'];
    addressFull = json['addressFull'];
    price = json['price'];
    image = json['image'];
  }
}
