import 'package:flutter_module/common/enum/client/ad_link_tab_type.dart';

class AdLinkModel {
  String? id;
  String? userId;
  String? pageId;
  String? active;
  String? description;
  String? customerLabel;
  String? views;
  String? finance;
  String? insurrance;
  String? total;
  String? boughtIns;
  String? itemLinks;
  String? refCode;
  String? nextHandler;
  String? linkReview;
  String? linkReviewDeeplink;
  String? title;
  String? icon;
  int? totalFollow;
  int? totalAttended;
  int? totalSuccess;

  AdLinkModel(
      {this.id,
      this.userId,
      this.pageId,
      this.active,
      this.description,
      this.customerLabel,
      this.views,
      this.finance,
      this.insurrance,
      this.total,
      this.boughtIns,
      this.itemLinks,
      this.refCode,
      this.nextHandler,
      this.linkReview,
      this.linkReviewDeeplink,
      this.title,
      this.icon,
      this.totalFollow,
      this.totalAttended,
      this.totalSuccess});

  AdLinkModel.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    userId = json['user_id'];
    pageId = json['page_id'];
    active = json['active'];
    description = json['description'];
    customerLabel = json['customer_label'];
    views = json['views'];
    finance = json['finance'];
    insurrance = json['insurrance'];
    total = json['total'];
    boughtIns = json['boughtIns'];
    itemLinks = json['itemLinks'];
    refCode = json['refCode'];
    nextHandler = json['next_handler'];
    linkReview = json['link_review'];
    linkReviewDeeplink = json['link_review_deeplink'];
    title = json['title'];
    icon = json['icon'];
    totalFollow = json['total_follow'];
    totalAttended = json['total_attended'];
    totalSuccess = json['total_success'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['id'] = id;
    data['user_id'] = userId;
    data['page_id'] = pageId;
    data['active'] = active;
    data['description'] = description;
    data['customer_label'] = customerLabel;
    data['views'] = views;
    data['finance'] = finance;
    data['insurrance'] = insurrance;
    data['total'] = total;
    data['boughtIns'] = boughtIns;
    data['itemLinks'] = itemLinks;
    data['refCode'] = refCode;
    data['next_handler'] = nextHandler;
    data['link_review'] = linkReview;
    data['link_review_deeplink'] = linkReviewDeeplink;
    data['title'] = title;
    data['icon'] = icon;
    data['total_follow'] = totalFollow;
    data['total_attended'] = totalAttended;
    data['total_success'] = totalSuccess;
    return data;
  }

  bool isFinance() {
    final AdLinkTabType type = finance == '1' ? AdLinkTabType.finance : AdLinkTabType.insurance;
    return type.isFinance;
  }
  bool isInsurance() {
    final AdLinkTabType type = finance == '1' ? AdLinkTabType.finance : AdLinkTabType.insurance;
    return type.isInsurance;
  }
}
