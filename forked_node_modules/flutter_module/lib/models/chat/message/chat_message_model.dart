import 'package:flutter_module/app_data.dart';
import 'package:flutter_module/common/enum/chat/thread_message_type.dart';
import 'package:flutter_module/features/chat/hive_database/entities/chat_message/chat_message_entity.dart';

class ChatMessageModel {
  String? authorFullName;
  int? updateTime;
  Map<String, bool>? isReceivedBy;
  String? authorAvatarImage;
  String? threadID;
  String? typeCreateTime;
  String? uid;
  String? quotedText;
  String? tagDataJSON;
  String? authorID;
  bool? isDeleted;
  int? createTime;
  String? type;
  String? quotedType;
  String? text;
  String? quotedID;

  ChatMessageModel({
    this.authorFullName,
    this.updateTime,
    this.isReceivedBy,
    this.authorAvatarImage,
    this.threadID,
    this.typeCreateTime,
    this.uid,
    this.quotedText,
    this.tagDataJSON,
    this.authorID,
    this.isDeleted,
    this.createTime,
    this.type,
    this.quotedType,
    this.text,
    this.quotedID,
  });

  factory ChatMessageModel.fromEntity(ChatMessageEntity entity) {
    return ChatMessageModel(
      uid: entity.uid,
      authorAvatarImage: entity.authorAvatarImage,
      authorFullName: entity.authorFullName,
      authorID: entity.authorID,
      createTime: entity.createTime,
      isDeleted: entity.isDeleted,
      isReceivedBy: entity.isReceivedBy,
      quotedID: entity.quotedID,
      quotedText: entity.quotedText,
      quotedType: entity.quotedType,
      tagDataJSON: entity.tagDataJSON,
      text: entity.text,
      threadID: entity.threadID,
      type: entity.type,
      typeCreateTime: entity.typeCreateTime,
      updateTime: entity.updateTime,
    );
  }

  ChatMessageModel.fromJson(Map<String, dynamic> json) {
    authorFullName = json['authorFullName'];
    updateTime = json['updateTime'];
    if (json['isReceivedBy'] != null) {
      isReceivedBy = Map<String, bool>.from(json['isReceivedBy']);
    }
    authorAvatarImage = json['authorAvatarImage'];
    threadID = json['threadID'];
    typeCreateTime = json['type_createTime'];
    uid = json['uid'];
    quotedText = json['quotedText'];
    tagDataJSON = json['tagDataJSON'];
    authorID = json['authorID'];
    isDeleted = json['isDeleted'];
    createTime = json['createTime'];
    type = json['type'];
    quotedType = json['quotedType'];
    text = json['text'];
    quotedID = json['quotedID'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['authorFullName'] = authorFullName;
    data['updateTime'] = updateTime;
    if (isReceivedBy != null) {
      data['isReceivedBy'] = isReceivedBy;
    }
    data['authorAvatarImage'] = authorAvatarImage;
    data['threadID'] = threadID;
    data['type_createTime'] = typeCreateTime;
    data['uid'] = uid;
    data['quotedText'] = quotedText;
    data['tagDataJSON'] = tagDataJSON;
    data['authorID'] = authorID;
    data['isDeleted'] = isDeleted;
    data['createTime'] = createTime;
    data['type'] = type;
    data['quotedType'] = quotedType;
    data['text'] = text;
    data['quotedID'] = quotedID;
    return data;
  }

  isMeAuthor() {
    return authorID == AppData.instance.userID;
  }

  isTextMessage() {
    return type == ThreadMessageType.text.name;
  }

  isImagesMessage() {
    return type == ThreadMessageType.images.name;
  }

  isVideosMessage() {
    return type == ThreadMessageType.videos.name;
  }

  isAudiosMessage() {
    return type == ThreadMessageType.audios.name;
  }

  isNoticeMessage() {
    return type == ThreadMessageType.notice.name;
  }

  isLocationMessage() {
    return type == ThreadMessageType.location.name;
  }

  isStickerMessage() {
    return type == ThreadMessageType.sticker.name;
  }

  getAuthorShortName() {
    final names = authorFullName?.split(' ') ?? [];
    final authorShortName = names.isNotEmpty ? names[names.length - 1] : authorFullName;
    return authorShortName;
  }

  String getDisplayTextForLastMessage() {
    // author
    String author = isMeAuthor() ? 'Bạn: ' : '${getAuthorShortName()}: ';
    if (isNoticeMessage()) {
      author = '';
    }

    // message
    String message = text ?? '';
    if (isLocationMessage()) {
      message = '[Vừa chia sẻ vị trí]';
    } else if (isImagesMessage()) {
      message = '[Vừa chia sẻ ảnh]';
    } else if (isVideosMessage()) {
      message = '[Vừa chia sẻ video]';
    } else if (isAudiosMessage()) {
      message = '[Vừa chia sẻ tin nhắn thoại]';
    }
    return '$author$message';
  }
}
