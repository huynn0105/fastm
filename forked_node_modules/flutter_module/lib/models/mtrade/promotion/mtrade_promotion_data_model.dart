
import '../../../common/enum/mtrade/promotion_discount_type.dart';
import '../../../common/utils/format_util.dart';
import '../../../common/utils/text_util.dart';

class MasterObjectType {
  String? code;
  String? name;

  MasterObjectType({this.code, this.name});

  MasterObjectType.fromJson(Map<String, dynamic> json) {
    code = json['code'];
    name = json['name'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['code'] = code;
    data['name'] = name;
    return data;
  }
}

class OmsPromotionCodes {
  String? code;

  OmsPromotionCodes({this.code});

  OmsPromotionCodes.fromJson(Map<String, dynamic> json) {
    code = json['code'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['code'] = code;
    return data;
  }
}

class OmsPromotionConditions {
  String? id;
  MasterPromotionCategory? masterPromotionCategory;
  List<OmsPromotionConditionItems>? omsPromotionConditionItems;
  double? promotionValue;

  OmsPromotionConditions({this.id, this.masterPromotionCategory, this.omsPromotionConditionItems, this.promotionValue});

  OmsPromotionConditions.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    masterPromotionCategory = json['master_promotion_category'] != null
        ? MasterPromotionCategory.fromJson(json['master_promotion_category'])
        : null;
    if (json['oms_promotion_condition_items'] != null) {
      omsPromotionConditionItems = <OmsPromotionConditionItems>[];
      json['oms_promotion_condition_items'].forEach((v) {
        omsPromotionConditionItems!.add(OmsPromotionConditionItems.fromJson(v));
      });
    }
    promotionValue = TextUtils.parseDouble(json['promotion_value']);
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['id'] = id;
    if (masterPromotionCategory != null) {
      data['master_promotion_category'] = masterPromotionCategory!.toJson();
    }
    if (omsPromotionConditionItems != null) {
      data['oms_promotion_condition_items'] = omsPromotionConditionItems!.map((v) => v.toJson()).toList();
    }
    data['promotion_value'] = promotionValue;
    return data;
  }
}

class MasterPromotionCategory {
  String? code;
  String? name;
  String? nameOut;

  MasterPromotionCategory({this.code, this.name, this.nameOut});

  MasterPromotionCategory.fromJson(Map<String, dynamic> json) {
    code = json['code'];
    name = json['name'];
    nameOut = json['name_out'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['code'] = code;
    data['name'] = name;
    data['name_out'] = nameOut;
    return data;
  }
}

class OmsPromotionConditionItems {
  OmsPromotionCodes? masterCollectTransactionType;
  OmsProductVariation? omsProductVariation;
  int? limitQuantityAvailable;
  int? limitQuantity;
  double? promotionPrice;
  double? promotionValue;

  OmsPromotionConditionItems({
    this.masterCollectTransactionType,
    this.omsProductVariation,
    this.limitQuantityAvailable,
    this.limitQuantity,
    this.promotionPrice,
    this.promotionValue,
  });

  OmsPromotionConditionItems.fromJson(Map<String, dynamic> json) {
    masterCollectTransactionType = json['master_collect_transaction_type'] != null
        ? OmsPromotionCodes.fromJson(json['master_collect_transaction_type'])
        : null;
    omsProductVariation =
    json['oms_product_variation'] != null ? OmsProductVariation.fromJson(json['oms_product_variation']) : null;
    limitQuantityAvailable = json['limit_quantity_available'];
    limitQuantity = json['limit_quantity'];
    promotionPrice = TextUtils.parseDouble(json['promotion_price']);
    promotionValue = TextUtils.parseDouble(json['promotion_value']);
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    if (masterCollectTransactionType != null) {
      data['master_collect_transaction_type'] = masterCollectTransactionType!.toJson();
    }
    if (omsProductVariation != null) {
      data['oms_product_variation'] = omsProductVariation!.toJson();
    }
    data['limit_quantity_available'] = limitQuantityAvailable;
    data['limit_quantity'] = limitQuantity;
    data['promotion_price'] = promotionPrice;
    data['promotion_value'] = promotionValue;
    return data;
  }


  String getCurrency() {
    var value = masterCollectTransactionType?.code;
    return value ?? "";
  }

  String getTicketValue() {
    String result = "";
    if (getCurrency() == PromotionDiscountType.vnd.code) {
      result = FormatUtil.numberFormat(promotionValue);
    } else {
      result = "${FormatUtil.doubleFormat(promotionValue)}%";
    }
    return result;
  }
}

class OmsProductVariation {
  String? code;
  String? sku;
  double? price;

  OmsProductVariation({this.code, this.sku, this.price});

  OmsProductVariation.fromJson(Map<String, dynamic> json) {
    code = json['code'];
    sku = json['sku'];
    price = TextUtils.parseDouble(json['price']);
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['code'] = code;
    data['sku'] = sku;
    data['price'] = price;
    return data;
  }
}

class OmsPromotionDocuments {
  String? id;
  String? url;

  OmsPromotionDocuments({this.id, this.url});

  OmsPromotionDocuments.fromJson(Map<String, dynamic> json) {
    id = json['id'];
    url = json['url'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['id'] = id;
    data['url'] = url;
    return data;
  }
}
