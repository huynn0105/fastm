import 'package:flutter_module/common/extension/list_extension.dart';
import 'package:flutter_module/models/mtrade/cart/mtrade_cart_product_model.dart';
import 'package:flutter_module/models/mtrade/product_detail/mtrade_sku_detail_model.dart';
import 'package:flutter_module/models/mtrade/product_detail/product_delivery_model.dart';

import '../../../common/utils/text_util.dart';
import '../product/mtrade_product_model.dart';
import 'attribute_model.dart';
import 'comm_model.dart';
import 'description_model.dart';
import 'mtrade_product_detail_info_model.dart';
import 'pay_later_model.dart';
import 'pay_now_model.dart';

/// productID : "353"
/// name : "LENOVO "
/// descShort : ""
/// contest : [""]
/// code : "98712THNVM98123"
/// merchantCode : "UMBALA"
/// price : 11000000
/// comparePrice : ""
/// product_invalid : false
/// description : [{"title":"Mô tả sản phẩm","content":""}]
/// payNow : {"comm":"7.6"}
/// payLater : {"tenorMin":"1","tenorMax":"36","comm":"5.5","interestRate":"0.00"}
/// productImg : ["https://los-dev.s3-sgn09.fptcloud.com/mfast/image/bd8406ef-6ec7-45aa-b22a-67b30caaaa65.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/923d4875-123d-4ef2-9a61-07135e32c34c.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/8847c38a-cc1a-4458-92a2-d0c7efb8843d.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/bd8406ef-6ec7-45aa-b22a-67b30caaaa65.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/923d4875-123d-4ef2-9a61-07135e32c34c.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/8847c38a-cc1a-4458-92a2-d0c7efb8843d.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/bd8406ef-6ec7-45aa-b22a-67b30caaaa65.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/923d4875-123d-4ef2-9a61-07135e32c34c.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/8847c38a-cc1a-4458-92a2-d0c7efb8843d.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/bd8406ef-6ec7-45aa-b22a-67b30caaaa65.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/923d4875-123d-4ef2-9a61-07135e32c34c.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/8847c38a-cc1a-4458-92a2-d0c7efb8843d.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/bd8406ef-6ec7-45aa-b22a-67b30caaaa65.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/923d4875-123d-4ef2-9a61-07135e32c34c.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/8847c38a-cc1a-4458-92a2-d0c7efb8843d.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/bd8406ef-6ec7-45aa-b22a-67b30caaaa65.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/923d4875-123d-4ef2-9a61-07135e32c34c.jpg","https://los-dev.s3-sgn09.fptcloud.com/mfast/image/8847c38a-cc1a-4458-92a2-d0c7efb8843d.jpg"]
/// attribute : [{"name":"Màu sắc","keyword":"sku","option":[{"name":"Xanh Dương","sku":"98712THNVM98123.","price":"11000000.00"}]}]

class MTradeProductDetailModel {
  MTradeProductDetailModel({
    this.productID,
    this.name,
    this.descShort,
    this.contest,
    this.code,
    this.merchantCode,
    this.price,
    this.productInvalid,
    this.productOutOfStock,
    this.descriptions,
    this.payNow,
    this.payLater,
    this.productImages,
    this.attributes,
    this.skuDetail,
    this.comparePrice,
    this.preOrderDate,
    this.detailInfo,
    this.payOnDelivery,
    this.productDelivery,
    this.productIcon,
  });

  MTradeProductDetailModel.fromJson(dynamic json) {
    productID = json['productID'];
    name = json['name'];
    descShort = json['descShort'];
    contest = json['contest'] != null ? json['contest'].cast<String>() : [];
    code = json['code'];
    merchantCode = json['merchantCode'];
    price = json['price'];
    productInvalid = json['product_invalid'];
    productOutOfStock = json['product_out_of_stock'];
    if (json['description'] != null) {
      descriptions = [];
      json['description'].forEach((v) {
        descriptions?.add(DescriptionModel.fromJson(v));
      });
    }
    payNow = json['payNow'] != null ? PayNowModel.fromJson(json['payNow']) : null;
    payLater = json['payLater'] != null ? PayLaterModel.fromJson(json['payLater']) : null;
    productImages = json['productImg'] != null ? json['productImg'].cast<String>() : [];
    if (json['attribute'] != null) {
      attributes = [];
      json['attribute'].forEach((v) {
        attributes?.add(AttributeModel.fromJson(v));
      });
    }
    skuDetail = json['detailProduct'] != null ? MTradeSkuDetailModel.fromJson(json['detailProduct']) : null;
    if (json['comparePrice'] != null) {
      comparePrice = [];
      json['comparePrice'].forEach((v) {
        comparePrice?.add(ValueModel.fromJson(v));
      });
    }
    preOrderDate = json['pre_order_date'];
    detailInfo = json['detail_info'] != null ? DetailInfoModel.fromJson(json['detail_info']) : null;
    payOnDelivery = json['pay_on_delivery'];
    productDelivery = json['product_delivery_time'] != null ? ProductDeliveryModel.fromJson(json['product_delivery_time']) : null;
    productIcon = json['productIcon'] != null ? json['productIcon'].cast<String>() : [];
  }

  String? productID;
  String? name;
  String? descShort;
  List<String>? contest;
  String? code;
  String? merchantCode;
  int? price;
  bool? productInvalid;
  bool? productOutOfStock;
  List<DescriptionModel>? descriptions;
  PayNowModel? payNow;
  PayLaterModel? payLater;
  List<String>? productImages;
  List<AttributeModel>? attributes;
  MTradeSkuDetailModel? skuDetail;
  List<ValueModel>? comparePrice;
  String? preOrderDate;
  DetailInfoModel? detailInfo;
  bool? payOnDelivery;
  ProductDeliveryModel? productDelivery;
  List<String>? productIcon;

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['productID'] = productID;
    map['name'] = name;
    map['descShort'] = descShort;
    map['contest'] = contest;
    map['code'] = code;
    map['merchantCode'] = merchantCode;
    map['price'] = price;
    map['comparePrice'] = comparePrice?.toString();
    map['product_invalid'] = productInvalid;
    map['product_out_of_stock'] = productOutOfStock;
    if (descriptions != null) {
      map['description'] = descriptions?.map((v) => v.toJson()).toList();
    }
    if (payNow != null) {
      map['payNow'] = payNow?.toJson();
    }
    if (payLater != null) {
      map['payLater'] = payLater?.toJson();
    }
    map['productImg'] = productImages;
    if (attributes != null) {
      map['attribute'] = attributes?.map((v) => v.toJson()).toList();
    }
    if (comparePrice != null) {
      map['comparePrice'] = comparePrice?.map((v) => v.toJson()).toList();
    }
    map['pre_order_date'] = preOrderDate;
    if (detailInfo != null) {
      map['detail_info'] = detailInfo?.toJson();
    }
    map['pay_on_delivery'] = payOnDelivery;
    if (productDelivery != null) {
      map['product_delivery_time'] = productDelivery?.toJson();
    }
    map['productIcon'] = productIcon;
    return map;
  }

  MTradeProductDetailModel.fromProduct(MTradeProductModel? product) {
    name = product?.name;
    code = product?.code;
    price = product?.price;
    productImages = product?.image != null ? [product?.image ?? ""] : null;
    comparePrice = product?.comparePrice;
  }

  MTradeProductDetailModel.fromCart(MTradeCartProductModel? product) {
    name = product?.name;
    code = product?.productCode;
    price = product?.price;
    productImages = product?.productImg != null ? [product?.productImg ?? ""] : null;
    comparePrice = product?.comparePrice;
  }

  String getNameWithSku(List<List<String>>? options) {
    final name = this.name ?? "";
    final sku = options?.map((e) => e.valueAt(1)).join(" ") ?? "";
    return "$name - $sku";
  }
}
