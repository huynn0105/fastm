import 'package:flutter_module/models/mtrade/product_detail/comm_model.dart';

import '../../../common/utils/text_util.dart';
import 'attribute_model.dart';
import 'pay_later_model.dart';
import 'pay_now_model.dart';

/// quantity : "1"
/// price : "1000.00"
/// sku : "SKU001"
/// productImg : ["https://los-dev.s3-sgn09.fptcloud.com/mfast/image/91386ae8-848b-4d04-b33f-e17d282a5fb4.png"]
/// product_invalid : false
/// payLater : {"comm":{"value":55,"currency":"%"}}
/// payNow : {"comm":{"value":21,"currency":"%"}}
/// option : [[17,"512GB"],[19,"TÃ­m"]]

class MTradeSkuDetailModel {
  MTradeSkuDetailModel({
    this.quantity,
    this.price,
    this.sku,
    this.productImg,
    this.productInvalid,
    this.productOutOfStock,
    this.payLater,
    this.payNow,
    this.options,
    this.comparePrice,
    this.attributes,
    this.wholesale,
  });

  MTradeSkuDetailModel.fromJson(dynamic json) {
    quantity = TextUtils.parseInt(json['quantity']);
    price = TextUtils.parseInt(json['price']);
    sku = json['sku'];
    productImg = json['productImg'] != null ? json['productImg'].cast<String>() : [];
    productInvalid = json['product_invalid'];
    productOutOfStock = json['product_out_of_stock'];
    payLater = json['payLater'] != null ? PayLaterModel.fromJson(json['payLater']) : null;
    payNow = json['payNow'] != null ? PayNowModel.fromJson(json['payNow']) : null;
    if (json['option'] != null) {
      final tmpOptions = (json['option'] as List?) ?? [];
      final tmpResults = <List<String>>[];
      for (var list in tmpOptions) {
        final tmpList = <String>[];
        if (list is List?) {
          for (var e in (list ?? [])) {
            tmpList.add(e.toString());
          }
        }
        tmpResults.add(tmpList);
      }
      options = tmpResults;
    } else {
      options = [];
    }
    if (json['comparePrice'] != null) {
      comparePrice = [];
      json['comparePrice'].forEach((v) {
        comparePrice?.add(ValueModel.fromJson(v));
      });
    }
    wholesale = json['wholesale'];
  }

  MTradeSkuDetailModel.fromJsonCheck(dynamic json) {
    final jsonSkuDetail = json["detailProduct"];
    final jsonAttributes = json["attribute"];
    //
    quantity = TextUtils.parseInt(jsonSkuDetail['quantity']);
    price = TextUtils.parseInt(jsonSkuDetail['price']);
    sku = jsonSkuDetail['sku'];
    productImg = jsonSkuDetail['productImg'] != null ? jsonSkuDetail['productImg'].cast<String>() : [];
    productInvalid = jsonSkuDetail['product_invalid'];
    productOutOfStock = jsonSkuDetail['product_out_of_stock'];
    payLater = jsonSkuDetail['payLater'] != null ? PayLaterModel.fromJson(jsonSkuDetail['payLater']) : null;
    payNow = jsonSkuDetail['payNow'] != null ? PayNowModel.fromJson(jsonSkuDetail['payNow']) : null;
    if (jsonSkuDetail['option'] != null) {
      final tmpOptions = (jsonSkuDetail['option'] as List?) ?? [];
      final tmpResults = <List<String>>[];
      for (var list in tmpOptions) {
        final tmpList = <String>[];
        if (list is List?) {
          for (var e in (list ?? [])) {
            tmpList.add(e.toString());
          }
        }
        tmpResults.add(tmpList);
      }
      options = tmpResults;
    } else {
      options = [];
    }
    if (jsonAttributes != null) {
      attributes = [];
      jsonAttributes.forEach((v) {
        attributes?.add(AttributeModel.fromJson(v));
      });
    }
    if (jsonSkuDetail['comparePrice'] != null) {
      comparePrice = [];
      jsonSkuDetail['comparePrice'].forEach((v) {
        comparePrice?.add(ValueModel.fromJson(v));
      });
    }
    wholesale = jsonSkuDetail['wholesale'];
  }

  int? quantity;
  int? price;
  String? sku;
  List<String>? productImg;
  bool? productInvalid;
  bool? productOutOfStock;
  PayLaterModel? payLater;
  PayNowModel? payNow;
  List<List<String>>? options;
  List<AttributeModel>? attributes;
  List<ValueModel>? comparePrice;
  bool? wholesale;

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['quantity'] = quantity;
    map['price'] = price;
    map['sku'] = sku;
    map['productImg'] = productImg;
    map['product_invalid'] = productInvalid;
    map['product_out_of_stock'] = productOutOfStock;
    if (payLater != null) {
      map['payLater'] = payLater?.toJson();
    }
    if (payNow != null) {
      map['payNow'] = payNow?.toJson();
    }
    map['option'] = options;
    if (comparePrice != null) {
      map['comparePrice'] = comparePrice?.map((v) => v.toJson()).toList();
    }
    map['wholesale'] = wholesale;
    return map;
  }
}
