import 'package:flutter_module/common/utils/text_util.dart';

class ExtraConfigModel {
  String? badge;
  bool? highlight;
  String? comm;
  String? isBank;
  SuppotGroupModel? suppotGroup;
  SaleLinkModel? saleLink;
  String? exchangeRate;
  String? reputationSetPoint;
  String? contestId;
  List<String>? notAllowModel;
  List<String>? desc;
  String? productCategory;
  String? hotText;
  int? iconOpacity;
  String? badgeColor;

  ExtraConfigModel({
    this.badge,
    this.highlight,
    this.comm,
    this.isBank,
    this.suppotGroup,
    this.saleLink,
    this.exchangeRate,
    this.reputationSetPoint,
    this.contestId,
    this.notAllowModel,
    this.desc,
    this.productCategory,
    this.hotText,
    this.iconOpacity,
    this.badgeColor,
  });

  ExtraConfigModel.fromJson(Map<String, dynamic> json) {
    badge = json["badge"]?.toString();
    highlight = json["highlight"]?.toString() == '1' || json["highlight"]?.toString() == 'true';
    comm = json["comm"]?.toString();
    isBank = json["is_bank"];
    suppotGroup = json["suppot_group"] == null ? null : SuppotGroupModel.fromJson(json["suppot_group"]);
    saleLink = json["sale_link"] == null ? null : SaleLinkModel.fromJson(json["sale_link"]);
    exchangeRate = json["exchange_rate"];
    reputationSetPoint = json["reputation_set_point"];
    contestId = json["contestID"];
    notAllowModel = json["not_allow_model"] == null ? null : List<String>.from(json["not_allow_model"]);
    desc = json["desc"] == null ? null : List<String>.from(json["desc"]);
    productCategory = json["product_category"];
    hotText = json["hot_text"];
    badgeColor = json["badge_color"];
    iconOpacity = TextUtils.parseInt(json["icon_opacity"]);
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data["badge"] = badge;
    data["highlight"] = highlight;
    data["comm"] = comm;
    data["is_bank"] = isBank;
    if (suppotGroup != null) {
      data["suppot_group"] = suppotGroup?.toJson();
    }
    if (saleLink != null) {
      data["sale_link"] = saleLink?.toJson();
    }
    data["exchange_rate"] = exchangeRate;
    data["reputation_set_point"] = reputationSetPoint;
    data["contestID"] = contestId;
    if (notAllowModel != null) {
      data["not_allow_model"] = notAllowModel;
    }
    if (desc != null) {
      data["desc"] = desc;
    }
    data["product_category"] = productCategory;
    data["hot_text"] = hotText;
    data["icon_opacity"] = iconOpacity;
    data["badge_color"] = badgeColor;
    return data;
  }
}

class SaleLinkModel {
  String? knowledge;
  String? document;

  SaleLinkModel({
    this.knowledge,
    this.document,
  });

  SaleLinkModel.fromJson(Map<String, dynamic> json) {
    knowledge = json["knowledge"];
    document = json["document"];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data["knowledge"] = knowledge;
    data["document"] = document;
    return data;
  }
}

class SuppotGroupModel {
  String? zaloSupport;
  String? zaloChannel;
  String? facebookChannel;
  String? email;

  SuppotGroupModel({
    this.zaloSupport,
    this.zaloChannel,
    this.facebookChannel,
    this.email,
  });

  SuppotGroupModel.fromJson(Map<String, dynamic> json) {
    zaloSupport = json["zalo_support"];
    zaloChannel = json["zalo_channel"];
    facebookChannel = json["facebook_channel"];
    email = json["email"];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data["zalo_support"] = zaloSupport;
    data["zalo_channel"] = zaloChannel;
    data["facebook_channel"] = facebookChannel;
    data["email"] = email;
    return data;
  }
}
