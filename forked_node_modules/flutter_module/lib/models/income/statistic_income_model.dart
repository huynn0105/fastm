import 'package:flutter_module/common/utils/text_util.dart';

class StatisticIncomeModel {
  double? total;
  double? availableBalance;
  double? availableBalancePercent;
  double? taxHolding;
  double? taxHoldingPercent;
  double? withdraw;
  double? withdrawPercent;
  double? payment;
  double? paymentPercent;
  double? collection;
  double? collectionPercent;

  StatisticIncomeModel({
    this.total,
    this.availableBalance,
    this.availableBalancePercent,
    this.taxHolding,
    this.taxHoldingPercent,
    this.withdraw,
    this.withdrawPercent,
    this.payment,
    this.paymentPercent,
    this.collection,
    this.collectionPercent,
  });

  StatisticIncomeModel.fromJson(Map<String, dynamic> json) {
    total = TextUtils.parseDouble(json["total"]);
    availableBalance = TextUtils.parseDouble(json["available_balance"]);
    availableBalancePercent = TextUtils.parseDouble(json["available_balance_percent"]);
    taxHolding = TextUtils.parseDouble(json["tax_holding"]);
    taxHoldingPercent = TextUtils.parseDouble(json["tax_holding_percent"]);
    withdraw = TextUtils.parseDouble(json["withdraw"]);
    withdrawPercent = TextUtils.parseDouble(json["withdraw_percent"]);
    payment = TextUtils.parseDouble(json["payment"]);
    paymentPercent = TextUtils.parseDouble(json["payment_percent"]);
    collection = TextUtils.parseDouble(json["collection"]);
    collectionPercent = TextUtils.parseDouble(json["collection_percent"]);
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data["total"] = total;
    data["available_balance"] = availableBalance;
    data["available_balance_percent"] = availableBalancePercent;
    data["tax_holding"] = taxHolding;
    data["tax_holding_percent"] = taxHoldingPercent;
    data["withdraw"] = withdraw;
    data["withdraw_percent"] = withdrawPercent;
    data["payment"] = payment;
    data["payment_percent"] = paymentPercent;
    data["collection"] = collection;
    data["collection_percent"] = collectionPercent;
    return data;
  }

  double getTotal() {
    return total ?? 0;
    // double sum(double a, double b) => a + b;
    // return [
    //   availableBalance ?? 0.0,
    //   taxHolding ?? 0.0,
    //   withdraw ?? 0.0,
    //   payment ?? 0.0,
    //   collection ?? 0.0,
    // ].reduce(sum);
  }
}
