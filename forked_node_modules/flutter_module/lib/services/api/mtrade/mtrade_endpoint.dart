import 'package:flutter_module/services/api/mtrade/payload/mtrade_bonus_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_category_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_check_promotion_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_collaborator_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_consent_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_event_personal_website_statistic_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_gen_mpl_token_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_gen_product_token_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_get_pay_later_info_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_mpl_location_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_my_review_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_order_detail_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_order_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_order_payment_method_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_pay_now_order_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_request_otp_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_review_user_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_personal_link_setup_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_personal_website_setup_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_personal_website_statistic_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_promotion_product_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_search_order_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_search_promotion_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_send_brochure_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_suggested_product_payload.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_verify_otp_payload.dart';
import 'package:flutter_module/services/base/base_endpoint.dart';

import '../../base/method_request.dart';
import 'payload/check_product_stock_payload.dart';
import 'payload/get_payment_method_url_payload.dart';
import 'payload/mtrade_brochure_product_payload.dart';
import 'payload/mtrade_cart_payload.dart';
import 'payload/mtrade_check_product_support_location_payload.dart';
import 'payload/mtrade_order_price_by_sku_payload.dart';
import 'payload/mtrade_personal_website_payload.dart';
import 'payload/mtrade_pre_screen_payload.dart';
import 'payload/mtrade_product_detail_payload.dart';
import 'payload/mtrade_product_payload.dart';
import 'payload/mtrade_request_paylater_confirm_payload.dart';
import 'payload/mtrade_request_paylater_otp_payload.dart';
import 'payload/mtrade_sku_payload.dart';
import 'payload/mtrade_tracking_agent_payload.dart';

abstract class MTradeEndpointProtocol {
  EndpointType getListProductGroup({required MTradeCategoryPayload payload});

  EndpointType getListSpecialCategory();

  EndpointType getListBanner();

  EndpointType getListFilter();

  EndpointType getDeliverySupports();

  EndpointType getFilterProducts({
    required MTradeProductPayload payload,
  });

  EndpointType getProductDetail({
    required MTradeProductDetailPayload payload,
  });

  EndpointType getFilterSuggestion({
    required String productName,
  });

  EndpointType getListCart({
    required int page,
  });

  EndpointType createCartItem({
    required MTradeCartPayload payload,
  });

  EndpointType deleteCartItem({
    required MTradeCartPayload payload,
  });

  EndpointType getDeliveryLocation({
    required String type,
    required String code,
  });

  EndpointType getFastDeliveryLocation({
    required List<String>? productGroup,
  });

  EndpointType getSkuDetailByOption({
    required MTradeSkuPayload payload,
  });

  EndpointType getOrderPriceBySKU({
    required MTradeOrderPriceBySkuPayload payload,
  });

  EndpointType submitPayNowOrder({
    required MTradePayNowOrderPayload payload,
  });

  EndpointType getMTradeBonus({
    required MTradeBonusPayload payload,
  });

  EndpointType getIndirectBonus({
    required MTradeBonusPayload payload,
  });

  EndpointType getDetailCollaborator({
    required MTradeCollaboratorPayload payload,
  });

  EndpointType getListOrderProcessState({
    required MTradeOrderPayload payload,
  });

  EndpointType getBrochureProduct({
    required MTradeBrochureProductPayload payload,
  });

  EndpointType checkProjectCode();

  EndpointType getConfigs();

  EndpointType checkProductLocationSupport({
    required MtradeCheckProductSupportLocationPayload payload,
  });

  FileEndpointType sendBrochure({
    required MTradeSendBrochurePayload payload,
  });

  EndpointType getListOrderPaymentMethod({
    required MTradeOrderPaymentMethodPayload payload,
  });

  EndpointType getOrderDetail({
    required MTradeOrderDetailPayload payload,
  });

  EndpointType getPreScreenData({
    required MTradePreScreenDataPayload payload,
  });

  EndpointType genProductToken({
    required MTradeGenProductTokenPayload payload,
  });

  EndpointType genMplToken({
    required MTradeGenMplTokenPayload payload,
  });

  EndpointType getMplLocation({
    required MTradeMplLocationPayload payload,
  });

  EndpointType getSuggestedProducts({
    required MTradeSuggestedProductPayload payload,
  });

  EndpointType searchOrder({
    required MTradeSearchOrderPayload payload,
  });

  EndpointType getTools();

  EndpointType getPersonalWebsiteSetup({
    required MTradePersonalWebsiteDataPayload payload,
  });

  EndpointType savePersonalWebsiteSetup({
    required MTradePersonalWebsiteSetupPayload payload,
  });

  EndpointType getLandingPageContactMethods();

  EndpointType requestPayLaterOtp({
    required MTradeRequestPayLaterOtpPayload payload,
  });

  EndpointType requestPayLaterConfirm({
    required MTradeRequestPayLaterConfirmPayload payload,
  });

  EndpointType checkProductStock({
    required CheckProductStockPayload payload,
  });

  EndpointType trackingAgent({
    required MTradeTrackingAgentPayload payload,
  });

  EndpointType getListMyReview({
    required MTradeMyReviewPayload payload,
  });

  EndpointType getFilterMyReview();

  EndpointType getPersonalLinkSetup();

  EndpointType updatePersonalLinkSetup({
    required MTradePersonalLinkSetupPayload payload,
  });

  EndpointType getListSelectUserReview({
    required String appID,
  });

  EndpointType getStatusReview();

  EndpointType reviewUser({
    required MTradeReviewUserPayload payload,
  });

  EndpointType getDataLinkBrochure({
    required String ID,
  });

  EndpointType sendDataLinkBrochureToEmail({
    required String ID,
    required String email,
  });

  EndpointType getPromotionProduct({
    required MTradePromotionProductPayload payload,
  });

  EndpointType searchPromotion({
    required MTradeSearchPromotionPayload payload,
  });

  EndpointType checkPromotion({
    required MTradeCheckPromotionPayload payload,
  });

  EndpointType getPayLaterInfo({
    required MTradeGetPayLaterInfoPayload payload,
  });

  EndpointType sendEventPersonalWebsiteStatistic({
    required MTradeEventPersonalWebsiteStatisticPayload payload,
  });

  EndpointType getPersonalWebsiteStatistic({
    required MTradePersonalWebsiteStatisticPayload payload,
  });

  EndpointType requestPayLaterDAAMTrade({
    required MTradeRequestPayLaterConfirmPayload payload,
  });

  EndpointType requestOTP({
    required MTradeRequestOTPPayload payload,
  });

  EndpointType verifyOTP({
    required MTradeVerifyOTPPayload payload,
  });

  EndpointType saveConsent({
    required MTradeConsentPayload payload,
  });

  EndpointType requestEmailOTP({
    required String email,
  });

  EndpointType verifyEmailOTP({
    required String email,
    required String otpCode,
  });

  EndpointType getOrderFilters();

  EndpointType getPaymentMethodUrl(GetPaymentMethodUrlPayload payload);

  EndpointType getDeliveryTimeFrame();

  EndpointType getCampaignEvent();
}

class MTradeEndpoint implements MTradeEndpointProtocol {
  @override
  EndpointType getListProductGroup({required MTradeCategoryPayload payload}) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/list_product_group",
      httpMethod: HttpMethod.get,
      parameters: {
        ...payload.toJson(),
        "apiVersion": "v3",
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getListSpecialCategory() {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/list_special_category",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getListBanner() {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/list_banner",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getListFilter() {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/list_filter",
      httpMethod: HttpMethod.get,
      parameters: {
        // "apiVersion": "v2",
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getDeliverySupports() {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/delivery",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getFilterProducts({
    required MTradeProductPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/product_filter",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getProductDetail({
    required MTradeProductDetailPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/product_detail",
      httpMethod: HttpMethod.post,
      parameters: {
        ...payload.toJson(),
        "apiVersion": "v2",
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getFilterSuggestion({
    required String productName,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/filter_suggestion",
      httpMethod: HttpMethod.post,
      parameters: {
        "productName": productName,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getListCart({
    required int page,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/get_cart_product",
      httpMethod: HttpMethod.get,
      parameters: {
        'page': page,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType createCartItem({
    required MTradeCartPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/add_carts",
      httpMethod: HttpMethod.post,
      parameters: {
        ...payload.toJson(),
        "apiVersion": "v2",
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType deleteCartItem({
    required MTradeCartPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/remove_cart_item",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getDeliveryLocation({
    required String type,
    required String code,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/load_resource_location",
      httpMethod: HttpMethod.get,
      parameters: {
        'type': type,
        'code': code,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getFastDeliveryLocation({
    required List<String>? productGroup,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/fast_delivery_support_zone",
      httpMethod: HttpMethod.post,
      parameters: {
        'productGroup': productGroup,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getSkuDetailByOption({
    required MTradeSkuPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/get_detail_by_product_attribute",
      httpMethod: HttpMethod.post,
      parameters: {
        ...payload.toJson(),
        "apiVersion": "v2",
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getOrderPriceBySKU({
    required MTradeOrderPriceBySkuPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/order_price_check_by_sku",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType submitPayNowOrder({
    required MTradePayNowOrderPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/create_order",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getMTradeBonus({
    required MTradeBonusPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/get_mtrade_bonus",
      httpMethod: HttpMethod.get,
      parameters: payload.toMTradeDirectBonusJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getIndirectBonus({
    required MTradeBonusPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/get_indirect_bonus",
      httpMethod: HttpMethod.get,
      parameters: payload.toMTradeIndirectBonusJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getDetailCollaborator({
    required MTradeCollaboratorPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/get_list_bonus_by_collaborator",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getListOrderProcessState({
    required MTradeOrderPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/get_order_detail",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getBrochureProduct({
    required MTradeBrochureProductPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/get_data_brochure",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType checkProjectCode() {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/check_project_code",
      httpMethod: HttpMethod.get,
      parameters: {
        "apiVersion": "v2",
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getConfigs() {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/get_configs",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType checkProductLocationSupport({
    required MtradeCheckProductSupportLocationPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/check_product_location_support",
      httpMethod: HttpMethod.post,
      parameters: {
        ...payload.toJson(),
        "apiVersion": "v2",
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  FileEndpointType sendBrochure({
    required MTradeSendBrochurePayload payload,
  }) {
    final endpoint = FileEndpointType(
      path: "/app_api_v1/mtrade/send_brochure",
      file: payload.file!,
    );
    return endpoint;
  }

  @override
  EndpointType getListOrderPaymentMethod({
    required MTradeOrderPaymentMethodPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/get_order_filter_payment_method",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getOrderDetail({
    required MTradeOrderDetailPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/order_detail",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getPreScreenData({
    required MTradePreScreenDataPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/pre_screen_data",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType genProductToken({
    required MTradeGenProductTokenPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/gen_product_token",
      httpMethod: HttpMethod.post,
      parameters: {
        ...payload.toJson(),
        "apiVersion": "v2",
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType genMplToken({
    required MTradeGenMplTokenPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/gen_mpl_token",
      httpMethod: HttpMethod.post,
      parameters: {
        ...payload.toJson(),
        "apiVersion": "v2",
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getMplLocation({
    required MTradeMplLocationPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/get_mpl_location",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getSuggestedProducts({
    required MTradeSuggestedProductPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/list_product_suggest",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType searchOrder({
    required MTradeSearchOrderPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/get_order_history",
      httpMethod: HttpMethod.get,
      parameters: {
        ...payload.toJson(),
        "apiVersion": "v2",
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getTools() {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/landing_page_tools",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getPersonalWebsiteSetup({
    required MTradePersonalWebsiteDataPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/landing_page_website_setup",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType savePersonalWebsiteSetup({
    required MTradePersonalWebsiteSetupPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/landing_page_website_setup",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getLandingPageContactMethods() {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/landing_page_method_contact",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType requestPayLaterOtp({
    required MTradeRequestPayLaterOtpPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/sent_otp",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType requestPayLaterConfirm({
    required MTradeRequestPayLaterConfirmPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/verify_otp",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType checkProductStock({
    required CheckProductStockPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/check_product_stock",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType trackingAgent({
    required MTradeTrackingAgentPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/tracking/tracking_agent",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getListMyReview({
    required MTradeMyReviewPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/Predsa_lending/get_feedback",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getFilterMyReview() {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/Predsa_lending/get_feedback_filter",
      httpMethod: HttpMethod.post,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getPersonalLinkSetup() {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/Predsa_lending/get_link",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType updatePersonalLinkSetup({
    required MTradePersonalLinkSetupPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/Predsa_lending/update_link",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getListSelectUserReview({
    required String appID,
  }) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/Predsa_lending/get_feedback_target_users",
      httpMethod: HttpMethod.post,
      parameters: {"appID": appID},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getStatusReview() {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/Predsa_lending/get_feedback_status",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType reviewUser({required MTradeReviewUserPayload payload}) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/Predsa_lending/feedback_action",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getDataLinkBrochure({required String ID}) {
    final endpoint = EndpointType(
      path: "/app_api_v1/potential_customer/load_poster",
      httpMethod: HttpMethod.get,
      parameters: {"ID": ID},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType sendDataLinkBrochureToEmail({required String ID, required String email}) {
    final endpoint = EndpointType(
      path: "/app_api_v1/potential_customer/send_email_link",
      httpMethod: HttpMethod.post,
      parameters: {
        "ID": ID,
        "mail": email,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getPromotionProduct({
    required MTradePromotionProductPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade_promotion/promotion_by_skus",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType searchPromotion({
    required MTradeSearchPromotionPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade_promotion/promotion_by_code",
      httpMethod: HttpMethod.post,
      parameters: {
        ...payload.toJson(),
        // "version": "2",
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType checkPromotion({
    required MTradeCheckPromotionPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade_promotion/check_promotion_by_promotion_code",
      httpMethod: HttpMethod.post,
      parameters: {
        ...payload.toJson(),
        "version": "2",
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getPayLaterInfo({
    required MTradeGetPayLaterInfoPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/calc_emi_detail_product",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType sendEventPersonalWebsiteStatistic({
    required MTradeEventPersonalWebsiteStatisticPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/update_views",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getPersonalWebsiteStatistic({
    required MTradePersonalWebsiteStatisticPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/statistics_view",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType requestPayLaterDAAMTrade({
    required MTradeRequestPayLaterConfirmPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/create_mpl_daa_mtrade",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType requestOTP({
    required MTradeRequestOTPPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/General/sent_otp",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType verifyOTP({
    required MTradeVerifyOTPPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/General/verify_otp",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType saveConsent({required MTradeConsentPayload payload}) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/personal/save_consent_log",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType requestEmailOTP({required String email}) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/Personal/sent_otp_email",
      httpMethod: HttpMethod.post,
      parameters: {
        "email": email,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType verifyEmailOTP({required String email, required String otpCode}) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/Personal/verify_otp_email",
      httpMethod: HttpMethod.post,
      parameters: {
        "email": email,
        "otpCode": otpCode,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getOrderFilters() {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/order_list_filters",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getPaymentMethodUrl(GetPaymentMethodUrlPayload payload) {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/view_payment_method",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getDeliveryTimeFrame() {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/time_frame",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getCampaignEvent() {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/get_event_by_type_code",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }
}
