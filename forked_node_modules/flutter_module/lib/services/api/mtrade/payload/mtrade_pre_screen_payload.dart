import 'package:flutter_module/common/utils/text_util.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_cart_payload.dart';

/// type : "mtrade"
/// orders : [{"sku":"A95.1","quantity":2}]

class MTradePreScreenDataPayload {
  MTradePreScreenDataPayload({
    this.type,
    this.orders,
    this.accessToken,
    this.orderID,
    this.transactionID,
    this.provinceCode,
    this.districtCode,
    this.wardCode,
    this.newPrice,
  });

  MTradePreScreenDataPayload.fromJson(dynamic json) {
    type = json['type'];
    if (json['orders'] != null) {
      orders = [];
      json['orders'].forEach((v) {
        orders?.add(MTradeCartPayload.fromJson(v));
      });
    }
    accessToken = json['accessToken'];
    orderID = json['orderID'];
    transactionID = json['transactionID'];
    provinceCode = json['provinceCode'];
    districtCode = json['districtCode'];
    wardCode = json['wardCode'];
    wardCode = json['new_price'];
  }

  String? type;
  List<MTradeCartPayload>? orders;
  String? accessToken;
  String? orderID;
  String? transactionID;
  String? provinceCode;
  String? districtCode;
  String? wardCode;
  double? newPrice;

  MTradePreScreenDataPayload copyWith({
    String? type,
    List<MTradeCartPayload>? orders,
    String? orderID,
    String? transactionID,
    String? provinceCode,
    String? districtCode,
    String? wardCode,
    double? newPrice,
  }) {
    return MTradePreScreenDataPayload(
      type: type ?? this.type,
      orders: orders ?? this.orders,
      orderID: orderID ?? this.orderID,
      transactionID: transactionID ?? this.transactionID,
      provinceCode: provinceCode ?? this.provinceCode,
      districtCode: districtCode ?? this.districtCode,
      wardCode: wardCode ?? this.wardCode,
      newPrice: newPrice ?? this.newPrice,
    );
  }

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['type'] = type;
    if (orders != null) {
      map['orders'] = orders?.map((v) => v.toJsonPreScreen()).toList();
    }
    if (TextUtils.isNotEmpty(accessToken)) {
      map['accessToken'] = accessToken;
    }
    if (TextUtils.isNotEmpty(transactionID)) {
      map['transactionID'] = transactionID;
    }
    if (TextUtils.isNotEmpty(orderID)) {
      map['orderID'] = orderID;
    }
    map['provinceCode'] = provinceCode;
    map['districtCode'] = districtCode;
    map['wardCode'] = wardCode;
    map['new_price'] = newPrice;
    return map;
  }
}
