import '../../../../common/utils/text_util.dart';
import '../../../../models/mtrade/cart/mtrade_cart_product_model.dart';

/// productID : 630
/// productName : "Xiaomi Redmi Note 11 Pro 5G - Đen,128GB"
/// sku : "2VINHKHANG003IIPH020200"
/// productPrice : 8000000
/// productCategoryName : "Điện thoại"
/// productMerchantCode : "VINHKHANG"
/// productMerchantName : "VINHKHANG"
/// productMerchantLogo : "https://los-prod.s3-sgn09.fptcloud.com/mfast/image/67e3d61f-9502-4534-a317-35914a365db9.png"
/// loanTerms : 8
/// loanPurpose : "Mua hàng trả chậm"
/// prepayPercent : 10
/// interestRate : 0
/// insurance : 5
/// partnerProductID : 0
/// productImage : "https://los-dev.s3-sgn09.fptcloud.com/mfast/image/49e144bc-eacc-45d3-b778-1365bfa4f7e9.jpg"
/// schemeID : 130
/// quantity : 1
/// schemeName : "Goi vay nhan vien"

class MTradeGenProductTokenPayload {
  MTradeGenProductTokenPayload({
    required this.productInfo,
    required this.loanTerms,
    required this.loanTermsConversionFee,
    required this.loanPurpose,
    required this.prepayPercent,
    required this.interestRate,
    required this.requireInsurance,
    required this.insurance,
    required this.schemeID,
    required this.schemeName,
    this.accessToken,
    this.orders,
    this.extraData,
    this.type,
    this.source,
    this.provinceCode,
    this.districtCode,
    this.wardCode,
    this.channelCode,
  });

  List<MTradeCartProductModel>? productInfo;

  double? productPrice;
  int? loanTerms;
  double? loanTermsConversionFee;
  String? loanPurpose;
  double? prepayPercent;
  double? interestRate;
  int? requireInsurance;
  double? insurance; // insurance percent
  int? schemeID;
  String? schemeName;
  String? accessToken;
  List<MTradeCartProductModel>? orders;
  ExtraData? extraData;
  String? type;
  String? source;
  String? provinceCode;
  String? districtCode;
  String? wardCode;
  String? channelCode;

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    if (productInfo != null) {
      map['productInfo'] = productInfo!.map((v) => v.toJsonGenProductSchemePayload()).toList();
    }
    map['loanTerms'] = loanTerms;
    map['loanTermsConversionFee'] = loanTermsConversionFee;
    map['loanPurpose'] = loanPurpose;
    map['prepayPercent'] = prepayPercent;
    map['interestRate'] = interestRate;
    map['requireInsurance'] = requireInsurance;
    map['insurance'] = insurance;
    map['schemeID'] = schemeID;
    map['schemeName'] = schemeName;
    if (orders != null) {
      map['orders'] = orders!.map((v) => v.toJsonInsurancePayload()).toList();
    }
    if (TextUtils.isNotEmpty(accessToken)) {
      map['accessToken'] = accessToken;
    }
    if (extraData != null) {
      map['extraData'] = extraData?.toJson();
    }
    map['type'] = type;
    map['source'] = source;
    map['provinceCode'] = provinceCode;
    map['districtCode'] = districtCode;
    map['wardCode'] = wardCode;
    map['channelCode'] = channelCode;
    return map;
  }
}

class ExtraData {
  ExtraData({
    this.owner,
    this.frontLicenseImg,
    this.backLicenseImg,
  });

  ExtraData.fromJson(dynamic json) {
    owner = json['owner'];
    frontLicenseImg = json['frontLicenseImg'];
    backLicenseImg = json['backLicenseImg'];
  }

  String? owner;
  String? frontLicenseImg;
  String? backLicenseImg;

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['owner'] = owner;
    map['frontLicenseImg'] = frontLicenseImg;
    map['backLicenseImg'] = backLicenseImg;
    return map;
  }
}
