import 'package:flutter_module/services/firebase/firebase_database/firebase_database_util.dart';

abstract class UpdateMessagePayload {
  UpdateMessagePayload({
    required this.threadID,
    required this.messageID,
    this.forceUpdateTime = false,
  });

  String? threadID;
  String? messageID;
  bool forceUpdateTime;

  Map<String, dynamic> toJson();
}

class UpdateMediaMessagePayload extends UpdateMessagePayload {
  UpdateMediaMessagePayload({
    super.threadID,
    super.messageID,
    this.mediaID,
    this.mediaURL,
    this.mediaThumbnailURL,
  });

  String? mediaID;
  String? mediaURL;
  String? mediaThumbnailURL;

  @override
  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['imageURLs/$mediaID/url'] = mediaURL;
    if (mediaThumbnailURL != null) {
      map['imageURLs/$mediaID/thumbnail/url'] = mediaThumbnailURL;
    }
    return map;
  }
}

class UpdateReactionMessagePayload extends UpdateMessagePayload {
  UpdateReactionMessagePayload({
    required super.threadID,
    required super.messageID,
    required this.reaction,
    required this.authorID,
  });

  String? reaction;
  String? authorID;

  @override
  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    final userID = FirebaseDatabaseUtil.getFirebaseUserID(userID: authorID);
    map['reaction/$userID'] = reaction;
    return map;
  }
}

class UpdateRecalledMessagePayload extends UpdateMessagePayload {
  UpdateRecalledMessagePayload({
    required super.threadID,
    required super.messageID,
  });

  @override
  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['isRecalled'] = true;
    return map;
  }
}

class UpdateEditMessagePayload extends UpdateMessagePayload {
  UpdateEditMessagePayload({
    required super.threadID,
    required super.messageID,
    required this.text,
    super.forceUpdateTime = true,
  });

  String? text;

  @override
  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['text'] = text;
    map['isEdited'] = true;
    return map;
  }
}

class UpdateDeletedMessagePayload extends UpdateMessagePayload {
  UpdateDeletedMessagePayload({
    required super.threadID,
    required super.messageID,
    required this.authorID,
  });

  String? authorID;

  @override
  Map<String, dynamic> toJson() {
    final userID = FirebaseDatabaseUtil.getFirebaseUserID(userID: authorID);
    final map = <String, dynamic>{};
    map['isDeletedBy/$userID'] = true;
    return map;
  }
}
