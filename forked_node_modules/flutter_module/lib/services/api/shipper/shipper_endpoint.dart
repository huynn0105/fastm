import 'dart:io';

import 'package:flutter_module/common/constants.dart';
import 'package:flutter_module/services/api/shipper/payload/warning_payment_payload.dart';

import '../../base/base_endpoint.dart';
import '../../base/method_request.dart';
import 'payload/shipper_detail_order_payload.dart';
import 'payload/update_document_payload.dart';
import 'payload/update_shipper_order_status_payload.dart';

abstract class ShipperEndpointProtocol {
  EndpointType getListBillLading({
    required String step,
    required int skip,
    String keySearch = "",
  });

  FileEndpointType uploadImageFromFile(File file);

  EndpointType getDetailDelivery(DeliveryPayload payload);

  EndpointType updateDeliveryStatus(UpdateDeliveryStatusPayload payload);

  EndpointType updateDocument(UpdateDocumentPayload payload);

  EndpointType getPaymentMethods();

  EndpointType getPaymentStatus(String paymentTransactionId);

  EndpointType extendLinkPayment(String orderCode);
  EndpointType warningPayment(WarningPaymentPayload payload);
}

class ShipperEndpoint implements ShipperEndpointProtocol {
  @override
  EndpointType getListBillLading({
    required String step,
    required int skip,
    String keySearch = "",
  }) {
    final param = {
      "step": step,
      "skip": skip,
      "limit": AppConstants.maxPerPage,
      if (keySearch.isNotEmpty) "keySearch": keySearch,
    };
    final endpoint = EndpointType(
      path: "/app_api_v1/shipper/list_orders",
      httpMethod: HttpMethod.get,
      parameters: param,
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  FileEndpointType uploadImageFromFile(File file) {
    final endpoint = FileEndpointType(
      path: "storage/uploadFile",
      file: file,
    );
    return endpoint;
  }

  @override
  EndpointType getDetailDelivery(DeliveryPayload payload) {
    final endpoint = EndpointType(
      path: "/app_api_v1/shipper/order_detail",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType updateDeliveryStatus(UpdateDeliveryStatusPayload payload) {
    final endpoint = EndpointType(
      path: "/app_api_v1/shipper/update_delivery_status",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType updateDocument(UpdateDocumentPayload payload) {
    final endpoint = EndpointType(
      path: "/app_api_v1/shipper/update_document_delivery",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getPaymentMethods() {
    final endpoint = EndpointType(
      path: "/app_api_v1/mtrade/list_payment_method",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getPaymentStatus(String paymentTransactionId) {
    final endpoint = EndpointType(
      path: "/app_api_v1/shipper/get_payment_status",
      httpMethod: HttpMethod.get,
      parameters: {
        'payment_transaction_id': paymentTransactionId,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType extendLinkPayment(String orderCode) {
    final endpoint = EndpointType(
      path: "/app_api_v1/shipper/extend_link_payment",
      httpMethod: HttpMethod.get,
      parameters: {
        'orderCode': orderCode,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType warningPayment(WarningPaymentPayload payload) {
    final endpoint = EndpointType(
      path: "/app_api_v1/shipper/warning_payment_POD",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }
}
