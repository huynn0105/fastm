class UpdateDocumentPayload {
  UpdateDocumentPayload({
    required this.orderCode,
    required this.document,
  });

  UpdateDocumentPayload.fromJson(dynamic json) {
    orderCode = json['orderCode'];
    if (json['document'] != null) {
      document = [];
      json['document'].forEach((v) {
        document?.add(Document.fromJson(v));
      });
    }
  }

  String? orderCode;
  List<Document?>? document;

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    map['orderCode'] = orderCode;
    if (document != null) {
      map['document'] = document?.map((v) => v?.toJson()).toList();
    }
    return map;
  }
}

class Document {
  Document({
    required this.action,
    this.id,
    required this.latitude,
    required this.longitude,
    required this.typeCode,
    required this.url,
  });

  Document.fromJson(dynamic json) {
    latitude = json['latitude'];
    longitude = json['longitude'];
    typeCode = json['type_code'];
    url = json['url'];
  }

  String? action;
  String? id;
  String? latitude;
  String? longitude;
  String? typeCode;
  String? url;

  Map<String, dynamic> toJson() {
    final map = <String, dynamic>{};
    if (action != null) map['action'] = action;
    if (id != null) map['id'] = id;
    if (latitude != null) map['latitude'] = latitude;
    if (longitude != null) map['longitude'] = longitude;
    if (typeCode != null) map['type_code'] = typeCode;
    if (url != null) map['url'] = url;
    return map;
  }
}
