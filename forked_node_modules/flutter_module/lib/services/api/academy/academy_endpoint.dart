import 'payload/academy_event_detail_payload.dart';
import '../../base/base_endpoint.dart';
import '../../base/method_request.dart';
import 'payload/academy_register_event_payload.dart';
import 'payload/academy_submit_quiz_payload.dart';
import 'payload/request_otp_payload.dart';
import 'package:flutter_module/services/api/academy/payload/registered_event_payload.dart';

import 'payload/event_payload.dart';
import 'payload/filter_event_payload.dart';

abstract class AcademyEndpointProtocol {
  EndpointType getListRegisteredEvent(
    RegisteredEventPayload payload,
  );

  EndpointType getListFilterEvent(
    AcademyFilterEventPayload payload,
  );

  EndpointType getListEvent(AcademyEventPayload payload);

  EndpointType requestOTP({
    required AcademyRequestOTPPayload payload,
  });

  EndpointType getEventDetail({
    required AcademyEventDetailPayload payload,
  });

  EndpointType registerEvent({
    required AcademyRegisterEventPayload payload,
  });

  EndpointType checkInEvent({
    required AcademyRegisterEventPayload payload,
  });

  EndpointType checkOutEvent({
    required AcademyRegisterEventPayload payload,
  });

  EndpointType submitQuiz({
    required AcademySubmitQuizPayload payload,
  });

  EndpointType getCountRegisteredEvent();
}

class AcademyEndpoint implements AcademyEndpointProtocol {
  @override
  EndpointType getListRegisteredEvent(RegisteredEventPayload payload) {
    final endpoint = EndpointType(
      path: "/app_api_v1/academy/register_event",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getListFilterEvent(AcademyFilterEventPayload payload) {
    final endpoint = EndpointType(
      path: "/app_api_v1/academy/list_filter",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getListEvent(AcademyEventPayload payload) {
    final endpoint = EndpointType(
      path: "/app_api_v1/academy/event_filter",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType requestOTP({
    required AcademyRequestOTPPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/authorization/otp",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getEventDetail({
    required AcademyEventDetailPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/academy/event_detail",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType registerEvent({
    required AcademyRegisterEventPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/academy/register",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType checkInEvent({
    required AcademyRegisterEventPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/academy/checkin",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType checkOutEvent({
    required AcademyRegisterEventPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/academy/checkout_list_question",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType submitQuiz({required AcademySubmitQuizPayload payload}) {
    final endpoint = EndpointType(
      path: "/app_api_v1/academy/checkout_submit_answer",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getCountRegisteredEvent() {
    final endpoint = EndpointType(
      path: "/app_api_v1/academy/register_event_filter",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }
}
