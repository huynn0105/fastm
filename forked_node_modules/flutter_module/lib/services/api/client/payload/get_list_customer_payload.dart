import 'package:flutter_module/common/enum/client/client_tab_type.dart';
import 'package:flutter_module/common/extension/map_extension.dart';
import 'package:flutter_module/common/utils/text_util.dart';

class GetListClientPayload {
  GetListClientPayload({
    this.page = 1,
    this.perPage = 20,
    this.keySearch,
    this.filters,
  });

  int? page;
  int? perPage;
  String? keySearch;
  Map<String, dynamic>? filters;

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = <String, dynamic>{};
    data['page'] = page;
    data['per_page'] = perPage;
    if (TextUtils.isNotEmpty(keySearch)) {
      data['keySearch'] = keySearch;
    }
    if (filters?.isNotEmpty == true) {
      final converter = {...?filters}.map((key, value) {
        final result = value is List ? value.toString() : value;
        return MapEntry(key, result);
      })
        ..removeWhere((key, value) => key == 'group' && value == ClientTabType.all.name)
        ..removeFalsyValue();
      data.addAll(converter);
    }
    return data;
  }

  GetListClientPayload copyWith({
    int? page,
    int? perPage,
    String? keySearch,
    Map<String, dynamic>? filters,
  }) {
    return GetListClientPayload(
      page: page ?? this.page,
      perPage: perPage ?? this.perPage,
      keySearch: keySearch ?? this.keySearch,
      filters: filters ?? this.filters,
    );
  }
}
