import 'package:flutter_module/app_data.dart';
import 'package:flutter_module/services/api/authentication/payload/delete_account_payload.dart';
import 'package:flutter_module/services/api/user/payload/check_duplicate_email_payload.dart';
import 'package:flutter_module/services/api/user/payload/check_duplicate_nick_name_payload.dart';
import 'package:flutter_module/services/api/user/payload/create_pass_code_payload.dart';
import 'package:flutter_module/services/api/user/payload/get_login_history_payload.dart';
import 'package:flutter_module/services/api/user/payload/request_email_otp_payload.dart';
import 'package:flutter_module/services/api/user/payload/update_user_meta_data_payload.dart';
import 'package:flutter_module/services/api/user/payload/update_user_payload.dart';
import 'package:flutter_module/services/api/user/payload/verify_email_otp_payload.dart';

import '../../base/base_endpoint.dart';
import '../../base/method_request.dart';

abstract class UserEndpointProtocol {
  EndpointType getUser();

  EndpointType getUserMetaData();

  EndpointType checkDuplicateNickName(CheckDuplicateNickNamePayload payload);

  EndpointType checkDuplicateEmail(CheckDuplicateEmailPayload payload);

  EndpointType updateUserMetaData(UpdateUserMetaDataPayload payload);

  EndpointType requestEmailOTP(RequestEmailOTPPayload payload);

  EndpointType verifyEmailOTP(VerifyEmailOTPPayload payload);

  EndpointType getLoginHistory(GetLoginHistoryPayload payload);

  EndpointType getReferralInfo();

  EndpointType updateUser(UpdateUserPayload payload);

  EndpointType createPassCode(CreatePassCodePayload payload);

  EndpointType checkUsePassCode(String mobilePhone);

  EndpointType changeUsePassCode(int status);

  EndpointType getUserDelete();

  EndpointType deleteAccount(DeleteAccountPayload payload);

  EndpointType cancelDeleteAccount();
}

class UserEndpoint implements UserEndpointProtocol {
  @override
  EndpointType getUser() {
    final endpoint = EndpointType(
      path: '/loginToken',
      httpMethod: HttpMethod.get,
      parameters: {
        'accessToken': AppData.instance.accessToken,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getUserMetaData() {
    final endpoint = EndpointType(
      path: '/mfast_api_v1/Personal/meta_data',
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType checkDuplicateNickName(CheckDuplicateNickNamePayload payload) {
    final endpoint = EndpointType(
      path: '/mfast_api_v1/personal/check_duplicate_full_name',
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType checkDuplicateEmail(CheckDuplicateEmailPayload payload) {
    final endpoint = EndpointType(
      path: '/mfast_api_v1/Personal/request_check_email',
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType updateUserMetaData(UpdateUserMetaDataPayload payload) {
    final endpoint = EndpointType(
      path: '/mfast_api_v1/Personal/update_meta_data',
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType requestEmailOTP(RequestEmailOTPPayload payload) {
    final endpoint = EndpointType(
      path: '/mfast_api_v1/Personal/sent_otp_email',
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType verifyEmailOTP(VerifyEmailOTPPayload payload) {
    final endpoint = EndpointType(
      path: '/mfast_api_v1/Personal/verify_otp_email',
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getLoginHistory(GetLoginHistoryPayload payload) {
    final endpoint = EndpointType(
      path: '/app_api_v1/user/login_history',
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getReferralInfo() {
    final endpoint = EndpointType(
      path: '/app_api_v1/mfast/invite_ctv',
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType updateUser(UpdateUserPayload payload) {
    final endpoint = EndpointType(
      path: '/app_api_v1/user/update-profile',
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType createPassCode(CreatePassCodePayload payload) {
    final endpoint = EndpointType(
      path: '/mfast_api_v1/authorization/create_password',
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType checkUsePassCode(String mobilePhone) {
    final endpoint = EndpointType(
      path: '/mfast_api_v1/authorization/is_use_passcode',
      httpMethod: HttpMethod.get,
      parameters: {
        'mobilePhone': mobilePhone,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType changeUsePassCode(int status) {
    final endpoint = EndpointType(
      path: '/mfast_api_v1/personal/change_passcode_verify_status',
      httpMethod: HttpMethod.get,
      parameters: {
        'status': status,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getUserDelete() {
    final endpoint = EndpointType(
      path: '/mfast_api_v1/Personal/request_delete_check',
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType deleteAccount(DeleteAccountPayload payload) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/Personal/account_delete_request",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType cancelDeleteAccount() {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/Personal/account_delete_cancel_request",
      httpMethod: HttpMethod.post,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }
}
