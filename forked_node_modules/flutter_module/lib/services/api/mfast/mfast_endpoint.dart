import 'dart:io';

import 'package:flutter_module/models/mfast/report/report_submit_model.dart';
import 'package:flutter_module/models/mfast/time_checking/time_checking_submit_payload_model.dart';
import 'package:flutter_module/services/api/mfast/payload/mfast_add_bank_account_payload.dart';
import 'package:flutter_module/services/api/mfast/payload/mfast_get_list_province_payload.dart';
import 'package:flutter_module/services/api/mfast/payload/mfast_register_tax_payload.dart';
import 'package:flutter_module/services/api/mfast/payload/time_checking_history_payload.dart';
import 'package:flutter_module/services/api/mfast/payload/time_checking_report_detail_payload.dart';
import 'package:flutter_module/services/api/notification/payload/mfast_notification_payload.dart';
import 'package:flutter_module/services/base/base_endpoint.dart';
import 'package:flutter_module/services/base/method_request.dart';
import 'package:flutter_module/models/mfast/user_meta_data/mfast_user_meta_data_model.dart';

abstract class MFastEndpointProtocol {
  EndpointType getUserMetaData();

  EndpointType updateMobilePhone({required String mobilePhone});

  FileEndpointType uploadImage({required File file});

  EndpointType updateUserMetaData({required MFastUserMetaDataModel payload});

  EndpointType getGeneralBanks();

  EndpointType getGeneralBankBranches();

  EndpointType addBankAccount({
    required MFastAddBankAccountPayload payload,
  });

  EndpointType getDistricts();

  EndpointType getMetaDataBIDV();

  EndpointType checkDuplicateEmail({required String email});

  EndpointType saveLogOCR({Map? data});

  EndpointType getNotifications({
    required MFastNotificationPayload payload,
  });

  EndpointType readNotification({
    required String notiID,
  });

  EndpointType flagNotification({
    required String notiID,
    required bool isFlag,
  });

  EndpointType readAllNotifications({
    required String category,
  });

  EndpointType getNotificationSettings();

  EndpointType updateNotificationSettings({
    required String categoryID,
    required String status,
  });

  EndpointType getUnreadNotification();

  EndpointType getListBankAccount();

  EndpointType setDefaultBankAccount(String ID);

  EndpointType removeBankAccount(String ID);

  EndpointType getListProvince(MFastGetListProvincePayload payload);

  EndpointType registerTax(MFastRegisterTaxPayload payload);

  EndpointType getBIDVBankAccount();

  EndpointType getTimeCheckingHistory(TimeCheckingHistoryPayload date);

  EndpointType timeCheckingSubmit(TimeCheckingSubmitPayload payload);

  EndpointType getReportCategories(String type);

  EndpointType submitDataReport(ReportSubmitModel type);

  EndpointType getReportDetail(TimeCheckingReportDetailPayload payload);

  EndpointType getTimeCheckingConfig();

  EndpointType getStatisticConfig();
}

class MFastEndpoint implements MFastEndpointProtocol {
  @override
  EndpointType getUserMetaData() {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/Personal/meta_data",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType updateMobilePhone({required String mobilePhone}) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/Personal/update_mobile_phone",
      httpMethod: HttpMethod.post,
      parameters: {
        "mobilePhone": mobilePhone,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  FileEndpointType uploadImage({required File file}) {
    final endpoint = FileEndpointType(
      path: "/app_api_v1/ho_admin/gen_path_img",
      file: file,
    );
    return endpoint;
  }

  @override
  EndpointType updateUserMetaData({required MFastUserMetaDataModel payload}) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/Personal/update_meta_data",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getGeneralBanks() {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/general/banks",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getGeneralBankBranches() {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/general/bank_branches",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType addBankAccount({
    required MFastAddBankAccountPayload payload,
  }) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/personal/banking",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getDistricts() {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/general/load_district",
      httpMethod: HttpMethod.get,
      parameters: {
        "apiVersion": "v2",
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getMetaDataBIDV() {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/Personal/meta_data_bidv",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType checkDuplicateEmail({required String email}) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/Personal/request_check_email",
      httpMethod: HttpMethod.post,
      parameters: {
        "email": email,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType saveLogOCR({Map? data}) {
    final endpoint = EndpointType(
      path: "/app_api_v1/ocr/save_log_ocr_blueinfo",
      httpMethod: HttpMethod.post,
      parameters: {
        "response": data,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getNotifications({required MFastNotificationPayload payload}) {
    final endpoint = EndpointType(
      path: "/app_api_v1/notification/getOldNoti",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType flagNotification({required String notiID, required bool isFlag}) {
    final endpoint = EndpointType(
      path: "/app_api_v1/notification/flagNoti",
      httpMethod: HttpMethod.post,
      parameters: {
        "notiID": notiID,
        "isFlag": isFlag,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType readNotification({required String notiID}) {
    final endpoint = EndpointType(
      path: "/app_api_v1/notification/readNoti",
      httpMethod: HttpMethod.post,
      parameters: {
        "notiID": notiID,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType readAllNotifications({required String category}) {
    final endpoint = EndpointType(
      path: "/app_api_v1/notification/readAllNoti",
      httpMethod: HttpMethod.post,
      parameters: {
        "category": category,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getNotificationSettings() {
    final endpoint = EndpointType(
      path: "/app_api_v1/notification/get_categories",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType updateNotificationSettings({
    required String categoryID,
    required String status,
  }) {
    final endpoint = EndpointType(
      path: "/app_api_v1/notification/category_subscribe",
      httpMethod: HttpMethod.post,
      parameters: {
        "categoryID": categoryID,
        "status": status,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getUnreadNotification() {
    final endpoint = EndpointType(
      path: "/app_api_v1/notification/numUnreadNoti",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getListBankAccount() {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/personal/bank_list",
      httpMethod: HttpMethod.get,
      parameters: {
        "apiVersion": 'v2',
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType setDefaultBankAccount(String ID) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/personal/set_default_bank",
      httpMethod: HttpMethod.post,
      parameters: {
        "ID": ID,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType removeBankAccount(String ID) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/personal/delete_bank",
      httpMethod: HttpMethod.post,
      parameters: {
        "ID": ID,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getListProvince(MFastGetListProvincePayload payload) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/General/load_resource",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType registerTax(MFastRegisterTaxPayload payload) {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/personal/tax_register",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getBIDVBankAccount() {
    final endpoint = EndpointType(
      path: "/mfast_api_v1/personal/bidv_bank_data",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getTimeCheckingHistory(TimeCheckingHistoryPayload payload) {
    final endpoint = EndpointType(
      path: "/app_api_v1/checking_time/history_by_month",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType timeCheckingSubmit(TimeCheckingSubmitPayload payload) {
    final endpoint = EndpointType(
      path: "/app_api_v1/checking_time/time_checking_log",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getReportCategories(String type) {
    final endpoint = EndpointType(
      path: "/app_api_v1/sale_report/list_category_report",
      httpMethod: HttpMethod.get,
      parameters: {
        "type": type,
      },
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType submitDataReport(ReportSubmitModel payload) {
    final endpoint = EndpointType(
      path: "/app_api_v1/sale_report/submit_report_data",
      httpMethod: HttpMethod.post,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getReportDetail(TimeCheckingReportDetailPayload payload) {
    final endpoint = EndpointType(
      path: "/app_api_v1/sale_report/get_report_detail",
      httpMethod: HttpMethod.get,
      parameters: payload.toJson(),
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getTimeCheckingConfig() {
    final endpoint = EndpointType(
      path: "/app_api_v1/checking_time/time_checking_config",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }

  @override
  EndpointType getStatisticConfig() {
    final endpoint = EndpointType(
      path: "/app_api_v1/sale_core_report_statistic/report_statistic_config",
      httpMethod: HttpMethod.get,
      parameters: {},
      header: DefaultHeader.instance.addDefaultHeader(),
    );
    return endpoint;
  }
}
