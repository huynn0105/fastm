import 'package:flutter_module/di/get_it.dart';
import 'package:flutter_module/features/chat/hive_database/daos/chat_thread_dao.dart';
import 'package:flutter_module/features/chat/hive_database/entities/chat_thread/chat_thread_entity.dart';
import 'package:flutter_module/models/chat/thread/chat_thread_model.dart';

abstract class ThreadLocalData {
  Future<void> insertOrUpdateChatThread(List<ChatThreadModel> threadChats);
  Future<void> insertOrUpdateThread(ChatThreadModel thread);
  List<ChatThreadModel> getThreadChats();
}

class ThreadLocalDataImpl implements ThreadLocalData {
  @override
  List<ChatThreadModel> getThreadChats() {
    final messagesInDb = getItInstance<ChatThreadDao>().getAll();
    final messages = messagesInDb.map((e) => ChatThreadModel.fromEntity(e)).toList();
    messages.sort((a, b) => b.updateTime!.compareTo(a.updateTime!));
    return messages;
  }

  @override
  Future<void> insertOrUpdateChatThread(List<ChatThreadModel> threadChats) async {
    final entites = threadChats.map((e) => ChatThreadEntity.fromModel(e)).toList();
    await getItInstance<ChatThreadDao>().insertAll(entites);
  }

  @override
  Future<void> insertOrUpdateThread(ChatThreadModel thread) async {
    await getItInstance<ChatThreadDao>().insert(ChatThreadEntity.fromModel(thread));
  }
}
