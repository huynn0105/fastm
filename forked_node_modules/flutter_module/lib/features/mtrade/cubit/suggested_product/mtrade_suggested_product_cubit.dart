import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/features/mtrade/repository/mtrade_product_repository.dart';
import 'package:flutter_module/models/mtrade/product/mtrade_product_model.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_suggested_product_payload.dart';

part 'mtrade_suggested_product_state.dart';

class MTradeSuggestedProductCubit extends Cubit<MTradeSuggestedProductState> {
  MTradeSuggestedProductCubit() : super(const MTradeSuggestedProductState());

  final MTradeProductRepository _repository = MTradeProductRepository();

  fetchData(List<String> productCode) async {
    emit(state.copyWith(
      status: BlocStatus.loading,
    ));

    final result = await _repository.getSuggestedProducts(
      payload: MTradeSuggestedProductPayload(
        productCode: productCode,
      ),
    );

    if (result.status) {
      emit(state.copyWith(
        status: BlocStatus.success,
        products: result.data,
      ));
    } else {
      emit(state.copyWith(
        status: BlocStatus.failure,
        products: result.data,
      ));
    }
  }
}
