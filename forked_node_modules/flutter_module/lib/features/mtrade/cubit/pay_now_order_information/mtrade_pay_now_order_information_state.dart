part of 'mtrade_pay_now_order_information_cubit.dart';

class MTradePayNowOrderInformationState extends Equatable {
  const MTradePayNowOrderInformationState({
    this.status = BlocStatus.initial,
    this.errorFields = const {},
    this.enabled = true,
    this.provinceStatus = BlocStatus.initial,
    this.districtStatus = BlocStatus.initial,
    this.wardStatus = BlocStatus.initial,
    this.provinces = const [],
    this.districts = const [],
    this.wards = const [],
    this.timeFrames = const [],
    this.selectedProvinceCode = "",
    this.selectedDistrictCode = "",
    this.selectedWardCode = "",
    this.selectReceiveTimes = const [],
    this.selectedPaymentMethod,
    this.products = const [],
    this.orderPrices = const [],
    this.promotions = const [],
    this.totalPrice = 0,
    this.totalPromotionPrice = 0,
    this.submitOrderStatus = BlocStatus.initial,
    this.order,
    this.errorMessage,
    this.enabledProvince = false,
    this.enabledDistrict = false,
    this.enabledWard = false,
    this.invalidSku = const [],
    this.invalidSkuMessage,
    this.enableIssueInvoice = false,
    this.acceptedPolicy = false,
    this.invoiceType = InvoiceType.personal,
    this.errorIndexes = const {},
  });

  final BlocStatus status;
  final Map<String, String> errorFields;
  final bool enabled;
  final BlocStatus provinceStatus;
  final BlocStatus districtStatus;
  final BlocStatus wardStatus;
  final List<MasterDataModel> provinces;
  final List<MasterDataModel> districts;
  final List<MasterDataModel> wards;
  final List<TimeFrameModel> timeFrames;
  final bool enabledProvince;
  final bool enabledDistrict;
  final bool enabledWard;
  final String selectedProvinceCode;
  final String selectedDistrictCode;
  final String selectedWardCode;
  final List<TimeFrameModel> selectReceiveTimes;
  final PaymentMethodModel? selectedPaymentMethod;
  final List<MTradeCartProductModel> products;
  final List<OrderPrice> orderPrices;
  final List<DataProductVariationsModel> promotions;
  final double totalPrice;
  final double totalPromotionPrice;
  final BlocStatus submitOrderStatus;
  final MTradePayNowOrderModel? order;
  final String? errorMessage;
  final List<String> invalidSku;
  final String? invalidSkuMessage;
  final bool enableIssueInvoice;
  final bool acceptedPolicy;
  final InvoiceType invoiceType;
  final Map<String, int> errorIndexes;

  @override
  List<Object?> get props => [
        status,
        errorFields,
        enabled,
        provinceStatus,
        districtStatus,
        wardStatus,
        provinces,
        districts,
        wards,
        timeFrames,
        selectedProvinceCode,
        selectedDistrictCode,
        selectedWardCode,
        selectReceiveTimes,
        selectedPaymentMethod,
        products,
        orderPrices,
        promotions,
        totalPrice,
        totalPromotionPrice,
        submitOrderStatus,
        order,
        errorMessage,
        enabledProvince,
        enabledDistrict,
        enabledWard,
        invalidSku,
        invalidSkuMessage,
        enableIssueInvoice,
        acceptedPolicy,
        invoiceType,
        errorIndexes,
      ];

  MTradePayNowOrderInformationState copyWith({
    BlocStatus? status,
    Map<String, String>? errorFields,
    bool? enabled,
    BlocStatus? provinceStatus,
    BlocStatus? districtStatus,
    BlocStatus? wardStatus,
    List<MasterDataModel>? provinces,
    List<MasterDataModel>? districts,
    List<MasterDataModel>? wards,
    List<TimeFrameModel>? timeFrames,
    String? selectedProvinceCode,
    String? selectedDistrictCode,
    String? selectedWardCode,
    List<TimeFrameModel>? selectReceiveTimes,
    PaymentMethodModel? selectedPaymentMethod,
    List<MTradeCartProductModel>? products,
    List<OrderPrice>? orderPrices,
    List<DataProductVariationsModel>? promotions,
    double? totalPrice,
    double? totalPromotionPrice,
    BlocStatus? submitOrderStatus,
    MTradePayNowOrderModel? order,
    String? errorMessage,
    bool? enabledProvince,
    bool? enabledDistrict,
    bool? enabledWard,
    List<String>? invalidSku,
    String? invalidSkuMessage,
    bool? enableIssueInvoice,
    bool? acceptedPolicy,
    InvoiceType? invoiceType,
    Map<String, int>? errorIndexes,
    bool clearPaymentMethod = false,
  }) {
    return MTradePayNowOrderInformationState(
      status: status ?? this.status,
      errorFields: errorFields ?? this.errorFields,
      enabled: enabled ?? this.enabled,
      provinceStatus: provinceStatus ?? this.provinceStatus,
      districtStatus: districtStatus ?? this.districtStatus,
      wardStatus: wardStatus ?? this.wardStatus,
      provinces: provinces ?? this.provinces,
      districts: districts ?? this.districts,
      wards: wards ?? this.wards,
      timeFrames: timeFrames ?? this.timeFrames,
      selectedProvinceCode: selectedProvinceCode ?? this.selectedProvinceCode,
      selectedDistrictCode: selectedDistrictCode ?? this.selectedDistrictCode,
      selectedWardCode: selectedWardCode ?? this.selectedWardCode,
      selectReceiveTimes: selectReceiveTimes ?? this.selectReceiveTimes,
      selectedPaymentMethod: clearPaymentMethod ? null : selectedPaymentMethod ?? this.selectedPaymentMethod,
      products: products ?? this.products,
      orderPrices: orderPrices ?? this.orderPrices,
      promotions: promotions ?? this.promotions,
      totalPrice: totalPrice ?? this.totalPrice,
      totalPromotionPrice: totalPromotionPrice ?? this.totalPromotionPrice,
      submitOrderStatus: submitOrderStatus ?? BlocStatus.initial,
      order: order,
      errorMessage: errorMessage,
      enabledProvince: enabledProvince ?? this.enabledProvince,
      enabledDistrict: enabledDistrict ?? this.enabledDistrict,
      enabledWard: enabledWard ?? this.enabledWard,
      invalidSku: invalidSku ?? this.invalidSku,
      invalidSkuMessage: invalidSkuMessage ?? this.invalidSkuMessage,
      enableIssueInvoice: enableIssueInvoice ?? this.enableIssueInvoice,
      acceptedPolicy: acceptedPolicy ?? this.acceptedPolicy,
      invoiceType: invoiceType ?? this.invoiceType,
      errorIndexes: errorIndexes ?? this.errorIndexes,
    );
  }
}
