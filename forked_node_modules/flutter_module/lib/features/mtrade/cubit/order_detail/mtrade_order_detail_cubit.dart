import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/features/mtrade/repository/mtrade_product_repository.dart';
import 'package:flutter_module/models/mtrade/order/mtrade_order_detail_model.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_order_detail_payload.dart';

part 'mtrade_order_detail_state.dart';

class MTradeOrderDetailCubit extends Cubit<MTradeOrderDetailState> {
  MTradeOrderDetailCubit() : super(const MTradeOrderDetailState());

  final MTradeProductRepository _repository = MTradeProductRepository();
  MTradeOrderDetailPayload _payload = MTradeOrderDetailPayload();

  fetchData({bool showLoading = true, bool loadmore = false}) async {
    if (showLoading) {
      emit(state.copyWith(
        status: BlocStatus.loading,
      ));
    }

    final result = await _repository.getOrderDetail(
      payload: _payload,
    );

    if (result.status) {
      emit(state.copyWith(
        status: BlocStatus.success,
        orderDetail: result.data,
      ));
    } else {
      emit(state.copyWith(
        status: BlocStatus.failure,
      ));
    }
  }

  updatePayload({
    String? orderId,
  }) {
    _payload = _payload.copyWith(
      orderId: orderId,
    );
  }
}
