import 'dart:async';

import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:flutter_module/common/bloc_status.dart';

import '../../repository/mtrade_product_repository.dart';

part 'mtrade_search_state.dart';

class MTradeSearchCubit extends Cubit<MTradeSearchState> {
  MTradeSearchCubit() : super(const MTradeSearchState());

  bool _closed = false;
  final MTradeProductRepository _repository = MTradeProductRepository();

  fetchData({required String query}) async {
    emit(state.copyWith(
      status: BlocStatus.loading,
    ));

    final result = await _repository.getFilterSuggestion(productName: query);

    if (result.status) {
      emit(state.copyWith(
        status: BlocStatus.success,
        suggestions: result.data,
      ));
    } else {
      emit(state.copyWith(
        status: BlocStatus.failure,
      ));
    }
  }

  reset() {
    emit(const MTradeSearchState());
  }

  @override
  void emit(MTradeSearchState state) {
    if (!_closed) {
      super.emit(state);
    }
  }

  @override
  Future<void> close() {
    _closed = true;
    return super.close();
  }
}
