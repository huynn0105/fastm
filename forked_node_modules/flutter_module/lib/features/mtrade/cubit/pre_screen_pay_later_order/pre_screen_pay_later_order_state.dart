part of 'pre_screen_pay_later_order_cubit.dart';

class PreScreenPayLaterOrderState extends Equatable {
  const PreScreenPayLaterOrderState({
    this.statusSubmit = BlocStatus.initial,
    this.enabledSubmit = true,
    this.acceptedPolicy = false,
    this.enabledProvince = false,
    this.enabledDistrict = false,
    this.enabledWard = false,
    this.listProvince = const [],
    this.listDistrict = const [],
    this.listWard = const [],
    this.selectedProvinceID,
    this.selectedDistrictID,
    this.selectedWardID,
    this.schemeType,
    this.errorFields = const {},
    this.errorMessage,
    this.mplData,
  });

  final BlocStatus statusSubmit;
  final bool enabledSubmit;
  final bool acceptedPolicy;
  final bool enabledProvince;
  final bool enabledDistrict;
  final bool enabledWard;
  final List<GeneralObject> listProvince;
  final List<GeneralObject> listDistrict;
  final List<GeneralObject> listWard;
  final int? selectedProvinceID;
  final int? selectedDistrictID;
  final int? selectedWardID;
  final String? schemeType;
  final Map<String, String> errorFields;
  final String? errorMessage;
  final MTradeGenMplTokenModel? mplData;

  @override
  List<Object?> get props => [
        statusSubmit,
        enabledSubmit,
        acceptedPolicy,
        enabledProvince,
        enabledDistrict,
        enabledWard,
        listProvince,
        listDistrict,
        listWard,
        selectedProvinceID,
        selectedDistrictID,
        selectedWardID,
        schemeType,
        errorFields,
        errorMessage,
        mplData,
      ];

  PreScreenPayLaterOrderState copyWith({
    BlocStatus? statusSubmit,
    bool? enabledSubmit,
    bool? acceptedPolicy,
    bool? enabledProvince,
    bool? enabledDistrict,
    bool? enabledWard,
    List<GeneralObject>? listProvince,
    List<GeneralObject>? listDistrict,
    List<GeneralObject>? listWard,
    int? selectedProvinceID,
    int? selectedDistrictID,
    int? selectedWardID,
    String? schemeType,
    Map<String, String>? errorFields,
    String? errorMessage,
    MTradeGenMplTokenModel? mplData,
  }) {
    return PreScreenPayLaterOrderState(
      statusSubmit: statusSubmit ?? BlocStatus.initial,
      enabledSubmit: enabledSubmit ?? this.enabledSubmit,
      acceptedPolicy: acceptedPolicy ?? this.acceptedPolicy,
      enabledProvince: enabledProvince ?? this.enabledProvince,
      enabledDistrict: enabledDistrict ?? this.enabledDistrict,
      enabledWard: enabledWard ?? this.enabledWard,
      listProvince: listProvince ?? this.listProvince,
      listDistrict: listDistrict ?? this.listDistrict,
      listWard: listWard ?? this.listWard,
      selectedProvinceID: selectedProvinceID ?? this.selectedProvinceID,
      selectedDistrictID: selectedDistrictID ?? this.selectedDistrictID,
      selectedWardID: selectedWardID ?? this.selectedWardID,
      schemeType: schemeType ?? this.schemeType,
      errorFields: errorFields ?? this.errorFields,
      errorMessage: errorMessage,
      mplData: mplData ?? this.mplData,
    );
  }
}
