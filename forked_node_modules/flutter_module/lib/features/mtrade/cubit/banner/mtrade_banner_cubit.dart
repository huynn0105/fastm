import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/features/mtrade/repository/mtrade_product_repository.dart';
import 'package:flutter_module/models/mtrade/banner/mtrade_banner_model.dart';

part 'mtrade_banner_state.dart';

class MTradeBannerCubit extends Cubit<MTradeBannerState> {
  MTradeBannerCubit() : super(const MTradeBannerState());

  final MTradeProductRepository _repository = MTradeProductRepository();

  fetchData({bool showLoading = true}) async {
    if (showLoading) {
      emit(state.copyWith(
        status: BlocStatus.loading,
      ));
    }

    final result = await _repository.getListBanner();

    if (result.status) {
      emit(state.copyWith(
        status: BlocStatus.success,
        banners: result.data,
      ));
    } else {
      emit(state.copyWith(
        status: BlocStatus.failure,
      ));
    }
  }

  Future refreshData() async {
    await fetchData(showLoading: false);
  }
}
