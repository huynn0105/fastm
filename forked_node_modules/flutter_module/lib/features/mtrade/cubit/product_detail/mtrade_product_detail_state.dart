part of 'mtrade_product_detail_cubit.dart';

class MTradeProductDetailState extends Equatable {
  const MTradeProductDetailState({
    this.status = BlocStatus.initial,
    this.checkSkuStatus = BlocStatus.initial,
    this.checkProjectPayNowStatus = BlocStatus.initial,
    this.checkProjectPayLaterStatus = BlocStatus.initial,
    this.addCartStatus = BlocStatus.initial,
    this.checkSupportLocationStatus = BlocStatus.initial,
    this.checkProductSchemePayLater = BlocStatus.initial,
    this.checkProductStockStatus = BlocStatus.initial,
    this.checkMethodStatus = BlocStatus.initial,
    this.selectedAttributes = const {},
    this.product,
    this.skuDetail,
    this.errorTitle,
    this.errorMessage,
    this.errorCode,
    this.errorFields = const {},
    this.enabledPayment = true,
    this.productImg = const [],
    this.projectCode,
    this.attributes = const [],
    this.supportLocation,
    this.supportLocationStatus = BlocStatus.initial,
  });

  final BlocStatus status;
  final BlocStatus checkSkuStatus;
  final BlocStatus checkProjectPayNowStatus;
  final BlocStatus checkProjectPayLaterStatus;
  final BlocStatus addCartStatus;
  final BlocStatus checkSupportLocationStatus;
  final BlocStatus checkProductSchemePayLater;
  final BlocStatus checkProductStockStatus;
  final BlocStatus checkMethodStatus;
  final MTradeProductDetailModel? product;
  final Map<String, String> selectedAttributes;
  final MTradeSkuDetailModel? skuDetail;
  final String? errorTitle;
  final String? errorMessage;
  final String? errorCode;
  final Map<String, String> errorFields;
  final bool enabledPayment;
  final List<String> productImg;
  final ProjectCodeModel? projectCode;
  final List<AttributeModel> attributes;
  final ProductLocationSupportModel? supportLocation;
  final BlocStatus supportLocationStatus;

  @override
  List<Object?> get props => [
        status,
        checkSkuStatus,
        checkProjectPayNowStatus,
        checkProjectPayLaterStatus,
        addCartStatus,
        checkSupportLocationStatus,
        checkProductSchemePayLater,
        checkProductStockStatus,
        checkMethodStatus,
        product,
        selectedAttributes,
        skuDetail,
        errorTitle,
        errorMessage,
        errorCode,
        errorFields,
        productImg,
        enabledPayment,
        projectCode,
        attributes,
        supportLocation,
        supportLocationStatus,
      ];

  MTradeProductDetailState copyWith({
    BlocStatus? status,
    BlocStatus? checkSkuStatus,
    BlocStatus? checkProjectPayNowStatus,
    BlocStatus? checkProjectPayLaterStatus,
    BlocStatus? addCartStatus,
    BlocStatus? checkSupportLocationStatus,
    BlocStatus? checkProductSchemePayLater,
    BlocStatus? checkProductStockStatus,
    BlocStatus? checkMethodStatus,
    MTradeProductDetailModel? product,
    Map<String, String>? selectedAttributes,
    MTradeSkuDetailModel? skuDetail,
    String? errorTitle,
    String? errorMessage,
    String? errorCode,
    Map<String, String>? errorFields,
    bool? enabledPayment,
    List<String>? productImg,
    ProjectCodeModel? projectCode,
    List<AttributeModel>? attributes,
    ProductLocationSupportModel? supportLocation,
    BlocStatus? supportLocationStatus,
  }) {
    return MTradeProductDetailState(
      status: status ?? this.status,
      checkSkuStatus: checkSkuStatus ?? BlocStatus.initial,
      checkProjectPayNowStatus: checkProjectPayNowStatus ?? BlocStatus.initial,
      checkProjectPayLaterStatus: checkProjectPayLaterStatus ?? BlocStatus.initial,
      addCartStatus: addCartStatus ?? BlocStatus.initial,
      checkSupportLocationStatus: checkSupportLocationStatus ?? BlocStatus.initial,
      checkProductSchemePayLater: checkProductSchemePayLater ?? BlocStatus.initial,
      checkProductStockStatus: checkProductStockStatus ?? BlocStatus.initial,
      checkMethodStatus: checkMethodStatus ?? this.checkMethodStatus,
      product: product ?? this.product,
      selectedAttributes: selectedAttributes ?? this.selectedAttributes,
      skuDetail: skuDetail ?? this.skuDetail,
      errorTitle: errorTitle,
      errorMessage: errorMessage,
      errorCode: errorCode,
      errorFields: errorFields ?? this.errorFields,
      enabledPayment: enabledPayment ?? this.enabledPayment,
      productImg: productImg ?? this.productImg,
      projectCode: projectCode,
      attributes: attributes ?? this.attributes,
      supportLocation: supportLocation ?? (checkSupportLocationStatus?.isFailure == true ? null : this.supportLocation),
      supportLocationStatus: supportLocationStatus ?? this.supportLocationStatus,
    );
  }
}
