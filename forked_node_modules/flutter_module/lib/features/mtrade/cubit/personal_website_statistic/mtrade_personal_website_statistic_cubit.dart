import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/utils/color_util.dart';
import 'package:flutter_module/common/widgets/chart/donut_chart/donut_chart_data.dart';
import 'package:flutter_module/features/mtrade/repository/mtrade_product_repository.dart';
import 'package:flutter_module/models/mtrade/personal_website_statistic/mtrade_personal_website_statistic_model.dart';
import 'package:flutter_module/services/api/mtrade/payload/mtrade_personal_website_statistic_payload.dart';

part 'mtrade_personal_website_statistic_state.dart';

class MTradePersonalWebsiteStatisticCubit extends Cubit<MTradePersonalWebsiteStatisticState> {
  MTradePersonalWebsiteStatisticCubit() : super(const MTradePersonalWebsiteStatisticState());

  final MTradeProductRepository _repository = MTradeProductRepository();

  fetchData({bool showLoading = true, String? source}) async {
    if (showLoading) {
      emit(state.copyWith(
        status: BlocStatus.loading,
      ));
    }

    final result = await _repository.getPersonalWebsiteStatistic(
      payload: MTradePersonalWebsiteStatisticPayload(
        source: source,
      ),
    );
    if (showLoading) {
      await Future.delayed(const Duration(milliseconds: 1500)); // animation
    }

    if (result.status) {
      emit(state.copyWith(
        status: BlocStatus.success,
        data: result.data,
      ));
    } else {
      emit(state.copyWith(
        status: BlocStatus.failure,
      ));
    }
  }

  refreshData({String? source}) async {
    await fetchData(showLoading: false, source: source);
  }

  DonutChartData getDonutChartData() {
    final data = state.data?.details ?? [];
    return DonutChartData.success(
      sections: data.map(
        (e) {
          return DonutChartSectionData(
            value: (e.count ?? 0).toDouble(),
            label: e.label ?? "",
            unit: e.unit ?? "",
            color: ColorUtil.fromHex(e.color ?? ""),
          );
        },
      ).toList(),
    );
  }
}
