part of 'buyer_info_cubit.dart';

class BuyerInfoState extends Equatable {
  BuyerInfoState({
    this.status = BlocStatus.initial,
    this.selectedProvinceIndex,
    this.selectedDistrictIndex,
    this.provinceList = const [],
    this.districtList = const [],
    this.enableDistrict = false,
    Map<String, String>? errorFields,
    this.errorIndexes = const {},
  }) : errorFields = errorFields ?? {}; //workaround to modify errorFields

  final BlocStatus status;
  final int? selectedProvinceIndex;
  final int? selectedDistrictIndex;
  final List<MasterDataModel> provinceList;
  final List<MasterDataModel> districtList;
  final bool enableDistrict;
  final Map<String, String> errorFields;
  final Map<String, int> errorIndexes;

  @override
  List<Object?> get props => [
        status,
        selectedProvinceIndex,
        selectedDistrictIndex,
        provinceList,
        districtList,
        enableDistrict,
        errorFields,
        errorIndexes,
      ];

  BuyerInfoState copyWith({
    BlocStatus? status,
    int? selectedProvinceIndex,
    int? selectedDistrictIndex,
    List<MasterDataModel>? provinceList,
    List<MasterDataModel>? districtList,
    bool? enableDistrict,
    Map<String, String>? errorFields,
    Map<String, int>? errorIndexes,
    //
    bool? clear,
  }) {
    return BuyerInfoState(
      status: status ?? this.status,
      selectedProvinceIndex: selectedProvinceIndex ?? this.selectedProvinceIndex,
      selectedDistrictIndex: selectedDistrictIndex ?? this.selectedDistrictIndex,
      provinceList: provinceList ?? this.provinceList,
      districtList: districtList ?? this.districtList,
      enableDistrict: enableDistrict ?? this.enableDistrict,
      errorFields: errorFields ?? this.errorFields,
      errorIndexes: errorIndexes ?? this.errorIndexes,
    );
  }

  BuyerInfoState clear() {
    return copyWith(
      clear: true,
    );
  }
}
