part of 'product_scheme_pay_later_order_cubit.dart';

class ProductSchemePayLaterOrderState extends Equatable {
  const ProductSchemePayLaterOrderState({
    this.status = BlocStatus.initial,
    this.wholePriceStatus = BlocStatus.initial,
    this.frontCaptureStatus = BlocStatus.initial,
    this.backCaptureStatus = BlocStatus.initial,
    this.enabledLoanScheme = false,
    this.enabledDownPaymentAmount = false,
    this.enabledLoanTenor = false,
    this.vehicleType,
    this.imageDocumentFrontUrl,
    this.imageDocumentBackUrl,
    this.data,
    this.scheme,
    this.totalPrice,
    this.products = const [],
    this.listLoanScheme = const [],
    this.listDownPayment = const [],
    this.listLoanTenor = const [],
    this.joinInsuranceType = JoinInsuranceType.hide,
    this.selectedJoinInsurance,
    this.selectedLoanSchemeID,
    this.selectedDownPaymentPercent,
    this.selectedLoanTenor,
    this.newDownPaymentAmount,
    this.newLoanAmount,
    this.newTotalLoanAmount,
    this.newInsurancePercent,
    this.newInsuranceAmount,
    this.newTenorConversionFeeAmount,
    this.newEmi,
    this.acceptedPolicy = false,
    this.enabledSubmit = false,
    this.statusSubmit = BlocStatus.initial,
    this.errorMessage,
    this.promotions = const [],
    this.orderPrices = const [],
    this.totalPromotionPrice = 0,
    this.totalPriceAfterPromotions = 0,
  });

  final BlocStatus status;
  final BlocStatus wholePriceStatus;
  final BlocStatus frontCaptureStatus;
  final BlocStatus backCaptureStatus;
  final bool enabledLoanScheme;
  final bool enabledDownPaymentAmount;
  final bool enabledLoanTenor;
  final VehicleType? vehicleType;
  final String? imageDocumentFrontUrl;
  final String? imageDocumentBackUrl;
  final MTradePreScreenDataModel? data;
  final List<MTradeCartProductModel> products;
  final MTradeProductSchemeModel? scheme;
  final double? totalPrice;
  final List<GeneralObject> listLoanScheme;
  final List<DownPaymentModel> listDownPayment;
  final List<TenorConversionFeeSchemeModel> listLoanTenor;
  final bool? selectedJoinInsurance;
  final int? selectedLoanSchemeID;
  final double? selectedDownPaymentPercent;
  final TenorConversionFeeSchemeModel? selectedLoanTenor;
  final double? newDownPaymentAmount;
  final double? newLoanAmount;
  final double? newTotalLoanAmount;
  final double? newInsurancePercent;
  final double? newInsuranceAmount;
  final double? newTenorConversionFeeAmount;
  final double? newEmi;
  final JoinInsuranceType joinInsuranceType;
  final bool acceptedPolicy;
  final bool enabledSubmit;
  final BlocStatus statusSubmit;
  final String? errorMessage;
  final List<DataProductVariationsModel> promotions;
  final List<OrderPrice> orderPrices;
  final double totalPromotionPrice;
  final double totalPriceAfterPromotions;

  @override
  List<Object?> get props => [
        status,
        wholePriceStatus,
        frontCaptureStatus,
        backCaptureStatus,
        enabledLoanScheme,
        enabledDownPaymentAmount,
        enabledLoanTenor,
        selectedJoinInsurance,
        vehicleType,
        imageDocumentFrontUrl,
        imageDocumentBackUrl,
        data,
        scheme,
        products,
        totalPrice,
        selectedLoanSchemeID,
        selectedDownPaymentPercent,
        selectedLoanTenor,
        listLoanScheme,
        listDownPayment,
        listLoanTenor,
        newDownPaymentAmount,
        newLoanAmount,
        newTotalLoanAmount,
        newInsuranceAmount,
        newTenorConversionFeeAmount,
        newEmi,
        joinInsuranceType,
        acceptedPolicy,
        enabledSubmit,
        statusSubmit,
        errorMessage,
        promotions,
        orderPrices,
        totalPromotionPrice,
        totalPriceAfterPromotions,
      ];

  ProductSchemePayLaterOrderState copyWith({
    BlocStatus? status,
    BlocStatus? wholePriceStatus,
    BlocStatus? frontCaptureStatus,
    BlocStatus? backCaptureStatus,
    bool? enabledLoanScheme,
    bool? enabledDownPaymentAmount,
    bool? enabledLoanTenor,
    bool? selectedJoinInsurance,
    VehicleType? vehicleType,
    String? imageDocumentFrontUrl,
    String? imageDocumentBackUrl,
    MTradePreScreenDataModel? data,
    double? totalPrice,
    List<MTradeCartProductModel>? products,
    MTradeProductSchemeModel? scheme,
    List<GeneralObject>? listLoanScheme,
    List<DownPaymentModel>? listDownPayment,
    List<TenorConversionFeeSchemeModel>? listLoanTenor,
    int? selectedLoanSchemeID,
    double? selectedDownPaymentPercent,
    TenorConversionFeeSchemeModel? selectedLoanTenor,
    double? newDownPaymentAmount,
    double? newLoanAmount,
    double? newTotalLoanAmount,
    double? newInsurancePercent,
    double? newInsuranceAmount,
    double? newTenorConversionFeeAmount,
    double? newEmi,
    JoinInsuranceType? joinInsuranceType,
    bool? acceptedPolicy,
    bool? enabledSubmit,
    BlocStatus? statusSubmit,
    String? errorMessage,
    List<DataProductVariationsModel>? promotions,
    List<OrderPrice>? orderPrices,
    double? totalPromotionPrice,
    double? totalPriceAfterPromotions,

    //
    bool? clear,
  }) {
    return ProductSchemePayLaterOrderState(
      status: status ?? this.status,
      wholePriceStatus: wholePriceStatus ?? this.wholePriceStatus,
      frontCaptureStatus: frontCaptureStatus ?? this.frontCaptureStatus,
      backCaptureStatus: backCaptureStatus ?? this.backCaptureStatus,
      enabledLoanScheme: enabledLoanScheme ?? this.enabledLoanScheme,
      enabledDownPaymentAmount: clear == true ? false : enabledDownPaymentAmount ?? this.enabledDownPaymentAmount,
      enabledLoanTenor: clear == true ? false : enabledLoanTenor ?? this.enabledLoanTenor,
      vehicleType: vehicleType ?? this.vehicleType,
      imageDocumentFrontUrl:
          imageDocumentFrontUrl?.isEmpty == true ? null : imageDocumentFrontUrl ?? this.imageDocumentFrontUrl,
      imageDocumentBackUrl:
          imageDocumentBackUrl?.isEmpty == true ? null : imageDocumentBackUrl ?? this.imageDocumentBackUrl,
      data: data ?? this.data,
      scheme: clear == true ? null : scheme ?? this.scheme,
      products: products ?? this.products,
      totalPrice: totalPrice ?? this.totalPrice,
      listLoanScheme: listLoanScheme ?? this.listLoanScheme,
      listDownPayment: clear == true ? [] : listDownPayment ?? this.listDownPayment,
      listLoanTenor: clear == true ? [] :listLoanTenor ?? this.listLoanTenor,
      joinInsuranceType: joinInsuranceType ?? this.joinInsuranceType,
      //
      selectedJoinInsurance: clear == true ? null : selectedJoinInsurance ?? this.selectedJoinInsurance,
      selectedLoanSchemeID: clear == true ? null : selectedLoanSchemeID ?? this.selectedLoanSchemeID,
      selectedDownPaymentPercent: clear == true ? null : selectedDownPaymentPercent ?? this.selectedDownPaymentPercent,
      selectedLoanTenor: clear == true ? null : selectedLoanTenor ?? this.selectedLoanTenor,
      newDownPaymentAmount: clear == true ? null : newDownPaymentAmount ?? this.newDownPaymentAmount,
      newLoanAmount: clear == true ? null : newLoanAmount ?? this.newLoanAmount,
      newTotalLoanAmount: clear == true ? null : newTotalLoanAmount ?? this.newTotalLoanAmount,
      newInsurancePercent: clear == true ? null : newInsurancePercent ?? this.newInsurancePercent,
      newInsuranceAmount: clear == true ? null : newInsuranceAmount ?? this.newInsuranceAmount,
      newTenorConversionFeeAmount:
          clear == true ? null : newTenorConversionFeeAmount ?? this.newTenorConversionFeeAmount,
      newEmi: clear == true ? null : newEmi ?? this.newEmi,
      //
      acceptedPolicy: acceptedPolicy ?? this.acceptedPolicy,
      enabledSubmit: enabledSubmit ?? this.enabledSubmit,
      statusSubmit: statusSubmit ?? BlocStatus.initial,
      errorMessage: errorMessage,
      promotions: promotions ?? this.promotions,
      orderPrices: orderPrices ?? this.orderPrices,
      totalPromotionPrice: totalPromotionPrice ?? this.totalPromotionPrice,
      totalPriceAfterPromotions: totalPriceAfterPromotions ?? this.totalPriceAfterPromotions,
    );
  }

  ProductSchemePayLaterOrderState clear() {
    return copyWith(
      clear: true,
    );
  }
}
