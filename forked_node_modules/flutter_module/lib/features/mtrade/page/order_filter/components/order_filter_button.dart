import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/dialogs/modals/fullscreen_modal.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/common/widgets/widget_layout.dart';
import 'package:flutter_module/features/mtrade/cubit/order_filter/mtrade_order_filter_cubit.dart';
import 'package:flutter_module/features/mtrade/page/order_filter/mtrade_order_filter_page.dart';

class OrderFilterButton extends StatelessWidget {
  const OrderFilterButton({super.key});

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<MTradeOrderFilterCubit, MTradeOrderFilterState>(
      buildWhen: (pre, cur) {
        final preFilter = pre.selectedFilters.values.expand((e) => e).toList();
        final curFilter = cur.selectedFilters.values.expand((e) => e).toList();
        return preFilter.length != curFilter.length;
      },
      builder: (context, state) {
        final hasSelectedFilter = state.selectedFilters.values.expand((e) => e).toList().isNotEmpty;
        final asset = hasSelectedFilter ? "ic_mtrade_filter_selected" : "ic_mtrade_filter";

        return SplashButton(
          borderRadius: BorderRadius.circular(20),
          onTap: () {
            onShowFilter(context);
          },
          child: Container(
            width: 40,
            height: 40,
            alignment: Alignment.center,
            decoration: const BoxDecoration(
              shape: BoxShape.circle,
              color: UIColors.white,
            ),
            child: Stack(
              clipBehavior: Clip.none,
              alignment: Alignment.center,
              children: [
                AppImage.asset(
                  asset: asset,
                  width: 24,
                  height: 24,
                ),
                if (hasSelectedFilter)
                  const Positioned(
                    bottom: -8.5,
                    right: -8.5,
                    child: AppImage.asset(
                      asset: "ic_status_success",
                      width: 20,
                      height: 20,
                    ),
                  ),
              ],
            ),
          ),
        );
      },
    );
  }

  onShowFilter(BuildContext context) async {
    final cubit = context.read<MTradeOrderFilterCubit>();
    final result = await Navigator.of(context).push(
      FullScreenModal(
        page: BlocProvider.value(
          value: cubit,
          child: const WidgetLayout(child: MTradeOrderFilterPage()),
        ),
      ),
    );
    if (result == true) {
      //
    }
  }
}
