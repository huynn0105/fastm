import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/features/mtrade/cubit/order_filter/mtrade_order_filter_cubit.dart';

class OrderDateFilterListenerComponent extends StatelessWidget {
  const OrderDateFilterListenerComponent({
    super.key,
    required this.child,
    this.onFilterChanged,
    this.onTimeFilterChanged,
  });

  final Widget child;
  final Function(Map<String, dynamic>)? onFilterChanged;
  final Function(Map<String, dynamic>)? onTimeFilterChanged;

  @override
  Widget build(BuildContext context) {
    final cubit = context.read<MTradeOrderFilterCubit>();
    final keyword = cubit.timeKeyword;
    return MultiBlocListener(
      listeners: [
        BlocListener<MTradeOrderFilterCubit, MTradeOrderFilterState>(
          listenWhen: (pre, cur) {
            final preFilter =
                MTradeOrderFilterConverter(filter: pre.selectedTimeFilters).getDataByKeyword(keyword).values.toList();
            final curFilter =
                MTradeOrderFilterConverter(filter: cur.selectedTimeFilters).getDataByKeyword(keyword).values.toList();
            return jsonEncode(preFilter) != jsonEncode(curFilter);
          },
          listener: (context, state) {
            onTimeFilterChanged?.call(cubit.getFilterDataByKeyword(keyword));
          },
        ),
        BlocListener<MTradeOrderFilterCubit, MTradeOrderFilterState>(
          listenWhen: (pre, cur) {
            final preFilter = MTradeOrderFilterConverter(filter: {...pre.selectedTimeFilters, ...pre.selectedFilters})
                .getData()
                .values
                .toList();
            final curFilter = MTradeOrderFilterConverter(filter: {...cur.selectedTimeFilters, ...cur.selectedFilters})
                .getData()
                .values
                .toList();
            return jsonEncode(preFilter) != jsonEncode(curFilter);
          },
          listener: (context, state) {
            onFilterChanged?.call(cubit.getFilterData());
          },
        ),
      ],
      child: child,
    );
  }
}
