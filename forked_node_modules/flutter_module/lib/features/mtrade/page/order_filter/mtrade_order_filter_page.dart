import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/enum/log_event_key.dart';
import 'package:flutter_module/common/utils/log_event_util.dart';
import 'package:flutter_module/features/mtrade/cubit/order_filter/mtrade_order_filter_cubit.dart';
import 'package:flutter_module/features/mtrade/page/order_filter/components/order_filter_data_component.dart';
import 'package:flutter_module/features/mtrade/page/product_filter/components/header_component.dart';
import 'package:flutter_module/features/mtrade/page/product_filter/components/option_component.dart';

class MTradeOrderFilterPage extends StatefulWidget {
  const MTradeOrderFilterPage({super.key});

  @override
  State<MTradeOrderFilterPage> createState() => _MTradeOrderFilterPageState();
}

class _MTradeOrderFilterPageState extends State<MTradeOrderFilterPage> {
  @override
  void initState() {
    super.initState();
    WidgetsBinding.instance.addPostFrameCallback((_) {
      final cubit = context.read<MTradeOrderFilterCubit>();
      cubit.initSelecting();
    });
  }

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<MTradeOrderFilterCubit, MTradeOrderFilterState>(
      builder: (context, state) {
        final cubit = context.read<MTradeOrderFilterCubit>();
        final status = state.status;
        final data = state.filters.where((e) => e.keyword != cubit.timeKeyword).toList();
        final selectedData = state.selectingFilters;

        ///
        return Row(
          children: [
            const SizedBox(
              width: 80,
            ),
            Expanded(
              child: Scaffold(
                backgroundColor: Colors.transparent,
                body: Container(
                  decoration: const BoxDecoration(
                    color: UIColors.white,
                  ),
                  child: SafeArea(
                    child: Container(
                      decoration: const BoxDecoration(
                        color: UIColors.background,
                      ),
                      child: Column(
                        children: [
                          const FilterHeaderComponent(
                            title: 'Bộ lọc đơn hàng',
                          ),
                          OrderFilterDataComponent(
                            status: status,
                            data: data,
                            selectedData: selectedData,
                            onSelected: (keyword, index, item) {
                              cubit.selectingFilter(
                                keyword: keyword,
                                filterIndex: index,
                                filterItem: item,
                              );
                            },
                          ),
                        ],
                      ),
                    ),
                  ),
                ),
                bottomNavigationBar: FilterActionComponent(
                  visible: state.status.isSuccess,
                  onClear: () {
                    cubit.clearSelecting();
                  },
                  onApply: () {
                    LogEventUtil.send(LogEventKey.mTradeFilterTool, data: {"filter": "filter_product"});
                    cubit.applySelecting();
                    Navigator.of(context).pop();
                  },
                ),
              ),
            ),
          ],
        );
      },
    );
  }
}
