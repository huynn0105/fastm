import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:dotted_border/dotted_border.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/features/mtrade/page/promotion/components/mtrade_searched_voucher_component.dart';

class MTradePromotionSearchBarComponent extends StatefulWidget {
  const MTradePromotionSearchBarComponent({
    super.key,
    this.controller,
    this.onChange,
    this.onSubmitted,
    this.onClearSearch,
    this.isLoading = false,
    required this.searchedVoucher,
    required this.onVoucherDeleted,
  });

  final TextEditingController? controller;
  final Function(String text)? onChange;
  final Function(String text)? onSubmitted;
  final Function()? onClearSearch;
  final bool isLoading;
  final List<String> searchedVoucher;
  final Function(String) onVoucherDeleted;

  @override
  State<MTradePromotionSearchBarComponent> createState() => _MTradePromotionSearchBarComponentState();
}

class _MTradePromotionSearchBarComponentState extends State<MTradePromotionSearchBarComponent> {
  bool isFocus = false;
  bool isHasValue = false;
  FocusNode focusNode = FocusNode();

  late TextEditingController controller;

  @override
  void initState() {
    super.initState();
    controller = widget.controller ?? TextEditingController();
    controller.addListener(() {
      if (isHasValue == controller.text.isNotEmpty) return;
      setState(() {
        isHasValue = controller.text.isNotEmpty;
      });
    });

    focusNode.addListener(() {
      if (isFocus == focusNode.hasFocus) return;
      setState(() {
        isFocus = focusNode.hasFocus;
      });
    });
  }

  @override
  void dispose() {
    controller.dispose();
    focusNode.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return DottedBorder(
      padding: EdgeInsets.zero,
      color: isFocus ? UIColors.primaryColor : UIColors.gray,
      borderType: BorderType.RRect,
      radius: const Radius.circular(8),
      strokeWidth: 1,
      dashPattern: const [8, 6],
      child: Container(
        alignment: Alignment.center,
        constraints: const BoxConstraints(
          minHeight: 56,
        ),
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(8),
          color: UIColors.white,
        ),
        child: Row(
          children: [
            Expanded(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  AnimatedSize(
                    alignment: Alignment.topCenter,
                    duration: const Duration(milliseconds: 400),
                    child: Visibility(
                      visible: widget.searchedVoucher.isNotEmpty,
                      child: Align(
                        alignment: Alignment.topLeft,
                        child: MTradeSearchedVoucherComponent(
                          data: widget.searchedVoucher,
                          onDeleted: widget.onVoucherDeleted,
                        ),
                      ),
                    ),
                  ),
                  Row(
                    children: [
                      Expanded(
                        child: SizedBox(
                          height: 50,
                          child: TextField(
                            controller: controller,
                            cursorColor: UIColors.primaryColor,
                            cursorRadius: const Radius.circular(1),
                            focusNode: focusNode,
                            style: UITextStyle.medium.copyWith(
                              fontSize: 16,
                              height: 1,
                            ),
                            decoration: InputDecoration(
                              contentPadding: const EdgeInsets.symmetric(vertical: 0, horizontal: 16),
                              filled: false,
                              fillColor: UIColors.red,
                              hintText: 'Nhập mã ưu đãi',
                              hintStyle: UITextStyle.regular.copyWith(
                                fontSize: 14,
                                height: 1,
                                color: UIColors.grayText,
                              ),
                              enabledBorder: InputBorder.none,
                              focusedBorder: InputBorder.none,
                            ),
                            onSubmitted: (value) {
                              widget.onSubmitted?.call(value);
                            },
                            onChanged: (value) {
                              widget.onChange?.call(value);
                            },
                          ),
                        ),
                      ),
                      AppSplashButton(
                        isDisable: !isHasValue,
                        onTap: () {
                          controller.clear();
                          widget.onClearSearch?.call();
                        },
                        child: Container(
                          width: 40,
                          height: 40,
                          alignment: Alignment.center,
                          child: Visibility(
                            visible: isHasValue,
                            child: const AppImage.asset(
                              asset: "ic_mtrade_clear_x",
                              width: 24,
                              height: 24,
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                ],
              ),
            ),
            PrimaryButton(
              padding: EdgeInsets.zero,
              height: 40,
              width: 90,
              radius: 8,
              onPressed: () {
                widget.onSubmitted?.call(controller.text);
              },
              isLoading: widget.isLoading,
              widget: Text(
                "Tìm kiếm",
                style: UITextStyle.regular.copyWith(
                  color: UIColors.white,
                  height: 1,
                ),
              ),
              enabled: isHasValue,
            ),
            const SizedBox(
              width: 12,
            ),
          ],
        ),
      ),
    );
  }
}
