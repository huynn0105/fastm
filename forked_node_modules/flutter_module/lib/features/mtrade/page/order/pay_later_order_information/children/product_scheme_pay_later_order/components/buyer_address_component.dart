import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/extension/list_extension.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/features/mtrade/cubit/product_scheme_pay_later_order/buyer_info_cubit.dart';
import 'package:scroll_to_index/scroll_to_index.dart';

import '../../../../../../../../common/bottom_sheet/bottom_sheet_provider.dart';
import '../../../../../../../../common/bottom_sheet/wrapper/data_wrapper.dart';
import '../../../../../../../../common/colors.dart';
import '../../../../../../../../common/constants.dart';
import '../../../../../../../../common/styles.dart';
import '../../../../../../../../common/widgets/collect_data_view.dart';
import '../../../../../../../../common/widgets/textfields.dart';

class BuyerAddressComponent extends StatelessWidget {
  const BuyerAddressComponent({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final cubit = context.read<BuyerInfoCubit>();
    return BlocBuilder<BuyerInfoCubit, BuyerInfoState>(
      builder: (context, state) {
        if (state.status.isInitial) {
          cubit.fetchData();
        }
        return Padding(
          padding: const EdgeInsets.fromLTRB(16, 24, 16, 0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                'Địa chỉ nơi ở hiện tại',
                style: UITextStyle.semiBold.copyWith(
                  color: UIColors.grayText,
                ),
              ),
              const SizedBox(
                height: 12,
              ),
              Container(
                padding: const EdgeInsets.all(16),
                decoration: BoxDecoration(
                  color: UIColors.white,
                  borderRadius: BorderRadius.circular(8),
                ),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    AutoScrollTag(
                      controller: cubit.scrollController,
                      key: ValueKey(state.errorIndexes[AppConstants.buyerProvinceKey] ?? 0),
                      index: state.errorIndexes[AppConstants.buyerProvinceKey] ?? 0,
                      child: CollectDataView(
                        errorMsg: state.errorFields[AppConstants.buyerProvinceKey],
                        child: SplashButton(
                          onTap: () async {
                            final data = state.provinceList.map((e) {
                              return DataWrapper(id: e.id, value: e.name);
                            }).toList();
                            final selectedProvince = state.provinceList.valueAt(state.selectedProvinceIndex ?? -1);
                            final result = await BottomSheetProvider.instance.onShowSearchList(
                              context,
                              title: "Tỉnh / Thành phố",
                              selectedId: selectedProvince?.id ?? '',
                              data: data,
                            );
                            if (result != null) {
                              cubit.selectProvince(data.indexWhere((element) => element.id == result.id));
                            }
                          },
                          child: UITextField.dropdown(
                            controller: cubit.buyerProvinceController,
                            labelText: 'Tỉnh/Thành phố',
                            hasError: state.errorFields[AppConstants.buyerProvinceKey] != null,
                          ),
                        ),
                      ),
                    ),
                    const SizedBox(
                      height: 16,
                    ),
                    AutoScrollTag(
                      controller: cubit.scrollController,
                      key: ValueKey(state.errorIndexes[AppConstants.buyerDistrictKey] ?? 0),
                      index: state.errorIndexes[AppConstants.buyerDistrictKey] ?? 0,
                      child: CollectDataView(
                        errorMsg: state.errorFields[AppConstants.buyerDistrictKey],
                        child: SplashButton(
                          isDisabled: !state.enableDistrict,
                          onTap: () async {
                            final data = state.districtList.map((e) {
                              return DataWrapper(id: e.id, value: e.name);
                            }).toList();
                            final selectedDistrict = state.districtList.valueAt(state.selectedDistrictIndex ?? -1);
                            final result = await BottomSheetProvider.instance.onShowSearchList(
                              context,
                              title: "Quận / Huyện",
                              selectedId: selectedDistrict?.id ?? '',
                              data: data,
                            );
                            if (result != null) {
                              cubit.selectDistrict(data.indexWhere((element) => element.id == result.id));
                            }
                          },
                          child: UITextField.dropdown(
                            controller: cubit.buyerDistrictController,
                            labelText: 'Quận/Huyện',
                            enable: state.enableDistrict,
                            hasError: state.errorFields[AppConstants.buyerDistrictKey] != null,
                          ),
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ],
          ),
        );
      },
    );
  }
}
