import 'dart:io';

import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

import '../../../../../../../../common/colors.dart';
import '../../../../../../../../common/dialogs/dialog_provider.dart';
import '../../../../../../../../common/utils/image_picker_utils.dart';
import '../../../../../../../../common/widgets/buttons.dart';
import 'package:permission_handler/permission_handler.dart';

import 'add_document_item.dart';
import 'document_item.dart';
import 'loading_document_item.dart';

class DocumentImageItem extends StatelessWidget {
  const DocumentImageItem({
    super.key,
    this.url,
    this.isLoading = false,
    this.type = '',
    this.onAddImage,
    this.onRemoveImage,
  });

  final String? url;
  final String type;
  final bool isLoading;
  final Function(File)? onAddImage;
  final Function()? onRemoveImage;

  @override
  Widget build(BuildContext context) {
    if (isLoading) {
      return const LoadingDocumentItem();
    } else if (url == null) {
      return SplashButton(
        onTap: () => _addImage(context),
        child: AddDocumentItem(
          type: type,
        ),
      );
    } else {
      return DocumentItem(
        image: url!,
        editable: true,
        onRemoveImage: () {
          onRemoveImage?.call();
        },
      );
    }
  }

  _addImage(BuildContext context) async {
    try {
      File? file = await ImagePickerUtils.pickImage(context: context);
      if (file != null) {
        onAddImage?.call(file);
      }
    } catch (e) {
      if (e is PlatformException && e.code == 'camera_access_denied' && context.mounted) {
        DialogProvider.instance.showMTradeDialog(
          context: context,
          asset: "ic_mtrade_mascot_error",
          title: "Thêm hình ảnh thất bại",
          message: "Vui lòng cho phép quyền truy cập camera",
          titleColor: UIColors.red,
          messageAlign: TextAlign.start,
          positiveTitle: "Cho phép truy cập",
          positiveCallback: () {
            openAppSettings();
          },
        );
      }
    }
  }
}
