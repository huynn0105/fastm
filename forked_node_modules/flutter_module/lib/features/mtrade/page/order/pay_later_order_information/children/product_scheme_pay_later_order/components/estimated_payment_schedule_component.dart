import 'package:flutter/material.dart';
import 'package:flutter_module/common/size.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/images.dart';

import '../../../../../../../../common/colors.dart';
import '../items/schedule_payment_item.dart';
import '../items/schedule_down_payment_item.dart';
import '../items/schedule_title_item.dart';

class EstimatedPaymentScheduleComponent extends StatelessWidget {
  const EstimatedPaymentScheduleComponent({
    Key? key,
    required this.emi,
    required this.downPaymentPercent,
    required this.downPaymentAmount,
    required this.loanTenor,
    this.enabled = false,
  }) : super(key: key);

  final bool enabled;
  final double emi;
  final double downPaymentPercent;
  final double downPaymentAmount;
  final int loanTenor;

  @override
  Widget build(BuildContext context) {
    final length = loanTenor;
    final showDownPayment = downPaymentPercent > 0;
    final expandedLength = showDownPayment ? 2 : 1;
    return FractionallySizedBox(
      heightFactor: 0.8,
      child: !enabled
          ? Padding(
              padding: const EdgeInsets.all(16),
              child: Column(
                children: [
                  const AppImage.asset(
                    asset: "ic_mtrade_mascot_announce",
                    width: 124,
                    height: 124,
                  ),
                  const SizedBox(
                    height: 20,
                  ),
                  Text(
                    "Vui lòng điền hết các thông tin cơ bản của hồ sơ trả chậm để xem lịch thanh toán dự kiến",
                    style: UITextStyle.medium.copyWith(
                      fontSize: 16,
                    ),
                    textAlign: TextAlign.center,
                  ),
                  const SizedBox(
                    height: 20,
                  ),
                  PrimaryButton(
                    onPressed: () {
                      Navigator.of(context).pop();
                    },
                    radius: 8,
                    width: double.infinity,
                    title: "Đã hiểu và quay lại",
                  ),
                ],
              ),
            )
          : ListView.builder(
              padding: EdgeInsets.only(bottom: AppSize.instance.safeBottom),
              itemBuilder: (context, index) {
                final backgroundColor = index.isEven ? UIColors.extraLightBlue : UIColors.white;
                if (index == 0) {
                  return Container(
                    color: backgroundColor,
                    child: const ScheduleTitleItem(),
                  );
                }
                if (index == 1 && showDownPayment) {
                  return Container(
                    color: backgroundColor,
                    child: ScheduleDownPaymentItem(
                      percent: downPaymentPercent,
                      amount: downPaymentAmount,
                    ),
                  );
                }
                index = index - expandedLength;
                return Container(
                  color: backgroundColor,
                  child: SchedulePaymentItem(
                    index: index,
                    length: length,
                    emi: emi,
                  ),
                );
              },
              itemCount: length + expandedLength,
            ),
    );
  }
}
