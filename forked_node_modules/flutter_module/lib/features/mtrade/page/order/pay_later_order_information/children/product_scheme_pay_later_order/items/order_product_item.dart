import 'package:flutter/material.dart';
import 'package:flutter_module/common/extension/list_extension.dart';
import 'package:flutter_module/features/mtrade/page/order/order_process_state/items/status_items/order_delivery_process_state_item.dart';
import '../../../../../../../../common/colors.dart';
import '../../../../../../../../common/styles.dart';
import '../../../../../../../../common/utils/format_util.dart';
import '../../../../../../../../common/widgets/collect_data_view.dart';
import '../../../../../../../../common/widgets/images.dart';
import '../../../../../../../../models/mtrade/cart/mtrade_cart_product_model.dart';
import '../../../../../../../../models/mtrade/order/mtrade_order_price_model.dart';

class OrderProductItem extends StatelessWidget {
  const OrderProductItem({
    Key? key,
    required this.data,
    required this.index,
    required this.invalid,
    required this.promotionPrice,
    this.hasPromotion = false,
    this.orderPrice,
    this.onDeleted,
  }) : super(key: key);

  final MTradeCartProductModel data;
  final int index;
  final bool invalid;
  final double promotionPrice;
  final bool hasPromotion;
  final OrderPrice? orderPrice;
  final Function(MTradeCartProductModel?)? onDeleted;

  @override
  Widget build(BuildContext context) {
    final comparePrice = data.comparePrice ?? [];
    int displayPrice = 0;
    bool useWholesalePrice = orderPrice?.existWholesalePrice() == true && !hasPromotion;
    bool publicWholesalePrice = orderPrice?.public == true && !hasPromotion;
    if (useWholesalePrice) {
      displayPrice = orderPrice?.newPrice ?? 0;
    } else {
      displayPrice = data.price ?? 0;
    }
    double comparePriceValue = comparePrice.valueAt(0)?.value ?? 0;
    bool showComparePrice = displayPrice < comparePriceValue;
    return Container(
      constraints: const BoxConstraints(minHeight: 84),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          SizedBox(
            width: 84,
            height: 84,
            child: Stack(
              children: [
                Positioned.fill(
                  child: AppImage.network(
                    url: data.productImg ?? "",
                    width: 84,
                    height: 84,
                    borderRadius: BorderRadius.circular(8),
                  ),
                ),
                Visibility(
                  visible: invalid,
                  child: Container(
                    decoration: BoxDecoration(
                      color: UIColors.white.withOpacity(0.5),
                      borderRadius: BorderRadius.circular(8),
                    ),
                  ),
                ),
              ],
            ),
          ),
          const SizedBox(
            width: 12,
          ),
          Expanded(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.start,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                CollectDataView(
                  errorMsg: invalid ? "Không hỗ trợ giao ở địa chỉ trên" : "",
                  spacing: 0,
                  child: Text(
                    data.name ?? "",
                    style: UITextStyle.medium.copyWith(
                      fontSize: 16,
                      decoration: invalid ? TextDecoration.lineThrough : TextDecoration.none,
                    ),
                  ),
                ),
                const SizedBox(
                  height: 4,
                ),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    Text(
                      FormatUtil.currencyFormat(displayPrice),
                      style: UITextStyle.medium.copyWith(
                        fontSize: 16,
                        color: UIColors.red,
                      ),
                      maxLines: 1,
                      overflow: TextOverflow.ellipsis,
                    ),
                    if (showComparePrice)
                      Text(
                        comparePrice.valueAt(0)?.getValue() ?? "",
                        style: UITextStyle.medium.copyWith(
                          fontSize: 14,
                          color: UIColors.grayText,
                          decoration: TextDecoration.lineThrough,
                        ),
                        maxLines: 1,
                        overflow: TextOverflow.ellipsis,
                      ),
                  ],
                ),
                if (publicWholesalePrice)
                  Row(
                    children: [
                      const AppImage.asset(
                        asset: 'ic_success',
                        width: 20,
                        height: 20,
                      ),
                      const SizedBox(width: 4),
                      Text(
                        'ĐANG ÁP DỤNG GIÁ ĐẶC BIỆT',
                        style: UITextStyle.semiBold.copyWith(
                          color: UIColors.extraGreen,
                        ),
                      )
                    ],
                  ),
                const SizedBox(
                  height: 4,
                ),
                InfoItem(
                  titleFlex: 3,
                  contentFlex: 7,
                  title: "Số lượng:",
                  content: "${data.quantity ?? 0}",
                  titleColor: UIColors.grayText,
                  contentColor: UIColors.defaultText,
                  titleStyle: UITextStyle.regular.copyWith(
                    fontSize: 13,
                  ),
                  contentStyle: UITextStyle.regular.copyWith(
                    fontSize: 13,
                  ),
                ),
                Visibility(
                  visible: promotionPrice > 0,
                  child: InfoItem(
                    titleFlex: 3,
                    contentFlex: 7,
                    title: "Giảm giá:",
                    content: FormatUtil.currencyDoubleFormat(promotionPrice),
                    titleColor: UIColors.grayText,
                    contentColor: UIColors.defaultText,
                    titleStyle: UITextStyle.regular.copyWith(
                      fontSize: 13,
                    ),
                    contentStyle: UITextStyle.regular.copyWith(
                      fontSize: 13,
                    ),
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}
