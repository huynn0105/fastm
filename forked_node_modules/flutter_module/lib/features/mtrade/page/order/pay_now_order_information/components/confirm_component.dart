import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/dialogs/dialog_provider.dart';
import 'package:flutter_module/common/enum/log_event_key.dart';
import 'package:flutter_module/common/global_function.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/log_event_util.dart';
import 'package:flutter_module/features/mtrade/cubit/consent/mtrade_consent_cubit.dart';
import 'package:flutter_module/features/mtrade/cubit/pay_now_order_information/mtrade_pay_now_order_information_cubit.dart';

import '../../../../../../common/widgets/buttons.dart';

class ConfirmComponent extends StatelessWidget {
  const ConfirmComponent({
    Key? key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final enabled = context.select((MTradePayNowOrderInformationCubit cubit) => cubit.state.enabled);
    return BlocListener<MTradeConsentCubit, MTradeConsentState>(
      listener: (context, state) {},
      listenWhen: (previous, current) {
        return previous.status != current.status;
      },
      child: Padding(
        padding: const EdgeInsets.symmetric(horizontal: 16),
        child: Column(
          children: [
            PrimaryButton(
              enabled: enabled,
              onPressed: () {
                LogEventUtil.send(LogEventKey.mTradeLdpPayNowConfirmButton, data: {"confirm": "confirm_order_button"});
                _showSheetVerifyPhone(context);
              },
              width: double.infinity,
              radius: 8,
              title: "Xác nhận đơn hàng",
            ),
            const SizedBox(
              height: 16,
            ),
            RichText(
              textAlign: TextAlign.center,
              text: TextSpan(
                style: UITextStyle.regular.copyWith(
                  fontSize: 13,
                  color: UIColors.grayText,
                ),
                children: [
                  const TextSpan(
                    text: "Đảm bảo ",
                  ),
                  TextSpan(
                    text: "thông tin sản phẩm ",
                    style: UITextStyle.semiBold.copyWith(
                      fontSize: 13,
                      color: UIColors.red,
                    ),
                  ),
                  const TextSpan(
                    text: "và ",
                  ),
                  TextSpan(
                    text: "địa chi giao hàng chính xác",
                    style: UITextStyle.semiBold.copyWith(
                      fontSize: 13,
                      color: UIColors.red,
                    ),
                  ),
                  const TextSpan(
                    text: "\ntrước khi thanh toán / tham gia trả chậm.",
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  _showSheetVerifyPhone(BuildContext context) {
    final informationCubit = context.read<MTradePayNowOrderInformationCubit>();
    final consentCubit = context.read<MTradeConsentCubit>();

    final mobilePhone = informationCubit.orderPhoneController.text;

    final isValidateSubmit = informationCubit.isValidateSubmit();
    if (!isValidateSubmit) return;
    consentCubit.saveConsent(mobilePhone: mobilePhone).then((value) {
      if (value.status) {
        GlobalFunction.action(
          context: context,
          onTap: () {
            context.read<MTradePayNowOrderInformationCubit>().submitOrder();
          },
        );
      } else {
        DialogProvider.instance.showMTradeErrorDialog(context: context, message: value.errorMessage);
      }
    });
  }
}
