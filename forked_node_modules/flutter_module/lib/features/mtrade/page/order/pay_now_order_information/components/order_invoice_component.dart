import 'package:flutter_module/common/enum/mtrade/invoice_type.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/checkbox.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:scroll_to_index/scroll_to_index.dart';

import '../../../../../../../common/constants.dart';
import '../../../../../../../common/styles.dart';
import '../../../../../../../common/text_input_formatter/trim_input_formatter.dart';
import '../../../../../../../common/widgets/collect_data_view.dart';
import '../../../../../../../common/widgets/textfields.dart';
import '../../../../../../common/colors.dart';
import '../../../../../../common/widgets/radio.dart';
import '../../../../cubit/pay_now_order_information/mtrade_pay_now_order_information_cubit.dart';
import 'order_company_invoice_component.dart';
import 'order_personal_invoice_component.dart';

class OrderInvoiceComponent extends StatelessWidget {
  const OrderInvoiceComponent({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final cubit = context.read<MTradePayNowOrderInformationCubit>();
    return BlocBuilder<MTradePayNowOrderInformationCubit, MTradePayNowOrderInformationState>(
      builder: (context, state) {
        return Padding(
          padding: const EdgeInsets.symmetric(horizontal: 16),
          child: Column(
            children: [
              AppSplashButton(
                onTap: () {
                  cubit.toggleIssueInvoice();
                },
                child: IgnorePointer(
                  ignoring: true,
                  child: AppCheckbox.rectangle(
                    value: state.enableIssueInvoice,
                    title: "Yêu cầu xuất hóa đơn",
                    onChanged: (_) {},
                  ),
                ),
              ),
              AnimatedSize(
                duration: const Duration(milliseconds: 800),
                alignment: Alignment.topCenter,
                curve: Curves.linearToEaseOut,
                child: SizedBox(
                  width: double.infinity,
                  child: Visibility(
                    visible: state.enableIssueInvoice,
                    child: Container(
                      padding: const EdgeInsets.all(16),
                      margin: const EdgeInsets.only(top: 12),
                      decoration: BoxDecoration(
                        color: UIColors.white,
                        borderRadius: BorderRadius.circular(8),
                      ),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          RichText(
                            text: TextSpan(
                              text: "Loại hóa đơn",
                              style: UITextStyle.regular.copyWith(
                                fontSize: 13,
                              ),
                              children: [
                                TextSpan(
                                  text: "*",
                                  style: UITextStyle.regular.copyWith(
                                    fontSize: 13,
                                    color: UIColors.red,
                                  ),
                                ),
                              ],
                            ),
                          ),
                          const SizedBox(
                            height: 8,
                          ),
                          Row(
                            children: [
                              Expanded(
                                child: AppRadio(
                                  title: 'Cá nhân',
                                  value: state.invoiceType.isPersonal,
                                  onChanged: (value) {
                                    cubit.invoiceTypeChanged(InvoiceType.personal);
                                  },
                                ),
                              ),
                              Expanded(
                                child: AppRadio(
                                  title: 'Công ty',
                                  value: state.invoiceType.isCompany,
                                  onChanged: (value) {
                                    cubit.invoiceTypeChanged(InvoiceType.company);
                                  },
                                ),
                              ),
                            ],
                          ),
                          const SizedBox(
                            height: 16,
                          ),
                          if (state.invoiceType.isPersonal)
                            OrderPersonalInvoiceComponent(
                              invoiceFullnameController: cubit.invoicePersonalFullNameController,
                              invoiceAddressController: cubit.invoicePersonalAddressController,
                              onFullnameChanged: cubit.invoicePersonalFullNameChanged,
                              onAddressChanged: cubit.invoicePersonalAddressChanged,
                              errorFields: state.errorFields,
                              errorIndexes: state.errorIndexes,
                              scrollController: cubit.scrollController,
                            ),
                          if (state.invoiceType.isCompany)
                            OrderCompanyInvoiceComponent(
                              invoiceCompanyNameController: cubit.invoiceCompanyNameController,
                              invoiceCompanyTaxController: cubit.invoiceCompanyTaxController,
                              invoiceCompanyAddressController: cubit.invoiceCompanyAddressController,
                              onCompanyNameChanged: cubit.invoiceCompanyNameChanged,
                              onCompanyTaxChanged: cubit.invoiceCompanyTaxChanged,
                              onCompanyAddressChanged: cubit.invoiceCompanyAddressChanged,
                              errorFields: state.errorFields,
                              errorIndexes: state.errorIndexes,
                              scrollController: cubit.scrollController,
                            ),
                          const SizedBox(
                            height: 16,
                          ),
                          AutoScrollTag(
                            controller: cubit.scrollController,
                            key: ValueKey(state.errorIndexes[AppConstants.invoiceEmailKey] ?? 0),
                            index: state.errorIndexes[AppConstants.invoiceEmailKey] ?? 0,
                            child: CollectDataView(
                              errorMsg: state.errorFields[AppConstants.invoiceEmailKey],
                              child: UITextField(
                                controller: cubit.invoiceEmailController,
                                labelText: 'Email nhận hoá đơn',
                                hasError: state.errorFields[AppConstants.invoiceEmailKey] != null,
                                inputFormatters: [TrimInputFormatter()],
                                onChanged: cubit.invoiceEmailChanged,
                              ),
                            ),
                          ),
                          const SizedBox(
                            height: 8,
                          ),
                          Text(
                            'Hoá đơn sẽ được gửi sau khi đơn hàng hoàn tất',
                            style: UITextStyle.regular.copyWith(
                              color: UIColors.grayText,
                              fontStyle: FontStyle.italic,
                              fontSize: 13,
                            ),
                          ),
                          const SizedBox(
                            height: 16,
                          ),
                          Container(
                            padding: const EdgeInsets.all(8),
                            decoration: BoxDecoration(
                              color: UIColors.lightSecondaryColor,
                              borderRadius: BorderRadius.circular(8),
                            ),
                            child: Row(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                const AppImage.asset(
                                  asset: "ic_notification",
                                  width: 24,
                                  height: 24,
                                  color: UIColors.secondaryColor,
                                ),
                                const SizedBox(
                                  width: 4,
                                ),
                                Expanded(
                                  child: Text(
                                    "Lưu ý: hóa đơn chỉ được xuất 1 lần duy nhất và không hỗ trợ chỉnh sửa. Nhớ nhập và kiểm tra lại thông tin bạn nhé!",
                                    style: UITextStyle.regular.copyWith(
                                      fontSize: 13,
                                      color: UIColors.grayText,
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ),
                        ],
                      ),
                    ),
                  ),
                ),
              ),
            ],
          ),
        );
      },
    );
  }
}
