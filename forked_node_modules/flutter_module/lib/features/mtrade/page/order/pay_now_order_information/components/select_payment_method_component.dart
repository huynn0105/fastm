import 'package:auto_route/auto_route.dart';
import 'package:collection/collection.dart';
import 'package:ekyc/common/utils/text_util.dart';
import 'package:ekyc/common/widgets/buttons.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/constants.dart';
import 'package:flutter_module/common/widgets/collect_data_view.dart';
import 'package:flutter_module/features/mtrade/cubit/pay_now_order_information/mtrade_pay_now_order_information_cubit.dart';
import 'package:flutter_module/features/mtrade/page/order/pay_now_order_information/components/selected_payment_method_component.dart';
import 'package:flutter_module/models/mtrade/order/payment_method_model.dart';
import 'package:scroll_to_index/scroll_to_index.dart';

import '../../../../../../common/colors.dart';
import '../../../../../../common/styles.dart';
import '../../../../../../common/widgets/images.dart';
import '../../../../../../models/mtrade/order/mtrade_order_price_model.dart';
import '../../../../../../models/mtrade/promotion/mtrade_promotion_data_model.dart';
import '../../../../../../routes/routes.gr.dart';
import '../../../../../../services/api/mtrade/payload/mtrade_pay_now_order_payload.dart';

class SelectPaymentMethodComponent extends StatelessWidget {
  const SelectPaymentMethodComponent({super.key});

  @override
  Widget build(BuildContext context) {
    final cubit = context.read<MTradePayNowOrderInformationCubit>();
    return BlocBuilder<MTradePayNowOrderInformationCubit, MTradePayNowOrderInformationState>(
      builder: (context, state) {
        String? errorMsg = state.errorFields[AppConstants.orderPaymentMethodKey];
        bool hasError = TextUtils.isEmpty(errorMsg);
        return Padding(
          padding: const EdgeInsets.symmetric(horizontal: 16),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                "Phương thức thanh toán",
                style: UITextStyle.semiBold.copyWith(
                  fontSize: 16,
                  color: UIColors.grayText,
                ),
              ),
              const SizedBox(height: 8),
              SplashButton(
                onTap: () async {
                  final result = await context.pushRoute(
                    WebViewPaymentMethodBottomSheetRoute(
                      title: "Chọn phương thức thanh toán",
                      provinceCode: state.selectedProvinceCode,
                      districtCode: state.selectedDistrictCode,
                      wardCode: state.selectedWardCode,
                      orderItems: state.products.map((p) {
                        final promotions = state.promotions.where((e) => e.sku == p.sku).toList();
                        List<OmsPromotionCodes> codes = [];
                        for (var promo in promotions) {
                          codes.addAll(promo.codes?.map((e) => OmsPromotionCodes(code: e.code ?? '')).toList() ?? []);
                        }
                        OrderPrice? price = state.orderPrices.firstWhereOrNull((element) => element.sku == p.sku);
                        return OrderItems(
                          sku: p.sku,
                          quantity: p.quantity,
                          merchantCode: p.merchantCode,
                          promotions: codes,
                          productPriceId: state.promotions.isNotEmpty ? null : price?.productPriceId,
                          productPriceItemId: state.promotions.isNotEmpty ? null : price?.productPriceItemId,
                        );
                      }).toList(),
                      totalAmount: state.totalPromotionPrice >= state.totalPrice
                          ? 0
                          : state.totalPrice - state.totalPromotionPrice,
                    ),
                  );
                  if (result is PaymentMethodModel && context.mounted && result.paymentMethod != null) {
                    context.read<MTradePayNowOrderInformationCubit>().selectPaymentMethod(result);
                  }
                },
                child: AutoScrollTag(
                  controller: cubit.scrollController,
                  key: ValueKey(state.errorIndexes[AppConstants.orderPaymentMethodKey] ?? 0),
                  index: state.errorIndexes[AppConstants.orderPaymentMethodKey] ?? 0,
                  child: CollectDataView(
                    errorMsg: errorMsg,
                    child: Stack(
                      children: [
                        Container(
                          margin: const EdgeInsets.only(left: 24),
                          padding: EdgeInsets.only(
                            top: state.selectedPaymentMethod != null ? 12 : 18,
                            bottom: state.selectedPaymentMethod != null ? 12 : 18,
                            right: 12,
                            left: 30,
                          ),
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(8),
                            color: UIColors.white,
                            border: Border.all(
                              width: 1,
                              color: hasError ? UIColors.lightGray : UIColors.red,
                            ),
                          ),
                          child: state.selectedPaymentMethod != null
                              ? SelectedPaymentMethodComponent(selectedPaymentMethod: state.selectedPaymentMethod)
                              : Row(
                                  children: [
                                    Expanded(
                                      child: Text(
                                        'Chọn phương thức',
                                        style: UITextStyle.semiBold.copyWith(
                                          fontSize: 16,
                                          color: UIColors.primaryColor,
                                        ),
                                      ),
                                    ),
                                    const SizedBox(width: 12),
                                    const AppImage.asset(asset: 'ic_arrow_right', width: 20, height: 20),
                                  ],
                                ),
                        ),
                        Container(
                          decoration: BoxDecoration(
                            color: UIColors.white,
                            shape: BoxShape.circle,
                            border: Border.all(
                              width: 1,
                              color: hasError ? UIColors.lightGray : UIColors.red,
                            ),
                          ),
                          width: 44,
                          height: 44,
                          padding: const EdgeInsets.all(6),
                          margin: EdgeInsets.only(top: state.selectedPaymentMethod != null ? 12 : 8),
                          child: state.selectedPaymentMethod != null
                              ? AppImage.network(
                                  url: state.selectedPaymentMethod?.icon ?? '',
                                  width: 32,
                                  height: 32,
                                  fit: BoxFit.contain,
                                )
                              : const AppImage.asset(
                                  asset: 'ic_payment_method',
                                  width: 32,
                                  height: 32,
                                ),
                        ),
                      ],
                    ),
                  ),
                ),
              ),
            ],
          ),
        );
      },
    );
  }
}
