import 'package:auto_route/auto_route.dart';
import 'package:ekyc/common/widgets/buttons.dart';
import 'package:flutter/material.dart';

import '../../../../../../common/colors.dart';
import '../../../../../../common/styles.dart';
import '../../../../../../models/mtrade/order/payment_detai_model.dart';
import '../../../../../../routes/routes.gr.dart';
import 'delivery_info_component.dart';

class OrderInfoComponent extends StatelessWidget {
  const OrderInfoComponent({
    Key? key,
    this.orders,
  }) : super(key: key);

  final ListOrders? orders;

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Row(
          children: [
            Text(
              'Đơn hàng ',
              style: UITextStyle.regular.copyWith(
                color: UIColors.grayText,
              ),
            ),
            SplashButton(
              onTap: () {
                _goOrderDetail(context);
              },
              child: Text(
                '${orders?.orderID ?? ''}:',
                style: UITextStyle.semiBold.copyWith(
                  color: UIColors.primaryColor,
                ),
              ),
            ),
          ],
        ),
        const SizedBox(height: 2),
        ListView.separated(
          padding: EdgeInsets.zero,
          physics: const NeverScrollableScrollPhysics(),
          shrinkWrap: true,
          itemBuilder: (context, index) {
            OrderItems? item = orders?.orderItems?[index];
            return Text(
              '• ${item?.quantity ?? ''}x ${item?.name ?? ''}',
              style: UITextStyle.regular,
            );
          },
          separatorBuilder: (context, index) {
            return const SizedBox(height: 2);
          },
          itemCount: orders?.orderItems?.length ?? 0,
        ),
        const SizedBox(height: 2),
        if (orders?.earliestDeliveryDate != null) const SizedBox(height: 8),
        if (orders?.earliestDeliveryDate != null) DeliveryInfoComponent(orders: orders),
      ],
    );
  }

  _goOrderDetail(BuildContext context) {
    context.router.push(MTradeOrderDetailRoute(orderId: orders?.id?.toString()));
  }
}
