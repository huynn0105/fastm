import 'package:auto_route/auto_route.dart';
import 'package:dotted_line/dotted_line.dart';
import 'package:flutter/material.dart';
import 'package:flutter_module/common/enum/process_status.dart';
import 'package:flutter_module/features/mtrade/page/order/order_overview/components/delivery_info_component.dart';
import 'package:flutter_module/features/mtrade/page/order/order_overview/components/order_info_component.dart';
import 'package:flutter_module/routes/routes.gr.dart';

import '../../../../../common/colors.dart';
import '../../../../../common/global_function.dart';
import '../../../../../common/styles.dart';
import '../../../../../common/utils/redirect_util.dart';
import '../../../../../common/widgets/appbar.dart';
import '../../../../../common/widgets/buttons.dart';
import '../../../../../common/widgets/images.dart';
import '../../../../../models/mtrade/order/mtrade_pay_now_order_model.dart';
import 'components/customer_info_component.dart';
import 'components/payment_info_component.dart';

@RoutePage()
class OrderOverviewPage extends StatelessWidget implements AutoRouteWrapper {
  const OrderOverviewPage({
    Key? key,
    this.order,
  }) : super(key: key);

  final MTradePayNowOrderModel? order;

  @override
  Widget wrappedRoute(BuildContext context) {
    return this;
  }

  @override
  Widget build(BuildContext context) {
    bool isSuccess = order?.paymentStatus == ProcessStatus.success.name;
    return Scaffold(
      appBar: MFastAdvanceAppBar(
        context: context,
        title: "Bán hàng trả ngay",
        onBack: () {
          context.popRoute();
        },
        onHome: () {
          RedirectUtil.backToMFast();
        },
      ),
      body: ListView(
        padding: const EdgeInsets.fromLTRB(16, 66, 16, 100),
        children: [
          Container(
            width: double.infinity,
            padding: const EdgeInsets.fromLTRB(16, 0, 16, 16),
            decoration: BoxDecoration(
              color: UIColors.white,
              borderRadius: BorderRadius.circular(16),
            ),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              mainAxisSize: MainAxisSize.min,
              children: [
                const Center(
                  child: SizedBox(
                    height: 80,
                    width: 140,
                    child: Stack(
                      clipBehavior: Clip.none,
                      children: [
                        Positioned(
                          top: -56,
                          left: 0,
                          right: 0,
                          child: AppImage.asset(
                            asset: 'ic_mtrade_mascot_order_success',
                            width: 140,
                            height: 140,
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
                const SizedBox(height: 12),
                Center(
                  child: Text(
                    'Đặt hàng thành công',
                    style: UITextStyle.semiBold.copyWith(
                      fontSize: 20,
                      color: UIColors.green,
                    ),
                    textAlign: TextAlign.center,
                  ),
                ),
                const SizedBox(height: 4),
                Center(
                  child: Text(
                    order?.paymentNote ?? '',
                    style: UITextStyle.regular.copyWith(
                      color: UIColors.grayText,
                    ),
                    textAlign: TextAlign.center,
                  ),
                ),
                const SizedBox(height: 12),
                const DottedLine(
                  dashGapLength: 5,
                  dashLength: 10,
                  dashColor: UIColors.lightGray,
                ),
                const SizedBox(height: 12),
                ListView.separated(
                  physics: const NeverScrollableScrollPhysics(),
                  shrinkWrap: true,
                  padding: EdgeInsets.zero,
                  itemBuilder: (context, index) {
                    return OrderInfoComponent(orders: order?.paymentDetail?.listOrders?[index]);
                  },
                  separatorBuilder: (context, index) {
                    return const SizedBox(height: 8);
                  },
                  itemCount: order?.paymentDetail?.listOrders?.length ?? 0,
                ),
                const SizedBox(height: 8),
                CustomerInfoComponent(order: order),
                const SizedBox(height: 12),
                const DottedLine(
                  dashGapLength: 5,
                  dashLength: 10,
                  dashColor: UIColors.lightGray,
                ),
                const SizedBox(height: 12),
                PaymentInfoComponent(order: order),
              ],
            ),
          ),
          const SizedBox(height: 24),
          if (!isSuccess)
            PrimaryButton(
              onPressed: () {
                _payNow(context);
              },
              title: 'Thanh toán ngay',
            ),
          const SizedBox(height: 14),
          SplashButton(
            onTap: () {
              if (isSuccess) {
                _goHome(context);
              } else {
                _sharePaymentLink();
              }
            },
            child: Center(
              child: Text(
                isSuccess ? 'Tiếp tục mua sắm' : 'Gửi link cho khách hàng thanh toán',
                style: UITextStyle.semiBold.copyWith(
                  fontSize: 16,
                  color: UIColors.primaryColor,
                  height: 1.5,
                ),
              ),
            ),
          )
        ],
      ),
    );
  }

  _payNow(BuildContext context) {
    GlobalFunction.replaceWebView(
      context: context,
      url: order?.paymentUrl ?? "",
      title: "Thông tin thanh toán",
    );
  }

  _sharePaymentLink() {
    GlobalFunction.shareText(
      order?.sendPaymentUrl ?? '',
      subject: "Link thanh toán đơn hàng MTrade",
    );
  }

  _goHome(BuildContext context) {
    context.router.popUntil((route) => route.settings.name == MTradeRoute.name);
  }
}
