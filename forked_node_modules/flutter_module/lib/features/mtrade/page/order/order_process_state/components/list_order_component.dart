import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import '../../../../cubit/order_process_state/mtrade_order_process_state_cubit.dart';
import '../../../../../../models/mtrade/order/order_model.dart';

import '../../../../../../common/bloc_status.dart';
import '../../../../../../common/widgets/empty_widget.dart';
import '../../../../../../common/widgets/loading.dart';
import '../../../../../../common/widgets/loadmore_widget.dart';
import '../items/order_item.dart';

class ListOrderComponent extends StatelessWidget {
  const ListOrderComponent({
    Key? key,
    required this.status,
    required this.data,
  }) : super(key: key);

  final BlocStatus status;
  final List<OrderModel> data;

  @override
  Widget build(BuildContext context) {
    if (status.showLoading) {
      return const LoadingWidget();
    }

    final processState = context.read<MTradeOrderProcessStateCubit>().processState;
    return LoadMoreWidget(
      onRefresh: () => context.read<MTradeOrderProcessStateCubit>().refreshData(),
      onLoadMore: () => context.read<MTradeOrderProcessStateCubit>().loadmoreData(),
      child: data.isEmpty && !status.showLoading
          ? const Align(
              alignment: Alignment.topCenter,
              child: EmptyWidget(),
            )
          : ListView.separated(
              padding: const EdgeInsets.only(bottom: 100, left: 16, right: 16),
              itemBuilder: (context, index) {
                return OrderItem(
                  processState: processState,
                  data: data[index],
                );
              },
              separatorBuilder: (_, __) => const SizedBox(
                height: 20,
              ),
              itemCount: data.length,
            ),
    );
  }
}
