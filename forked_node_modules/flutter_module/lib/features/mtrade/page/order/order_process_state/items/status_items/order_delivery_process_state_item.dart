import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_module/features/mtrade/page/order/order_process_state/items/order_process_state_mixin.dart';
import 'package:flutter_module/routes/routes.gr.dart';
import '../../../../../../../common/colors.dart';
import '../../../../../../../common/global_function.dart';
import '../../../../../../../common/styles.dart';
import '../../../../../../../common/toast/toast_provider.dart';
import '../../../../../../../common/utils/text_util.dart';
import '../../../../../../../common/widgets/buttons.dart';
import '../../../../../../../common/widgets/images.dart';
import '../../../../../../../models/mtrade/order/order_model.dart';

class OrderDeliveryProcessStateItem extends StatelessWidget with OrderProcessStateMixin {
  const OrderDeliveryProcessStateItem({
    Key? key,
    required this.data,
    this.isDisable = false,
  }) : super(key: key);

  final OrderModel data;
  final bool isDisable;

  @override
  Widget build(BuildContext context) {
    final title = data.processText ?? "";
    final image = data.icon ?? "";
    final date = convertDate(data.updatedDate);
    final partner = data.trackingPartner?.partner ?? "";
    final trackingCode = data.trackingPartner?.trackingCode ?? "";
    final addressFull = data.trackingPartner?.addressFull ?? "";
    final warehouse = data.trackingPartner?.warehouse ?? "";
    //
    return AppSplashButton(
      isDisable: isDisable,
      onTap: () {
        context.pushRoute(MTradeOrderDetailRoute(orderId: data.id));
      },
      child: Container(
        constraints: const BoxConstraints(
          minHeight: 44,
        ),
        child: Row(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            AppImage.network(
              url: image,
              width: 24,
              height: 24,
            ),
            const SizedBox(
              width: 10,
            ),
            Expanded(
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Text(
                        '$title ${isDisable ? '' : ">>"}',
                        style: UITextStyle.semiBold.copyWith(
                          fontSize: 14,
                          color: UIColors.primaryColor,
                        ),
                      ),
                      Text(
                        date,
                        style: UITextStyle.regular.copyWith(
                          fontSize: 13,
                          color: UIColors.grayText,
                        ),
                      ),
                    ],
                  ),
                  const SizedBox(
                    height: 5,
                  ),
                  InfoItem(
                    title: "Mã vận đơn: ",
                    content: trackingCode,
                    trailing: trackingCode.isEmpty
                        ? null
                        : AppSplashButton(
                            onTap: () {
                              GlobalFunction.copyText(trackingCode).then(
                                (_) {
                                  ToastProvider.instance.showCopy(context: context);
                                },
                              );
                            },
                            child: Row(
                              children: [
                                Text(
                                  "Copy",
                                  style: UITextStyle.regular.copyWith(
                                    fontSize: 13,
                                    color: UIColors.primaryColor,
                                  ),
                                ),
                                const SizedBox(
                                  width: 5,
                                ),
                                const AppImage.asset(
                                  asset: "ic_mtrade_copy",
                                  width: 24,
                                  height: 24,
                                  color: UIColors.primaryColor,
                                ),
                              ],
                            ),
                          ),
                  ),
                  InfoItem(
                    title: "Đơn vị: ",
                    content: partner,
                    contentColor: UIColors.grayText,
                  ),
                  InfoItem(
                    title: "Kho xuất: ",
                    content: warehouse,
                    contentColor: UIColors.grayText,
                  ),
                  InfoItem(
                    title: "Địa chỉ nhận: ",
                    content: addressFull,
                    contentColor: UIColors.grayText,
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}

class InfoItem extends StatelessWidget {
  InfoItem({
    Key? key,
    required this.title,
    required this.content,
    this.titleFlex = 4,
    this.contentFlex = 10,
    this.titleColor = UIColors.grayText,
    this.contentColor = UIColors.defaultText,
    this.trailing,
    TextStyle? titleStyle,
    TextStyle? contentStyle,
    this.titleAlignment = Alignment.centerLeft,
    this.contentAlignment = Alignment.centerLeft,
    this.titleFontSize = 13,
    this.contentFontSize = 13,
    this.crossAxisAlignment = CrossAxisAlignment.start,
  })  : titleStyle = titleStyle ??
            UITextStyle.regular.copyWith(
              fontSize: titleFontSize,
              color: UIColors.grayText,
            ),
        contentStyle = contentStyle ??
            UITextStyle.regular.copyWith(
              fontSize: contentFontSize,
              color: UIColors.defaultText,
            ),
        super(key: key);

  final String title;
  final String content;
  final int titleFlex;
  final int contentFlex;
  final Color titleColor;
  final Color contentColor;
  final TextStyle titleStyle;
  final TextStyle contentStyle;
  final Widget? trailing;
  final Alignment titleAlignment;
  final Alignment contentAlignment;
  final double titleFontSize;
  final double contentFontSize;
  final CrossAxisAlignment crossAxisAlignment;

  @override
  Widget build(BuildContext context) {
    return Row(
      crossAxisAlignment: crossAxisAlignment,
      children: [
        Expanded(
          flex: titleFlex,
          child: Align(
            alignment: titleAlignment,
            child: Text(
              title,
              style: titleStyle.copyWith(
                fontSize: titleFontSize,
                color: titleColor,
              ),
            ),
          ),
        ),
        Expanded(
          flex: contentFlex,
          child: Row(
            children: [
              Expanded(
                child: Align(
                  alignment: contentAlignment,
                  child: Text(
                    content.isEmpty ? "Chờ cập nhật" : content,
                    style: content.isEmpty
                        ? UITextStyle.regular.copyWith(
                            fontSize: contentFontSize,
                            color: UIColors.grayText,
                          )
                        : contentStyle.copyWith(
                            fontSize: contentFontSize,
                            color: contentColor,
                          ),
                  ),
                ),
              ),
              if (trailing != null) trailing!,
            ],
          ),
        ),
      ],
    );
  }
}
