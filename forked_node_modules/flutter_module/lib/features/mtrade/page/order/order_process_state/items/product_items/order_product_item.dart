import 'dart:math';

import 'package:collection/collection.dart';
import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/format_util.dart';
import 'package:flutter_module/common/widgets/images.dart';

import '../../../../../../../common/widgets/buttons.dart';
import '../../../../../../../common/widgets/divider.dart';
import '../../../../../../../common/widgets/expandable_column.dart';
import '../../../../../../../common/widgets/separated_widget.dart';
import '../../../../../../../models/mtrade/order/order_item_model.dart';

class OrderProductItem extends StatelessWidget {
  const OrderProductItem({
    Key? key,
    required this.items,
    this.initialExpanded,
  }) : super(key: key);

  final List<OrderItemModel> items;
  final bool? initialExpanded;

  @override
  Widget build(BuildContext context) {
    return ExpandableColumn(
      showExpand: items.length > 1,
      initialExpanded: initialExpanded ?? false,
      padding: EdgeInsets.zero,
      builder: (context, expanded) {
        final minSize = min(items.length, 1);
        return SeparatedColumn(
          separatorBuilder: (_, __) => const DottedDivider(
            height: 8,
            indent: 51,
          ),
          children: List.generate(
            expanded ? items.length : minSize,
            (index) {
              final item = items[index];
              return ProductItem(
                name: item.productName ?? "",
                image: item.image ?? "",
                quantity: item.quantity ?? 0,
                price: item.price ?? 0,
                promotionPrice: item.promotionPrice,
              );
            },
          ),
        );
      },
      footer: (context, expanded, controller) {
        if (expanded) {
          return const SizedBox();
        }
        return Column(
          children: [
            const DottedDivider(
              height: 8,
              indent: 51,
            ),
            SplashButton(
              onTap: controller.toggle,
              child: Container(
                height: 30,
                alignment: Alignment.center,
                margin: const EdgeInsets.only(left: 51),
                child: Row(
                  children: [
                    Expanded(
                      child: Text(
                        "${items.mapIndexed((index, e) => index == 0 ? 0 : e.quantity ?? 0).toList().fold(0, (pre, cur) => pre + cur)} - sản phẩm khác",
                        style: UITextStyle.regular.copyWith(
                          fontSize: 13,
                          color: UIColors.grayText,
                        ),
                      ),
                    ),
                    const Icon(
                      Icons.add_rounded,
                      size: 24,
                      color: UIColors.darkGray,
                    ),
                  ],
                ),
              ),
            ),
          ],
        );
      },
    );
  }
}

class ProductItem extends StatelessWidget {
  const ProductItem({
    Key? key,
    required this.name,
    required this.image,
    required this.quantity,
    required this.price,
    this.promotionPrice,
  }) : super(key: key);

  final String name;
  final String image;
  final int quantity;
  final double price;
  final double? promotionPrice;

  @override
  Widget build(BuildContext context) {
    return Container(
      constraints: const BoxConstraints(
        minHeight: 44,
      ),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          AppImage.network(
            url: image,
            width: 41,
            height: 41,
            borderRadius: BorderRadius.circular(8),
          ),
          const SizedBox(
            width: 10,
          ),
          Expanded(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  name,
                  style: UITextStyle.regular,
                  maxLines: 2,
                  overflow: TextOverflow.ellipsis,
                ),
                Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Text(
                          FormatUtil.currencyDoubleFormat(price),
                          style: UITextStyle.regular.copyWith(
                            fontSize: 13,
                          ),
                        ),
                        RichText(
                          text: TextSpan(
                            children: [
                              TextSpan(
                                text: "Số lượng:",
                                style: UITextStyle.regular.copyWith(
                                  fontSize: 13,
                                  color: UIColors.grayText,
                                ),
                              ),
                              const WidgetSpan(
                                child: SizedBox(
                                  width: 10,
                                ),
                              ),
                              TextSpan(
                                text: "$quantity",
                                style: UITextStyle.regular.copyWith(
                                  fontSize: 13,
                                ),
                              ),
                            ],
                          ),
                        ),
                      ],
                    ),
                    if (promotionPrice != null)
                      RichText(
                        text: TextSpan(
                          children: [
                            TextSpan(
                              text: "Tổng giảm giá:",
                              style: UITextStyle.regular.copyWith(
                                fontSize: 13,
                                color: UIColors.grayText,
                              ),
                            ),
                            const WidgetSpan(
                              child: SizedBox(
                                width: 10,
                              ),
                            ),
                            TextSpan(
                              text: FormatUtil.currencyDoubleFormat(promotionPrice),
                              style: UITextStyle.regular.copyWith(
                                fontSize: 13,
                              ),
                            ),
                          ],
                        ),
                      ),
                  ],
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}
