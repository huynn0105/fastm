import 'package:flutter/material.dart';
import 'package:flutter_module/common/utils/text_util.dart';
import 'package:flutter_module/features/mtrade/page/order/order_process_state/items/status_items/order_advise_process_state_item.dart';
import '../../../../../../common/colors.dart';
import '../../../../../../common/global_function.dart';
import '../../../../../../common/styles.dart';
import '../../../../../../common/toast/toast_provider.dart';
import '../../../../../../common/widgets/buttons.dart';
import '../../../../../../common/widgets/divider.dart';
import '../../../../../../common/widgets/images.dart';
import '../../../mtrade/widgets/mtrade_block_widget.dart';
import 'product_items/order_product_item.dart';
import '../../../../../../models/mtrade/order/order_model.dart';

import 'product_items/order_information_item.dart';
import 'status_items/status_items.dart';

class OrderItem extends StatelessWidget {
  const OrderItem({
    Key? key,
    required this.data,
    required this.processState,
  }) : super(key: key);

  final OrderModel data;
  final String processState;

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        if (TextUtils.isNotEmpty(data.orderID))
          Row(
            children: [
              Expanded(
                child: Text(
                  'Đơn hàng #${data.orderID ?? ""}',
                  style: UITextStyle.semiBold.copyWith(
                    color: UIColors.grayText,
                  ),
                ),
              ),
              if (TextUtils.isNotEmpty(data.orderID))
                AppSplashButton(
                  onTap: () {
                    GlobalFunction.copyText(data.orderID ?? "").then(
                      (_) {
                        ToastProvider.instance.showCopy(context: context);
                      },
                    );
                  },
                  child: Row(
                    children: [
                      Text(
                        'Copy',
                        style: UITextStyle.semiBold.copyWith(
                          color: UIColors.grayText,
                        ),
                      ),
                      const SizedBox(
                        width: 4,
                      ),
                      const AppImage.asset(
                        asset: "ic_mtrade_copy_outline",
                        width: 24,
                        height: 24,
                      ),
                    ],
                  ),
                ),
            ],
          ),
        if (TextUtils.isNotEmpty(data.orderID))
          const SizedBox(
            height: 8,
          ),
        Container(
          padding: const EdgeInsets.symmetric(
            vertical: 12,
            horizontal: 16,
          ),
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(8),
            color: UIColors.white,
          ),
          child: Column(
            children: [
              OrderProductItem(
                items: data.items ?? [],
              ),
              const DottedDivider(
                height: 8,
              ),
              OrderInformationItem(
                data: data,
                processState: processState,
              ),
              const DottedDivider(
                height: 8,
              ),
              if (processState == "waiting")
                OrderWaitingProcessStateItem(
                  data: data,
                )
              else if (processState == "success")
                OrderSuccessProcessStateItem(
                  data: data,
                )
              else if (processState == "failed")
                OrderFailedProcessStateItem(
                  data: data,
                )
              else if (processState == "delivery")
                OrderDeliveryProcessStateItem(
                  data: data,
                )
              else if (processState == "pending")
                OrderPendingProcessStateItem(
                  data: data,
                )
              else if (processState == "advise")
                OrderAdviseProcessStateItem(
                  data: data,
                ),
            ],
          ),
        ),
      ],
    );
  }
}
