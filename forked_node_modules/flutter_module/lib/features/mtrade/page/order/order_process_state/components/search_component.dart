import 'package:flutter/material.dart';
import 'package:flutter_module/common/utils/debounce_util.dart';
import 'package:flutter_module/features/mtrade/page/mtrade/widgets/mtrade_text_field.dart';
import 'package:flutter_module/features/mtrade/page/order_filter/components/order_date_filter_component.dart';
import 'package:flutter_module/features/mtrade/page/order_filter/components/order_filter_button.dart';

import '../../../mtrade/children/order/components/date_selection_component.dart';

class SearchComponent extends StatefulWidget {
  const SearchComponent({
    Key? key,
    this.searchController,
    this.onFilterChanged,
    this.onSearchChanged,
  }) : super(key: key);

  final TextEditingController? searchController;
  final Function(Map<String, dynamic>)? onFilterChanged;
  final Function(String)? onSearchChanged;

  @override
  State<SearchComponent> createState() => _SearchComponentState();
}

class _SearchComponentState extends State<SearchComponent> {
  late final DebounceUtil debounce;
  late final TextEditingController searchController;

  @override
  void initState() {
    super.initState();
    debounce = DebounceUtil(milliseconds: 200);
    searchController = widget.searchController ?? TextEditingController();
  }

  @override
  void dispose() {
    if (widget.searchController == null) {
      searchController.dispose();
    }
    debounce.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        OrderDateFilterComponent(
          onFilterChanged: widget.onFilterChanged,
        ),
        const SizedBox(
          height: 16,
        ),
        Padding(
          padding: const EdgeInsets.symmetric(horizontal: 16),
          child: Row(
            children: [
              Expanded(
                child: ValueListenableBuilder(
                  valueListenable: searchController,
                  builder: (context, value, child) {
                    final text = value.text;
                    return MTradeSearchTextField(
                      controller: searchController,
                      hintText: "Tìm tên sản phẩm, người nhận, SĐT",
                      onChanged: (value) {
                        debounce.run(() {
                          widget.onSearchChanged?.call(value);
                        });
                      },
                      showClearButton: text.isNotEmpty,
                      onCleared: () {
                        searchController.clear();
                        widget.onSearchChanged?.call('');
                      },
                    );
                  },
                ),
              ),
              const SizedBox(
                width: 16,
              ),
              const OrderFilterButton(),
            ],
          ),
        ),
      ],
    );
  }
}
