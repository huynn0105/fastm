import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/constants.dart';
import 'package:flutter_module/common/extension/list_extension.dart';
import 'package:flutter_module/common/size.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/datetime_util.dart';
import 'package:flutter_module/common/utils/format_util.dart';
import 'package:flutter_module/common/utils/redirect_util.dart';
import 'package:flutter_module/common/utils/text_util.dart';
import 'package:flutter_module/common/widgets/app_scaffold.dart';
import 'package:flutter_module/common/widgets/appbar.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/html_widget.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/common/widgets/widget_layout.dart';
import 'package:flutter_module/features/mtrade/cubit/promotion_detail/mtrade_promotion_detail_cubit.dart';
import 'package:flutter_module/features/mtrade/page/product_detail/widgets/promotion_percent_bar.dart';
import 'package:flutter_module/models/mtrade/promotion/mtrade_promotion_model.dart';

import '../../../../common/enum/mtrade/promotion_applied_user_type.dart';

@RoutePage()
class MTradeDetailPromotionPage extends StatelessWidget implements AutoRouteWrapper {
  const MTradeDetailPromotionPage({
    super.key,
    this.promotion,
    this.showApplyButton = true,
  });

  final bool showApplyButton;
  final MTradePromotionModel? promotion;

  @override
  Widget wrappedRoute(BuildContext context) {
    return BlocProvider(
      create: (_) => MTradePromotionDetailCubit()..initData(promotion),
      child: this,
    );
  }

  @override
  Widget build(BuildContext context) {
    return AppScaffold(
      appBar: MFastAdvanceAppBar(
        context: context,
        title: 'Ưu đãi từ MTrade',
        onBack: context.popRoute,
        onHome: RedirectUtil.backToMFast,
      ),
      body: BlocBuilder<MTradePromotionDetailCubit, MTradePromotionDetailState>(
        builder: (context, state) {
          final data = state.promotion;
          final percent = data?.getUsedPercent() ?? 0;
          final limit = data?.totalVoucherGenerated != null;
          final description = data?.description ?? "";
          final image = data?.omsPromotionDocuments?.getFirst()?.url ?? "";
          final appliedCondition = data?.omsPromotionConditions.getFirst()?.masterPromotionCategory?.nameOut ?? "";
          final appliedUser = data?.masterObjectType?.code == PromotionAppliedUserType.all.code
              ? "Tất cả Khách hàng của MTrade"
              : "Chỉ áp dụng cho 1 số khách hàng của MTrade";
          final timeStart = DateTimeUtil.convertDate(
            data?.timeStart,
            fromFormat: DateTimeFormat.yyyy_MM_ddTHH_mm_ssSS,
            toFormat: DateTimeFormat.dd_MM,
          );
          final timeEnd = DateTimeUtil.convertDate(
            data?.timeEnd,
            fromFormat: DateTimeFormat.yyyy_MM_ddTHH_mm_ssSS,
            toFormat: DateTimeFormat.dd__MM__yyyy,
          );
          return WidgetLayout(
            child: Stack(
              children: [
                ListView(
                  physics: AppConstants.physics,
                  padding: EdgeInsets.zero,
                  children: [
                    Visibility(
                      visible: TextUtils.isNotEmpty(image),
                      child: AspectRatio(
                        aspectRatio: 375 / 208,
                        child: AppImage.network(
                          url: image,
                        ),
                      ),
                    ),
                    const SizedBox(
                      height: 16,
                    ),
                    Container(
                      margin: const EdgeInsets.symmetric(horizontal: 16),
                      padding: const EdgeInsets.all(16),
                      decoration: BoxDecoration(
                        color: UIColors.white,
                        borderRadius: BorderRadius.circular(8),
                      ),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Text(
                            data?.name ?? "",
                            style: UITextStyle.bold.copyWith(
                              fontSize: 18,
                              color: UIColors.darkBlue,
                            ),
                          ),
                          Text(
                            appliedCondition,
                            style: UITextStyle.regular.copyWith(
                              color: UIColors.boolText,
                            ),
                          ),
                          const SizedBox(
                            height: 8,
                          ),
                          const Divider(
                            color: UIColors.background,
                            height: 1,
                            thickness: 1,
                          ),
                          const SizedBox(
                            height: 8,
                          ),
                          Row(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              const AppImage.asset(
                                asset: 'ic_collaborator',
                                width: 24,
                                height: 24,
                                color: UIColors.grayText,
                              ),
                              const SizedBox(
                                width: 8,
                              ),
                              Text(
                                'Đối tượng:',
                                style: UITextStyle.regular.copyWith(
                                  fontSize: 13,
                                  color: UIColors.grayText,
                                ),
                              ),
                              const SizedBox(
                                width: 8,
                              ),
                              Expanded(
                                child: Text(
                                  appliedUser,
                                  style: UITextStyle.semiBold.copyWith(
                                    color: UIColors.boolText,
                                  ),
                                  maxLines: 2,
                                ),
                              ),
                            ],
                          ),
                          const SizedBox(
                            height: 8,
                          ),
                          Row(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              const AppImage.asset(
                                asset: 'ic_clock_outline',
                                width: 24,
                                height: 24,
                                color: UIColors.grayText,
                              ),
                              const SizedBox(
                                width: 8,
                              ),
                              Text(
                                'Thời gian:',
                                style: UITextStyle.regular.copyWith(
                                  fontSize: 13,
                                  color: UIColors.grayText,
                                ),
                              ),
                              const SizedBox(
                                width: 8,
                              ),
                              Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    timeEnd.contains(timeStart) ? timeEnd : '$timeStart - $timeEnd',
                                    style: UITextStyle.semiBold.copyWith(
                                      color: UIColors.boolText,
                                    ),
                                  ),
                                  Text(
                                    'Hết hạn sau ${data?.formatRemain() ?? ""}',
                                    style: UITextStyle.semiBold.copyWith(
                                      fontSize: 12,
                                      color: UIColors.red,
                                    ),
                                  )
                                ],
                              ),
                            ],
                          ),
                          const SizedBox(
                            height: 8,
                          ),
                          // Row(
                          //   crossAxisAlignment: CrossAxisAlignment.start,
                          //   children: [
                          //     const AppImage.asset(
                          //       asset: 'ic_document_outline',
                          //       width: 24,
                          //       height: 24,
                          //       color: UIColors.grayText,
                          //     ),
                          //     const SizedBox(
                          //       width: 8,
                          //     ),
                          //     Row(
                          //       children: [
                          //         Text(
                          //           'Số lượng đơn hàng áp dụng:',
                          //           style: UITextStyle.regular.copyWith(
                          //             fontSize: 13,
                          //             color: UIColors.grayText,
                          //           ),
                          //         ),
                          //         const SizedBox(
                          //           width: 8,
                          //         ),
                          //         Text(
                          //           '${data?.orderQuantityAvailable ?? 0} đơn',
                          //           style: UITextStyle.semiBold.copyWith(
                          //             color: UIColors.boolText,
                          //           ),
                          //         ),
                          //       ],
                          //     ),
                          //   ],
                          // ),
                          // if (limit)
                          //   Padding(
                          //     padding: const EdgeInsets.only(left: 32),
                          //     child: PromotionPercentBar(
                          //       height: 16,
                          //       percent: percent,
                          //       radius: const Radius.circular(8),
                          //       title: 'Đã dùng ${FormatUtil.doubleFormat(percent * 100)}%',
                          //     ),
                          //   ),
                        ],
                      ),
                    ),
                    const SizedBox(
                      height: 20,
                    ),
                    Padding(
                      padding: const EdgeInsets.symmetric(horizontal: 16),
                      child: Text(
                        'Thể lệ chương trình',
                        style: UITextStyle.semiBold.copyWith(
                          color: UIColors.grayText,
                        ),
                      ),
                    ),
                    const SizedBox(
                      height: 8,
                    ),
                    Container(
                      margin: const EdgeInsets.symmetric(horizontal: 16),
                      padding: const EdgeInsets.all(16),
                      decoration: BoxDecoration(
                        color: UIColors.white,
                        borderRadius: BorderRadius.circular(8),
                      ),
                      child: HtmlWidget.raw(
                        data: description,
                      ),
                    ),
                  ],
                ),
                Positioned(
                  bottom: 0,
                  left: 0,
                  right: 0,
                  child: Visibility(
                    visible: showApplyButton,
                    child: Container(
                      color: UIColors.white,
                      width: double.infinity,
                      padding: EdgeInsets.only(
                        top: 12,
                        bottom: AppSize.instance.safeBottomBarHeight + 8,
                        left: 16,
                        right: 16,
                      ),
                      child: PrimaryButton(
                        onPressed: () {
                          context.popRoute(true);
                        },
                        title: 'Dùng ngay',
                        height: 48,
                        radius: 8,
                        width: double.infinity,
                      ),
                    ),
                  ),
                ),
              ],
            ),
          );
        },
      ),
    );
  }
}
