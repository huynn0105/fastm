import 'dart:math';

import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/empty_widget.dart';
import 'package:flutter_module/common/widgets/loading.dart';
import 'package:flutter_module/features/mtrade/cubit/search/mtrade_search_cubit.dart';
import 'package:slivers/slivers.dart';

import '../../../../../common/widgets/buttons.dart';

class SearchComponent extends StatelessWidget {
  const SearchComponent({
    Key? key,
    required this.onSubmit,
  }) : super(key: key);

  final Function(String value) onSubmit;

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      height: 206,
      child: BlocBuilder<MTradeSearchCubit, MTradeSearchState>(
        builder: (context, state) {
          if (state.status.isInitial) {
            return const SizedBox();
          }
          if (state.status.isLoading) {
            return const LoadingWidget();
          }

          final data = state.suggestions.take(4).toList();
          if (data.isEmpty && !state.status.showLoading) {
            return const EmptyWidget();
          }

          return Column(
            children: List.generate(
              max(0, data.length * 2 - 1),
              (index) {
                if (index.isOdd) {
                  return const Divider(
                    color: UIColors.white,
                    height: 0,
                    thickness: 2,
                    indent: 16,
                    endIndent: 16,
                  );
                }
                index = index ~/ 2;
                return SplashButton(
                  onTap: () {
                    onSubmit(state.suggestions[index]);
                  },
                  child: Container(
                    height: 50,
                    alignment: Alignment.centerLeft,
                    padding: const EdgeInsets.symmetric(horizontal: 16),
                    child: Text(
                      state.suggestions[index],
                      style: UITextStyle.medium.copyWith(
                        fontSize: 16,
                      ),
                      maxLines: 1,
                      overflow: TextOverflow.ellipsis,
                    ),
                  ),
                );
              },
            ),
          );
        },
      ),
    );
  }
}
