import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/widgets/widget_layout.dart';
import 'package:flutter_module/features/mtrade/cubit/hot_product/mtrade_hot_product_cubit.dart';

import '../../../../app_data.dart';
import '../../../../common/constants.dart';
import '../../../../common/utils/redirect_util.dart';
import '../../../../common/widgets/app_scaffold.dart';
import '../../../../common/widgets/appbar.dart';
import '../../../../routes/routes.gr.dart';
import '../../cubit/search/mtrade_search_cubit.dart';
import 'components/recommend_component.dart';
import 'components/search_bar_component.dart';
import 'components/search_component.dart';

@RoutePage()
class MTradeSearchPage extends StatefulWidget implements AutoRouteWrapper {
  const MTradeSearchPage({
    Key? key,
    this.query,
    this.forceRouterPop = false,
    @QueryParam("pageID") this.pageID,
    @QueryParam("provinceCode") this.provinceCode,
    @QueryParam("districtCode") this.districtCode,
  }) : super(key: key);

  final String? query;
  final bool forceRouterPop;
  final String? pageID;
  final String? provinceCode;
  final String? districtCode;

  @override
  Widget wrappedRoute(BuildContext context) {
    return MultiBlocProvider(
      providers: [
        BlocProvider(
          create: (_) => MTradeSearchCubit(),
        ),
        BlocProvider(
          create: (_) => MTradeHotProductCubit(),
        ),
      ],
      child: this,
    );
  }

  @override
  State<MTradeSearchPage> createState() => _MTradeSearchPageState();
}

class _MTradeSearchPageState extends State<MTradeSearchPage> {
  late final TextEditingController searchController;

  @override
  void initState() {
    super.initState();
    searchController = TextEditingController(
      text: widget.query ?? "",
    );
    WidgetsBinding.instance.addPostFrameCallback((_) {
      context.read<MTradeSearchCubit>().fetchData(query: widget.query ?? "");
    });
  }

  @override
  void dispose() {
    searchController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return AppScaffold(
      appBar: MFastAdvanceAppBar(
        context: context,
        title: "Bán hàng trả chậm",
        onHome: () {
          RedirectUtil.backToMFast();
        },
      ),
      body: WidgetLayout(
        child: Column(
          children: [
            SearchBarComponent(
              controller: searchController,
              onSubmit: onSubmit,
            ),
            Expanded(
              child: ListView(
                physics: AppConstants.physics,
                padding: EdgeInsets.zero,
                children: [
                  SearchComponent(
                    onSubmit: onSubmit,
                  ),
                  const RecommendComponent(),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  onSubmit(String value) {
    if (widget.forceRouterPop) {
      context.popRoute(value);
    } else {
      context.replaceRoute(MTradeSearchedProductRoute(
        query: value,
        pageID: AppData.instance.landingPageID,
        provinceCode: AppData.instance.landingPageProvinceCode,
        districtCode: AppData.instance.landingPageDistrictCode,
      ));
    }
  }
}
