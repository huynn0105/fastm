import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/enum/mtrade/product_detail_type.dart';
import 'package:flutter_module/features/mtrade/cubit/product_detail/mtrade_product_detail_cubit.dart';
import 'package:flutter_module/features/mtrade/page/product_detail/components/product_payment_component.dart';
import 'package:flutter_module/models/mtrade/product_detail/mtrade_product_detail_model.dart';

class RenderProductPaymentComponent extends StatelessWidget {
  const RenderProductPaymentComponent({
    super.key,
    required this.productCode,
    required this.product,
    required this.type,
    required this.pageID,
    required this.onAddCart,
    required this.onPayNow,
    required this.onPayLater,
    required this.onAddPayNowForm,
  });

  final String? productCode;
  final MTradeProductDetailModel? product;
  final MTradeProductDetailType type;
  final String? pageID;
  final Function() onAddCart;
  final Function() onPayNow;
  final Function() onPayLater;
  final Function() onAddPayNowForm;

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<MTradeProductDetailCubit, MTradeProductDetailState>(
      builder: (context, state) {
        final product = state.product;
        final isEmpty = product == null && !state.status.showLoading;
        final skuDetail = state.skuDetail;
        final productDelivery = state.supportLocation?.delivery;
        final productDeliveryPayNow = state.supportLocation?.productPaymentMethod?.payNow == true;
        final productDeliveryPayLater = state.supportLocation?.productPaymentMethod?.payLater == true;
        final productInvalid = product?.productInvalid == true;
        final productOutOfStock = product?.productOutOfStock == true && !(productDelivery?.isPreOrder() == true);
        final enabledCart = state.enabledPayment && skuDetail != null;
        final enabledPayNow = state.enabledPayment &&
            skuDetail?.payNow?.comm != null &&
            productDeliveryPayNow;
        final enabledPayLater = state.enabledPayment &&
            skuDetail?.payLater?.comm != null &&
            productDeliveryPayLater;

        ///
        return ProductPaymentComponent(
          isEmpty: isEmpty,
          showLoading: state.status.showLoading || state.supportLocationStatus.showLoading,
          type: type,
          productInvalid: productInvalid,
          productOutOfStock: productOutOfStock,
          enabledCart: enabledCart,
          enabledPayNow: enabledPayNow,
          enabledPayLater: enabledPayLater,
          onAddCart: onAddCart,
          onPayNow: onPayNow,
          onPayLater: onPayLater,
          onAddPayNowForm: onAddPayNowForm,
        );
      },
    );
  }
}
