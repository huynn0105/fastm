import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:photo_view/photo_view.dart';
import 'package:photo_view/photo_view_gallery.dart';

import '../../../../../common/styles.dart';
import '../../../../../common/colors.dart';
import '../../../../../common/widgets/buttons.dart';
import '../../../../../common/widgets/images.dart';

class ProductImagePreviewComponent extends StatefulWidget {
  const ProductImagePreviewComponent({
    Key? key,
    required this.images,
    this.initialIndex = 0,
  }) : super(key: key);

  final int initialIndex;
  final List<String> images;

  @override
  State<ProductImagePreviewComponent> createState() => _ProductImagePreviewComponentState();
}

class _ProductImagePreviewComponentState extends State<ProductImagePreviewComponent> {
  int currentIndex = 0;
  late final PageController pageController;

  @override
  void initState() {
    super.initState();
    currentIndex = widget.initialIndex;
    pageController = PageController(initialPage: currentIndex);
  }

  @override
  void dispose() {
    pageController.dispose();
    SystemChrome.setSystemUIOverlayStyle(const SystemUiOverlayStyle(
      statusBarColor: Colors.transparent,
      statusBarIconBrightness: Brightness.dark,
      statusBarBrightness: Brightness.light,
    ));
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: UIColors.blurBackground,
      appBar: AppBar(
        elevation: 0,
        backgroundColor: UIColors.blurBackground,
        centerTitle: true,
        leading: SplashButton(
          onTap: Navigator.of(context).pop,
          borderRadius: BorderRadius.circular(50),
          child: Container(
            padding: const EdgeInsets.all(10),
            alignment: Alignment.center,
            child: const AppImage.asset(
              asset: "ic_arrow_left",
              width: 24,
              height: 24,
              color: UIColors.white,
            ),
          ),
        ),
        title: Text(
          "${currentIndex + 1}/${widget.images.length}",
          style: UITextStyle.regular.copyWith(
            color: UIColors.white,
          ),
        ),
      ),
      body: PhotoViewGallery.builder(
        pageController: pageController,
        scrollPhysics: const ClampingScrollPhysics(),
        builder: (BuildContext context, int index) {
          return PhotoViewGalleryPageOptions(
            imageProvider: NetworkImage(widget.images[index]),
            initialScale: PhotoViewComputedScale.contained,
            minScale: PhotoViewComputedScale.contained,
            maxScale: 2.0,
          );
        },
        backgroundDecoration: const BoxDecoration(
          color: UIColors.blurBackground,
        ),
        itemCount: widget.images.length,
        loadingBuilder: (context, _) => const SizedBox(),
        onPageChanged: (index) {
          setState(() {
            currentIndex = index;
          });
        },
      ),
    );
  }
}
