import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/utils/format_util.dart';
import 'package:flutter_module/features/mtrade/cubit/product_pay_later_info/mtrade_product_pay_later_info_cubit.dart';
import 'package:flutter_module/common/widgets/app_switcher_widget.dart';
import 'package:flutter_module/features/mtrade/page/product_detail/widgets/shimmer_loading.dart';

import '../../../../../common/colors.dart';
import '../../../../../common/constants.dart';
import '../../../../../common/enum/mtrade/product_detail_type.dart';
import '../../../../../common/styles.dart';
import '../widgets/cart_button.dart';
import '../widgets/shopping_button.dart';

class ProductPaymentComponent extends StatelessWidget {
  const ProductPaymentComponent({
    Key? key,
    required this.showLoading,
    required this.type,
    required this.productInvalid,
    required this.productOutOfStock,
    required this.enabledCart,
    required this.enabledPayNow,
    required this.enabledPayLater,
    required this.isEmpty,
    required this.onAddCart,
    required this.onPayNow,
    required this.onPayLater,
    required this.onAddPayNowForm,
  }) : super(key: key);

  final bool showLoading;
  final MTradeProductDetailType type;
  final bool productInvalid;
  final bool productOutOfStock;
  final bool enabledCart;
  final bool enabledPayNow;
  final bool enabledPayLater;
  final bool isEmpty;
  final Function() onAddCart;
  final Function() onPayNow;
  final Function() onPayLater;
  final Function() onAddPayNowForm;

  @override
  Widget build(BuildContext context) {
    return AnimatedCrossFade(
      duration: const Duration(milliseconds: 500),
      crossFadeState: showLoading ? CrossFadeState.showFirst : CrossFadeState.showSecond,
      firstChild: const ShimmerLoading(
        height: 48,
      ),
      secondChild: AppSwitcherWidget(
        showFirst: isEmpty,
        firstChild: const SizedBox(),
        secondChild: SizedBox(
          height: 48,
          child: AppSwitcherWidget(
            showFirst: productInvalid || productOutOfStock,
            firstChild: Container(
              color: UIColors.darkGray,
              alignment: Alignment.center,
              child: Text(
                productInvalid ? "Sản phẩm đang tạm ngưng bán" : "Sản phẩm đang tạm hết hàng",
                style: UITextStyle.medium.copyWith(
                  fontSize: 16,
                  color: UIColors.white,
                ),
              ),
            ),
            secondChild: Row(
              children: [
                if (type.isSuggestedProductFromDetail)
                  Expanded(
                    child: ShoppingButton(
                      title: "Thêm vào giỏ hàng",
                      enabled: enabledCart,
                      backgroundColor: UIColors.primaryColor,
                      disableBackgroundColor: UIColors.gray,
                      onTap: onAddCart,
                    ),
                  )
                else if (type.isSuggestedProductFromPayNowOrder)
                  Expanded(
                    child: ShoppingButton(
                      title: "Thêm vào đơn hàng trả ngay",
                      enabled: enabledPayNow,
                      backgroundColor: UIColors.primaryColor,
                      disableBackgroundColor: UIColors.gray,
                      onTap: onAddPayNowForm,
                    ),
                  )
                else if (type.isProduct) ...[
                  if (!kIsWeb)
                    CartButton(
                      enabled: enabledCart,
                      onTap: onAddCart,
                    ),
                  Expanded(
                    child: ShoppingButton.payNow(
                      enabled: enabledPayNow,
                      onTap: onPayNow,
                    ),
                  ),
                  Expanded(
                    child: BlocBuilder<MTradeProductPayLaterInfoCubit, MTradeProductPayLaterInfoState>(
                      builder: (context, state) {
                        final value = state.data?.emiExpected == null
                            ? null
                            : "Từ ${FormatUtil.currencyDoubleFormat(state.data?.emiExpected)}/tháng";
                        return ShoppingButton.payLater(
                          enabled: enabledPayLater,
                          onTap: onPayLater,
                          subtitle: value,
                        );
                      },
                    ),
                  ),
                ],
              ],
            ),
          ),
        ),
      ),
    );
  }
}
