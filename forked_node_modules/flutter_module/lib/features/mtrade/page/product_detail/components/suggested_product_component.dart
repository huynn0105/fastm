import 'dart:math';

import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/features/mtrade/cubit/suggested_product/mtrade_suggested_product_cubit.dart';
import '../../../../../common/colors.dart';
import '../../../../../common/constants.dart';
import '../../../../../common/enum/mtrade/product_detail_type.dart';
import '../../../../../common/size.dart';
import '../../../../../common/styles.dart';
import '../../../../../common/widgets/separated_widget.dart';
import '../../../../../models/mtrade/cart/mtrade_cart_product_model.dart';
import '../../../../../models/mtrade/product/mtrade_product_model.dart';
import '../../../../../services/local/mock/mock_mtrade_product.dart';

import '../items/suggested_product_item.dart';

class SuggestedProductComponent extends StatelessWidget {
  const SuggestedProductComponent({
    Key? key,
    required this.productCodes,
    this.forceFetchData = true,
    this.type = MTradeProductDetailType.suggestedProductFromDetail,
    this.onSuccess,
  }) : super(key: key);

  final List<String> productCodes;
  final MTradeProductDetailType type;
  final Function(MTradeCartProductModel data)? onSuccess;
  final bool forceFetchData;

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<MTradeSuggestedProductCubit, MTradeSuggestedProductState>(
      builder: (context, state) {
        if (state.status.isInitial && forceFetchData) {
          WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
            context.read<MTradeSuggestedProductCubit>().fetchData(productCodes);
          });
        }

        if (state.products.isEmpty) {
          return const SizedBox();
        }

        final data = state.products.take(10).toList();
        return Container(
          color: UIColors.background,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Padding(
                padding: const EdgeInsets.fromLTRB(16, 16, 16, 12),
                child: Text(
                  "Sản phẩm liên quan có thể bán kèm",
                  style: UITextStyle.semiBold.copyWith(
                    fontSize: 16,
                    color: UIColors.grayText,
                  ),
                ),
              ),
              SingleChildScrollView(
                physics: AppConstants.physics,
                scrollDirection: Axis.horizontal,
                padding: const EdgeInsets.symmetric(horizontal: 16),
                child: Container(
                  constraints: BoxConstraints(
                    minWidth: AppSize.instance.width - 32,
                  ),
                  child: IntrinsicHeight(
                    child: SeparatedRow(
                      crossAxisAlignment: CrossAxisAlignment.stretch,
                      separatorBuilder: (_, __) => const SizedBox(
                        width: 12,
                      ),
                      children: List.generate(
                        data.length,
                        (index) {
                          return SuggestedProductItem(
                            index: index,
                            type: type,
                            data: data[index],
                            onSuccess: onSuccess,
                          );
                        },
                      ),
                    ),
                  ),
                ),
              ),
              const SizedBox(
                height: 16,
              ),
            ],
          ),
        );
      },
    );
  }
}
