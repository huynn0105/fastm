import 'package:flutter/material.dart';

import '../../../../../common/size.dart';

class ContactMethodFlowDelegate extends FlowDelegate {
  ContactMethodFlowDelegate({
    required this.animation,
  }) : super(repaint: animation);

  final Animation<double> animation;

  @override
  void paintChildren(FlowPaintingContext context) {
    Size size = context.size;
    AppSize appSize = AppSize.instance;
    Size buttonSize = const Size.square(56);
    double xStart = size.width - buttonSize.width;
    double yStart = size.height - buttonSize.height - appSize.bottomBarHeight;
    double margin = 12;

    ///
    for (int i = context.childCount - 1; i >= 0; i--) {
      Size childSize = context.getChildSize(i) ?? Size.zero;
      double dy = (childSize.height + margin) * i;
      double x = xStart;
      double y = yStart - dy * animation.value;
      context.paintChild(
        i,
        transform: Matrix4.translationValues(x, y, 0),
      );
    }
  }

  @override
  bool shouldRepaint(ContactMethodFlowDelegate oldDelegate) {
    return animation != oldDelegate.animation;
  }
}
