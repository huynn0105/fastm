import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/dialogs/dialog_provider.dart';
import 'package:flutter_module/common/toast/toast_provider.dart';
import 'package:flutter_module/common/widgets/loading.dart';
import 'package:flutter_module/features/mtrade/cubit/personal_website_setup/mtrade_personal_website_setup_cubit.dart';
import 'package:flutter_module/features/mtrade/page/personal_website_setup/components/setup_component.dart';
import 'package:flutter_module/features/mtrade/page/personal_website_setup/components/user_guide_component.dart';
import 'package:flutter_module/features/mtrade/page/personal_website_setup/components/website_component.dart';

@RoutePage()
class MTradePersonalWebsiteSetupPage extends StatefulWidget {
  const MTradePersonalWebsiteSetupPage({
    super.key,
    @QueryParam("source") this.source,
  });

  final String? source;

  @override
  State<MTradePersonalWebsiteSetupPage> createState() => _MTradePersonalWebsiteSetupPageState();
}

class _MTradePersonalWebsiteSetupPageState extends State<MTradePersonalWebsiteSetupPage> {
  @override
  void initState() {
    super.initState();
    _onInit(context);
  }

  @override
  Widget build(BuildContext context) {
    return BlocConsumer<MTradePersonalWebsiteSetupCubit, MTradePersonalWebsiteSetupState>(
      listener: (context, state) {
        if (state.statusSave.isSuccess) {
          ToastProvider.instance.show(
            context: context,
            message: "Thành công",
            backgroundColor: UIColors.green,
          );
        } else if (state.statusSave.isFailure) {
          DialogProvider.instance.showMTradeErrorDialog(
            context: context,
            title: "Thất bại",
            message: state.errorMessage,
          );
        }
      },
      builder: (context, state) {
        return Stack(
          children: [
            Positioned.fill(
              child: ListView(
                padding: const EdgeInsets.only(bottom: 100),
                children: [
                  WebsiteComponent(
                    title: "Website bán hàng của bạn",
                    showSetup: false,
                    data: state.data,
                    showTopSizedBox: false,
                  ),
                  const SizedBox(
                    height: 14,
                  ),
                  SetupComponent(
                    data: state.data,
                  ),
                  const SizedBox(
                    height: 32,
                  ),
                  const UserGuideComponent(),
                ],
              ),
            ),
            if (state.status.isLoading || state.statusSave.isLoading) const LoadingWidget.dark(),
          ],
        );
      },
    );
  }

  void _onInit(BuildContext context) {
    WidgetsBinding.instance.addPostFrameCallback((_) {
      final cubit = context.read<MTradePersonalWebsiteSetupCubit>();
      cubit.updateSource(source: widget.source);

      ///
      if (!cubit.state.status.isSuccess) {
        cubit.fetchData();
      }
    });
  }
}
