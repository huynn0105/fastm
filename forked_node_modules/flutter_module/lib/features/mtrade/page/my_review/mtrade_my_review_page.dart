import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/utils/redirect_util.dart';
import 'package:flutter_module/common/utils/text_util.dart';
import 'package:flutter_module/common/widgets/appbar.dart';
import 'package:flutter_module/common/widgets/loadmore_widget.dart';
import 'package:flutter_module/features/mtrade/cubit/my_review/mtrade_my_review_cubit.dart';
import 'package:flutter_module/features/mtrade/page/my_review/components/detail_rating_component.dart';
import 'package:flutter_module/features/mtrade/page/my_review/components/overall_rating_component.dart';

@RoutePage()
class MTradeMyReviewPage extends StatelessWidget implements AutoRouteWrapper {
  const MTradeMyReviewPage({super.key});

  @override
  Widget wrappedRoute(BuildContext context) {
    return BlocProvider(
      create: (context) => MyReviewCubit(),
      child: this,
    );
  }

  @override
  Widget build(BuildContext context) {
    return WillPopScope(
      onWillPop: () async {
        if (!context.router.canPop()) {
          RedirectUtil.backToMFast();
          return false;
        }
        return true;
      },
      child: Scaffold(
        appBar: MFastAdvanceAppBar(
          context: context,
          title: 'Đánh giá về bạn',
          onBack: context.popRoute,
          onHome: RedirectUtil.backToMFast,
        ),
        body: BlocBuilder<MyReviewCubit, MyReviewState>(
          builder: (context, state) {
            return LoadMoreWidget(
              onRefresh: () {
                return _onRefresh(context);
              },
              onLoadMore: () {
                return _onLoadMore(context);
              },
              child: ListView(
                children: [
                  OverallRatingComponent(
                    amount: TextUtils.parseInt(state.sumary?.rateCount) ?? 0,
                    avg: TextUtils.parseDouble(state.sumary?.averageRate) ?? 0,
                    percent: state.sumary?.rateList,
                  ),
                  const DetailRatingComponent(),
                ],
              ),
            );
          },
        ),
      ),
    );
  }

  _onRefresh(BuildContext context) {
    final cubit = context.read<MyReviewCubit>();
    cubit.updatePayload(
      filters: <String, String>{},
      page: 1,
    );
    return cubit.fetchData();
  }

  _onLoadMore(BuildContext context) {
    final cubit = context.read<MyReviewCubit>();
    return cubit.fetchData(loadmore: true, showLoading: false);
  }
}
