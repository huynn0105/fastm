import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/models/mtrade/product_detail/comm_model.dart';

class DiscountTag extends StatelessWidget {
  const DiscountTag({
    Key? key,
    required this.data,
  }) : super(key: key);

  final ValueModel? data;

  @override
  Widget build(BuildContext context) {
    return Container(
      width: 42,
      height: 45,
      alignment: Alignment.center,
      child: Stack(
        fit: StackFit.expand,
        children: [
          const Positioned.fill(
            child: AppImage.asset(
              asset: 'ic_mtrade_price_tag',
              width: 42,
              height: 45,
            ),
          ),
          Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text(
                data?.getValue() ?? "",
                style: UITextStyle.bold.copyWith(
                  fontSize: 14,
                  height: 1,
                  color: UIColors.yellow,
                ),
              ),
              const SizedBox(
                height: 1,
              ),
              Text(
                "rẻ hơn",
                style: UITextStyle.semiBold.copyWith(
                  fontSize: 12,
                  height: 1,
                  color: UIColors.lightRed,
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }
}

// class ComparePriceCustomPaint extends CustomPainter {
//   const ComparePriceCustomPaint({
//     this.backgroundColor = UIColors.lightBlue,
//     this.gap = 8.0,
//   });
//
//   final Color backgroundColor;
//   final double gap;
//
//   @override
//   void paint(Canvas canvas, Size size) {
//     double w = size.width;
//     double h = size.height;
//     double space = gap;
//
//     Paint paint = Paint()
//       ..style = PaintingStyle.fill
//       ..color = backgroundColor;
//
//     Path path = Path()
//       ..lineTo(0, h)
//       ..lineTo(w / 2, h - space)
//       ..lineTo(w, h)
//       ..lineTo(w, 0)
//       ..lineTo(0, 0)
//       ..close();
//
//     canvas.drawPath(path, paint);
//   }
//
//   @override
//   bool shouldRepaint(covariant CustomPainter oldDelegate) {
//     return false;
//   }
// }
