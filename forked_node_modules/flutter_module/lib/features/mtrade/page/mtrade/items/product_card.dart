import 'package:auto_route/auto_route.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:flutter_module/common/extension/list_extension.dart';
import 'package:flutter_module/features/mtrade/page/mtrade/items/product_tag.dart';
import 'package:flutter_module/features/mtrade/page/mtrade/items/promotion_product_tag.dart';
import '../../../../../app_data.dart';
import '../../../../../models/mtrade/product/mtrade_product_model.dart';
import '../../../../../models/mtrade/product_detail/mtrade_product_detail_model.dart';
import 'discount_tag.dart';
import '../../../../../routes/routes.gr.dart';

import '../../../../../common/colors.dart';
import '../../../../../common/enum/mtrade/payment_type.dart';
import '../../../../../common/styles.dart';
import '../../../../../common/utils/format_util.dart';
import '../../../../../common/widgets/buttons.dart';
import '../../../../../common/widgets/images.dart';

class ProductCard extends StatelessWidget {
  const ProductCard.normal({
    Key? key,
    required this.data,
    this.width = 171,
    this.height = 280,
    this.isIntrinsicHeight = false,
    this.showComparePrice = false,
    this.showComparePercent = true,
  })  : isNormal = true,
        super(key: key);

  const ProductCard.small({
    Key? key,
    required this.data,
    this.width = 135,
    this.height = 188,
    this.isIntrinsicHeight = false,
    this.showComparePrice = false,
    this.showComparePercent = true,
  })  : isNormal = false,
        super(key: key);

  final double width;
  final double height;
  final bool isNormal;
  final bool isIntrinsicHeight;
  final bool showComparePrice;
  final bool showComparePercent;
  final MTradeProductModel data;

  @override
  Widget build(BuildContext context) {
    final code = data.code ?? "";
    final title = data.name ?? "";
    final image = data.image ?? "";
    final price = data.price ?? 0;
    final comparePrice = data.comparePrice ?? [];
    final bonus = data.comm ?? 0;
    final currency = data.currency ?? "";
    final paymentTypes = data.paymentMethod?.convertPaymentType() ?? [];
    final highlight = data.highlight ?? false;
    final hideComm = data.hideComm ?? false;
    final hideMessage = data.hideMessage ?? "";
    final promotion = data.promotion;
    final showMTradeTag = data.mfastShipping ?? false;
    final showPromotionTag = promotion != null;
    final showPayLaterTag = paymentTypes.contains(MTradePaymentType.later);
    final showComparePriceTag = showComparePercent && comparePrice.valueAt(1)?.value != null;

    ///
    return SplashButton(
      onTap: () {
        context.router.push(MTradeProductDetailRoute(
          productCode: code,
          product: MTradeProductDetailModel.fromProduct(data),
          pageID: AppData.instance.landingPageID,
          provinceCode: AppData.instance.landingPageProvinceCode,
          districtCode: AppData.instance.landingPageDistrictCode,
        ));
      },
      borderRadius: BorderRadius.circular(8),
      child: Container(
        width: width,
        height: isIntrinsicHeight ? null : height,
        clipBehavior: Clip.antiAlias,
        decoration: BoxDecoration(
          color: UIColors.white,
          borderRadius: BorderRadius.circular(8),
        ),
        child: Stack(
          children: [
            Visibility(
              visible: highlight,
              child: Positioned(
                left: 0,
                right: 0,
                bottom: 0,
                child: Container(
                  height: 60,
                  width: double.infinity,
                  alignment: Alignment.centerLeft,
                  padding: const EdgeInsets.symmetric(vertical: 5, horizontal: 12),
                  decoration: const BoxDecoration(
                    gradient: LinearGradient(
                      colors: UIColors.mtradeHighlightGradient,
                      stops: [0, 1],
                      begin: Alignment(-0.0, -1.0),
                      end: Alignment(0.0, 1.0),
                    ),
                  ),
                ),
              ),
            ),
            Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                SizedBox(
                  width: width,
                  height: isNormal ? 171 : 100,
                  child: Stack(
                    children: [
                      AppImage.network(
                        url: image,
                        width: width,
                        height: isNormal ? 171 : 100,
                        borderRadius: BorderRadius.only(
                          topRight: showComparePriceTag ? const Radius.circular(8) : Radius.zero,
                        ),
                      ),
                      if (data.productIcon?.isNotEmpty == true)
                        Positioned(
                          left: 0,
                          right: 0,
                          bottom: 0,
                          child: SingleChildScrollView(
                            scrollDirection: Axis.horizontal,
                            physics: const NeverScrollableScrollPhysics(),
                            child: Row(
                              children: data.productIcon!.map((e) {
                                return AppImage.network(url: e, width: 38, height: 40, fit: BoxFit.contain);
                              }).toList(),
                              // children: [
                              //   if (showPromotionTag) const ProductTag.promotion(),
                              //   if (showPayLaterTag) const ProductTag.paylater(),
                              //   if (showMTradeTag) const ProductTag.mtrade(),
                              // ],
                            ),
                          ),
                        ),
                    ],
                  ),
                ),
                const SizedBox(
                  height: 12,
                ),
                Padding(
                  padding: const EdgeInsets.symmetric(horizontal: 12),
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text(
                        title,
                        style: UITextStyle.medium.copyWith(
                          fontSize: 14,
                          height: 1.25,
                        ),
                        maxLines: isNormal ? 2 : 1,
                        overflow: TextOverflow.ellipsis,
                      ),
                      const SizedBox(
                        height: 4,
                      ),
                      Row(
                        children: [
                          Expanded(
                            child: Wrap(
                              spacing: 4,
                              alignment: WrapAlignment.spaceBetween,
                              crossAxisAlignment: WrapCrossAlignment.center,
                              children: [
                                Column(
                                  mainAxisSize: MainAxisSize.min,
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: [
                                    Text(
                                      FormatUtil.currencyFormat(price),
                                      style: UITextStyle.semiBold.copyWith(
                                        color: UIColors.red,
                                        fontSize: 14,
                                        height: 1.25,
                                      ),
                                      maxLines: 1,
                                      overflow: TextOverflow.ellipsis,
                                    ),
                                    if (showComparePrice && comparePrice.isNotEmpty)
                                      Text(
                                        comparePrice.valueAt(0)?.getValue() ?? "",
                                        style: UITextStyle.regular.copyWith(
                                          color: UIColors.grayText,
                                          fontSize: 13,
                                          height: 1.25,
                                          decoration: TextDecoration.lineThrough,
                                        ),
                                        maxLines: 1,
                                        overflow: TextOverflow.ellipsis,
                                      ),
                                  ],
                                ),
                                if (isNormal && bonus > 0 && !hideComm && !kIsWeb)
                                  Row(
                                    mainAxisSize: MainAxisSize.min,
                                    children: [
                                      const AppImage.asset(
                                        asset: "ic_bonus",
                                        width: 16,
                                        height: 16,
                                      ),
                                      Flexible(
                                        child: Text(
                                          "${FormatUtil.doubleFormat(bonus)}$currency",
                                          style: UITextStyle.semiBold.copyWith(
                                            color: UIColors.accentGreen,
                                            fontSize: 14,
                                            height: 1.25,
                                          ),
                                          maxLines: 1,
                                          overflow: TextOverflow.ellipsis,
                                        ),
                                      ),
                                    ],
                                  ),
                                if (hideComm && !kIsWeb)
                                  Text(
                                    hideMessage,
                                    style: UITextStyle.semiBold.copyWith(
                                      color: UIColors.accentGreen,
                                      fontSize: 14,
                                      height: 1.25,
                                    ),
                                    maxLines: 1,
                                    overflow: TextOverflow.ellipsis,
                                  ),
                              ],
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                ),
                if (showPromotionTag) ...[
                  const SizedBox(
                    height: 6,
                  ),
                  Padding(
                    padding: const EdgeInsets.symmetric(horizontal: 12),
                    child: PromotionProductTag(
                      prefix: "Giảm",
                      data: data.getPromotionUnitCurrency(),
                    ),
                  ),
                ],
                if (!isNormal) ...[
                  const SizedBox(
                    height: 12,
                  ),
                ],
              ],
            ),
            if (showComparePriceTag)
              Align(
                alignment: Alignment.topRight,
                child: DiscountTag(
                  data: comparePrice.valueAt(1),
                ),
              ),
          ],
        ),
      ),
    );
  }
}
