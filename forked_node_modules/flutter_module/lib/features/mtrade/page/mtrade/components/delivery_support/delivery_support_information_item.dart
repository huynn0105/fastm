import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:text_scroll/text_scroll.dart';
import '../../../../../../common/styles.dart';
import '../../../../../../common/widgets/images.dart';
import '../../../../cubit/delivery_support/mtrade_delivery_support_cubit.dart';
import '../../../../../../common/colors.dart';
import '../../../../../../common/widgets/buttons.dart';
import 'delivery_support_mixin.dart';

class DeliverySupportInformationItem extends StatelessWidget with DeliverySupportMixin {
  const DeliverySupportInformationItem({
    Key? key,
    this.hasError = false,
  }) : super(key: key);

  final bool hasError;

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<MTradeDeliverySupportCubit, MTradeDeliverySupportState>(
      builder: (context, state) {
        if (state.provinceStatus.isInitial) {
          context.read<MTradeDeliverySupportCubit>().fetchDataFromLocal();
        }
        final province = state.selectedProvince;
        final district = state.selectedDistrict;
        final ward = state.selectedWard;
        final isSelected = province != null && district != null;
        final assets = isSelected ? "ic_location_selected" : "ic_location_outline";
        String address = province?.name ?? '';
        if (district != null) {
          address = '$address - ${district.name ?? ''}';
        }
        if (ward != null) {
          address = '$address - ${ward.name ?? ''}';
        }
        return SplashButton(
          onTap: () {
            onShowDeliverySupportDialog(context);
          },
          child: Container(
            height: 40,
            width: double.infinity,
            padding: const EdgeInsets.symmetric(horizontal: 16),
            decoration: BoxDecoration(
              color: hasError ? UIColors.lightRed : UIColors.background,
              borderRadius: BorderRadius.circular(8),
              border: Border.all(
                color: hasError ? UIColors.red : UIColors.background,
              ),
            ),
            child: Row(
              children: [
                AppImage.asset(
                  asset: assets,
                  width: 24,
                  height: 24,
                ),
                const SizedBox(
                  width: 10,
                ),
                Expanded(
                  child: TextScroll(
                    '${!isSelected ? "Nhấn để chọn địa chỉ" : address}             ',
                    velocity: const Velocity(pixelsPerSecond: Offset(50, 0)),
                    style: UITextStyle.medium.copyWith(
                      fontSize: 16,
                      color: isSelected ? UIColors.defaultText : UIColors.grayText,
                    ),
                    pauseBetween: const Duration(milliseconds: 1000),
                    mode: TextScrollMode.endless,
                  ),
                ),
              ],
            ),
          ),
        );
      },
    );
  }
}
