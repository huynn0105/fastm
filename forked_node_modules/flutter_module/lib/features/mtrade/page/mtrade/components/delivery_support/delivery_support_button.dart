import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/features/mtrade/cubit/delivery_support/mtrade_delivery_support_cubit.dart';
import 'package:flutter_module/features/mtrade/page/mtrade/components/delivery_support/delivery_support_mixin.dart';
import 'package:flutter_module/main.dart';
import 'package:flutter_module/services/local/local_data_helper.dart';

import '../../../../../../common/colors.dart';
import '../../../../../../common/widgets/images.dart';

class MTradeDeliverySupportButton extends StatefulWidget with DeliverySupportMixin {
  const MTradeDeliverySupportButton({
    Key? key,
    this.autoShowDialog = false,
    this.onTap,
  }) : super(key: key);

  final bool autoShowDialog;
  final VoidCallback? onTap;

  @override
  State<MTradeDeliverySupportButton> createState() => _MTradeDeliverySupportButtonState();
}

class _MTradeDeliverySupportButtonState extends State<MTradeDeliverySupportButton> with DeliverySupportMixin {
  @override
  void initState() {
    super.initState();
    onAutoShowDialog(context);
  }

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<MTradeDeliverySupportCubit, MTradeDeliverySupportState>(
      builder: (context, state) {
        if (state.provinceStatus.isInitial) {
          context.read<MTradeDeliverySupportCubit>().fetchDataFromLocal();
        }

        final isSelected = state.selectedProvince != null && state.selectedDistrict != null;
        final assets = isSelected ? "ic_location_selected" : "ic_location_outline";

        return AppSplashButton(
          onTap: () {
            widget.onTap?.call();
            onShowDeliverySupportDialog(context);
          },
          child: Container(
            width: 40,
            height: 40,
            alignment: Alignment.center,
            decoration: const BoxDecoration(
              shape: BoxShape.circle,
              color: UIColors.white,
            ),
            child: AppImage.asset(
              asset: assets,
              width: 24,
              height: 24,
            ),
          ),
        );
      },
    );
  }

  onAutoShowDialog(BuildContext context) async {
    final cubit = context.read<MTradeDeliverySupportCubit>();
    final code = LocalDataHelper.instance.getDeliverySupportProvinceCode();
    if (code == null && widget.autoShowDialog && cubit.state.selectedProvince == null && cubit.state.provinceStatus.isInitial) {
      WidgetsBinding.instance.addPostFrameCallback((_) {
        Future.delayed(const Duration(milliseconds: 500), () {
          onShowDeliverySupportDialog(context);
        });
      });
    }
  }
}
