import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/features/mtrade/cubit/delivery_support/mtrade_delivery_support_cubit.dart';
import 'package:flutter_module/features/mtrade/page/mtrade/components/delivery_support/delivery_support_mixin.dart';
import 'package:flutter_module/main.dart';
import 'package:flutter_module/services/local/local_data_helper.dart';
import 'package:text_scroll/text_scroll.dart';

import '../../../../../../common/colors.dart';
import '../../../../../../common/styles.dart';
import '../../../../../../common/widgets/images.dart';

class MTradeDeliverySupportWidget extends StatefulWidget with DeliverySupportMixin {
  const MTradeDeliverySupportWidget({
    Key? key,
    this.autoShowDialog = false,
    this.onTap,
    this.collapse = false,
  }) : super(key: key);

  final bool autoShowDialog;
  final VoidCallback? onTap;
  final bool collapse;

  @override
  State<MTradeDeliverySupportWidget> createState() => _MTradeDeliverySupportWidgetState();
}

class _MTradeDeliverySupportWidgetState extends State<MTradeDeliverySupportWidget> with DeliverySupportMixin {
  @override
  void initState() {
    super.initState();
    onAutoShowDialog(context);
  }

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<MTradeDeliverySupportCubit, MTradeDeliverySupportState>(
      builder: (context, state) {
        if (state.provinceStatus.isInitial) {
          context.read<MTradeDeliverySupportCubit>().fetchDataFromLocal();
        }

        String address = state.selectedProvince?.name ?? '';
        if (state.selectedDistrict != null) {
          address = '$address - ${state.selectedDistrict?.name ?? ''}';
        }
        if (state.selectedWard != null) {
          address = '$address - ${state.selectedWard?.name ?? ''}';
        }

        final isSelected = state.selectedProvince != null &&
            state.selectedDistrict != null &&
            state.selectedWard != null &&
            widget.collapse;

        if (widget.collapse) {
          return SplashButton(
            onTap: () {
              widget.onTap?.call();
              onShowDeliverySupportDialog(context);
            },
            child: Container(
              decoration: const BoxDecoration(
                shape: BoxShape.circle,
                color: UIColors.white,
              ),
              width: 40,
              height: 40,
              child: Center(
                child: AppImage.asset(
                  asset: isSelected ? "ic_location_selected" : "ic_location_outline",
                  width: 24,
                  height: 24,
                ),
              ),
            ),
          );
        }

        return SplashButton(
          onTap: () {
            widget.onTap?.call();
            onShowDeliverySupportDialog(context);
          },
          child: Container(
            padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 8),
            decoration: BoxDecoration(
              color: UIColors.white,
              borderRadius: BorderRadius.circular(25),
            ),
            child: Row(
              children: [
                const AppImage.asset(
                  asset: "ic_location_outline",
                  width: 24,
                  height: 24,
                  color: UIColors.grayText,
                ),
                const SizedBox(
                  width: 12,
                ),
                Text(
                  'Giao đến: ',
                  style: UITextStyle.regular.copyWith(
                    color: UIColors.grayText,
                  ),
                ),
                Expanded(
                  child: TextScroll(
                    '$address             ',
                    velocity: const Velocity(pixelsPerSecond: Offset(50, 0)),
                    style: UITextStyle.semiBold.copyWith(
                      color: UIColors.boolText,
                    ),
                    pauseBetween: const Duration(milliseconds: 1000),
                    mode: TextScrollMode.endless,
                  ),
                )
              ],
            ),
          ),
        );
      },
    );
  }

  onAutoShowDialog(BuildContext context) async {
    final provinceCode = LocalDataHelper.instance.getDeliverySupportProvinceCode();
    final districtCode = LocalDataHelper.instance.getDeliverySupportDistrictCode();
    final wardCode = LocalDataHelper.instance.getDeliverySupportWardCode();

    /// TODO: cubit.state.selectedProvinceCode.isEmpty && cubit.state.provinceStatus.isInitial -> risk
    if (widget.autoShowDialog &&
        (provinceCode == null || districtCode == null || wardCode == null)) {
      WidgetsBinding.instance.addPostFrameCallback((_) {
        Future.delayed(const Duration(milliseconds: 500), () {
          onShowDeliverySupportDialog(context);
        });
      });
    }
  }
}
