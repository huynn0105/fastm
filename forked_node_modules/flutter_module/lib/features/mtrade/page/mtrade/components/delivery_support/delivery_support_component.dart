import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/constants.dart';
import 'package:flutter_module/common/widgets/collect_data_view.dart';
import 'package:flutter_module/app_data.dart';
import 'package:flutter_module/common/widgets/widget_layout.dart';
import '../../../../../../models/master_data/master_data_model.dart';
import '../../../../../../common/colors.dart';
import '../../../../../../common/dialogs/dialog_view/mtrade/mtrade_dialog_view.dart';
import '../../../../../../common/enum/mtrade/delivery_location_type.dart';
import '../../../../../../common/bottom_sheet/bottom_sheet_provider.dart';
import '../../../../../../common/widgets/buttons.dart';

import '../../../../cubit/delivery_support/mtrade_delivery_support_cubit.dart';
import '../../items/delivery_support_selected_item.dart';

class DeliverSupportComponent extends StatelessWidget {
  const DeliverSupportComponent({super.key, this.hasBackupZone = false});

  final bool hasBackupZone;
  @override
  Widget build(BuildContext context) {
    return BlocBuilder<MTradeDeliverySupportCubit, MTradeDeliverySupportState>(
      builder: (context, state) {
        final province = state.selectedProvince;
        final district = state.selectedDistrict;
        final ward = state.selectedWard;
        final enabled = province != null && district != null;
        final canPop = enabled &&
            AppData.instance.deliverySupportProvinceCode != null &&
            AppData.instance.deliverySupportDistrictCode != null;
        final enabledPop = canPop || hasBackupZone;
        return WidgetLayout(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              MTradeDialogView(
                asset: "ic_mtrade_mascot_search",
                title: "Khu vực giao hàng",
                message: "Chọn khu vực để đảm bảo thời gian nhận hàng được nhanh nhất.",
                messageColor: UIColors.grayText,
                enableAutoPop: false,
                customContent: Column(
                  children: [
                    CollectDataView(
                      errorMsg: state.errorMessages[AppConstants.deliverySupportProvinceKey],
                      child: DeliverySupportSelectedItem(
                        code: province?.code ?? '',
                        value: province?.value ?? "",
                        hintText: LocationType.province.title,
                        isDisable: false || !state.provinceStatus.isSuccess,
                        onTap: () {
                          onShowBottomSheetLocation(
                            context,
                            type: LocationType.province,
                            value: province?.code ?? '',
                            data: state.provinces,
                          );
                        },
                      ),
                    ),
                    const SizedBox(
                      height: 12,
                    ),
                    DeliverySupportSelectedItem(
                      code: district?.code ?? '',
                      value: district?.value ?? "",
                      hintText: LocationType.district.title,
                      isDisable: province == null || !state.districtStatus.isSuccess,
                      onTap: () {
                        onShowBottomSheetLocation(
                          context,
                          type: LocationType.district,
                          value: district?.code ?? '',
                          data: state.districts,
                        );
                      },
                    ),
                    const SizedBox(
                      height: 12,
                    ),
                    DeliverySupportSelectedItem(
                      code: ward?.code ?? '',
                      value: ward?.value ?? "",
                      hintText: LocationType.ward.title,
                      isDisable: district == null || !state.wardStatus.isSuccess,
                      onTap: () {
                        onShowBottomSheetLocation(
                          context,
                          type: LocationType.ward,
                          value: ward?.code ?? '',
                          data: state.wards,
                        );
                      },
                    ),
                  ],
                ),
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Expanded(
                    child: AppOutlinedButton(
                      onPressed: () {
                        Navigator.of(context).pop(false);
                      },
                      backgroundColor: Colors.transparent,
                      borderColor: UIColors.white,
                      disabledBorderColor: UIColors.darkGray,
                      borderRadius: BorderRadius.circular(8),
                      padding: const EdgeInsets.symmetric(vertical: 12, horizontal: 24),
                      textColor: enabledPop ? UIColors.white : UIColors.darkGray,
                      enabled: enabledPop,
                      title: "Quay lại",
                    ),
                  ),
                  const SizedBox(
                    width: 16,
                  ),
                  Expanded(
                    child: PrimaryButton(
                      onPressed: () {
                        Navigator.of(context).pop(true);
                      },
                      enabled: enabled,
                      radius: 8,
                      padding: const EdgeInsets.symmetric(vertical: 12, horizontal: 24),
                      title: "Hoàn tất",
                    ),
                  ),
                ],
              ),
            ],
          ),
        );
      },
    );
  }

  onShowBottomSheetLocation(
    BuildContext context, {
    required LocationType type,
    required String value,
    required List<MasterDataModel> data,
  }) async {
    final cubit = context.read<MTradeDeliverySupportCubit>();
    final result = await BottomSheetProvider.instance.onShowMTradeDeliveryLocation(
      context,
      type: type,
      value: value,
      data: data,
    );
    if (result is MasterDataModel) {
      if (type.isProvince) {
        cubit.selectProvince(result);
      } else if (type.isDistrict) {
        cubit.selectDistrict(result);
      } else if (type.isWard) {
        cubit.selectWard(result);
      }
    }
  }
}
