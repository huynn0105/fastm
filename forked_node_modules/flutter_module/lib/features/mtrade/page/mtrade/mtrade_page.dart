import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/enum/tracking_event_type.dart';
import 'package:flutter_module/common/widgets/widget_layout.dart';
import 'package:flutter_module/di/get_it.dart';
import 'package:flutter_module/routes/routes.gr.dart';

import '../../../../common/utils/redirect_util.dart';
import '../../../../common/widgets/appbar.dart';
import '../../../app_cubit.dart';
import 'components/mtrade_bottom_bar.dart';

@RoutePage()
class MTradePage extends StatefulWidget {
  const MTradePage({
    super.key,
    @QueryParam("index_tab") this.indexTab,
  });

  final int? indexTab;

  @override
  State<MTradePage> createState() => _MTradePageState();
}

class _MTradePageState extends State<MTradePage> {
  bool initRoute = false;

  @override
  void initState() {
    super.initState();
    getItInstance.get<AppCubit>().trackingEvent(event: TrackingEventType.mtrade);
  }

  @override
  Widget build(BuildContext context) {
    // if (AppData.instance.routePath.isNotEmpty) {
    //   getItInstance.get<AppRouter>().pushNamed(AppData.instance.routePath);
    // }
    return BlocListener<AppCubit, AppState>(
      listener: (context, state) {
        // if (state.forceLogin) {
        //   DialogProvider.instance.showLoginDialog(
        //     context: context,
        //     onLogin: () {
        //       RedirectUtil.backToMFast();
        //     },
        //   );
        // }
      },
      child: AutoTabsScaffold(
        lazyLoad: false,
        extendBody: true,
        resizeToAvoidBottomInset: false,
        routes: const [
          MTradeToolsRoute(),
          MTradeProductTabRoute(),
          MTradeCartTabRoute(),
          MTradeOrderTabRoute(),
        ],
        appBarBuilder: (context, tabsRouter) {
          return MFastAdvanceAppBar(
            context: context,
            title: "Bán hàng trả chậm",
            onBack: () {
              RedirectUtil.backToMFast();
            },
            onHome: () {
              RedirectUtil.backToMFast();
            },
          );
        },
        bottomNavigationBuilder: (context, tabsRouter) {
          onSetIndex(context);
          return WidgetLayout(child: MTradeBottomBar(tabsRouter: tabsRouter));
        },
      ),
    );
  }

  onSetIndex(BuildContext context) {
    if (!initRoute && widget.indexTab != null) {
      initRoute = true;
      Future.delayed(const Duration(milliseconds: 500), () {
        AutoTabsRouter.of(context).setActiveIndex(widget.indexTab!);
      });
    }
  }
}
