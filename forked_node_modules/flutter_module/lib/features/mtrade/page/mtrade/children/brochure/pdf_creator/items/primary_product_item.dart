import 'package:flutter_module/common/utils/format_util.dart';
import 'package:flutter_module/models/mtrade/product/mtrade_brochure_product_model.dart';
import 'package:pdf/pdf.dart';
import 'package:pdf/widgets.dart';

import '../../../../../../../../common/pdf_fonts.dart';
import '../category_brochure_creator.dart';

renderPrimaryProductItem(
  MTradeBrochureProductModel? product,
  ImageProvider sticker,
  double sizeRatio,
) {
  bool multiAttr = (product?.variations?.length ?? 0) >= 2;
  return Container(
    width: getConvertSize(281, sizeRatio),
    height: getConvertSize(320, sizeRatio),
    child: Stack(
      children: [
        Container(
          width: getConvertSize(281, sizeRatio),
          height: getConvertSize(320, sizeRatio),
          margin: EdgeInsets.only(left: getConvertSize(8, sizeRatio)),
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(4),
            color: const PdfColor.fromInt(0xFFFFFFFF),
          ),
          child: Column(
            children: [
              if (product?.productImage != null)
                Container(
                  width: getConvertSize(281, sizeRatio),
                  height: getConvertSize(222, sizeRatio),
                  padding: EdgeInsets.only(
                    left: getConvertSize(32, sizeRatio),
                    right: getConvertSize(32, sizeRatio),
                    top: getConvertSize(16, sizeRatio),
                  ),
                  child: Image(
                    product!.productImage!,
                    width: getConvertSize(208, sizeRatio),
                    height: getConvertSize(208, sizeRatio),
                    fit: BoxFit.cover,
                  ),
                ),
              SizedBox(height: getConvertSize(4, sizeRatio)),
              Container(
                padding: EdgeInsets.only(
                  left: getConvertSize(16, sizeRatio),
                  right: getConvertSize(16, sizeRatio),
                  top: getConvertSize(4, sizeRatio),
                ),
                height: getConvertSize(48, sizeRatio),
                child: Center(
                  child: Text(
                    product?.name ?? '',
                    maxLines: 2,
                    textAlign: TextAlign.center,
                    style: TextStyle(
                      fontSize: getConvertSize(18, sizeRatio),
                      fontWeight: FontWeight.bold,
                      fontBold: Font.ttf(PdfFonts.pdfSemiBoldFont),
                      color: const PdfColor.fromInt(0xFF080821),
                      lineSpacing: 2,
                    ),
                  )
                ),
              ),
              SizedBox(height: getConvertSize(4, sizeRatio)),
              if (product?.variations?.isNotEmpty == true)
                Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    SizedBox(width: getConvertSize(16, sizeRatio)),
                    Text(
                      product?.variations?.first.display() ?? '',
                      textAlign: multiAttr ? TextAlign.right : TextAlign.center,
                      maxLines: 1,
                      style: TextStyle(
                        fontSize: getConvertSize(16, sizeRatio),
                        fontWeight: FontWeight.bold,
                        color: const PdfColor.fromInt(0xFF005fff),
                      ),
                    ),
                    if (multiAttr) SizedBox(width: getConvertSize(8, sizeRatio)),
                    if (multiAttr)
                      Container(
                        width: getConvertSize(1, sizeRatio),
                        height: getConvertSize(34, sizeRatio),
                        color: const PdfColor.fromInt(0xFFb7b8bd),
                      ),
                    if (multiAttr) SizedBox(width: getConvertSize(8, sizeRatio)),
                    if (multiAttr)
                      Text(
                        product?.variations?[1].display() ?? '',
                        maxLines: 1,
                        style: TextStyle(
                          fontSize: getConvertSize(16, sizeRatio),
                          fontWeight: FontWeight.bold,
                          color: const PdfColor.fromInt(0xFF005fff),
                        ),
                      ),
                    SizedBox(width: getConvertSize(16, sizeRatio)),
                  ],
                ),
            ],
          ),
        ),
        if (product?.brandLogoImage != null)
          Positioned(
            top: getConvertSize(8, sizeRatio),
            right: getConvertSize(10, sizeRatio),
            child: Image(
              product!.brandLogoImage!,
              width: getConvertSize(54, sizeRatio),
              height: getConvertSize(18, sizeRatio),
              fit: BoxFit.contain,
            ),
          ),
        Positioned(
          top: getConvertSize(169, sizeRatio),
          left: 0,
          child: Stack(
            children: [
              Image(
                sticker,
                width: getConvertSize(162, sizeRatio),
                height: getConvertSize(54, sizeRatio),
                fit: BoxFit.contain,
              ),
              Container(
                height: getConvertSize(44, sizeRatio),
                width: getConvertSize(158, sizeRatio),
                alignment: Alignment.center,
                child: Text(
                  FormatUtil.currencyFormat(double.tryParse('${product?.price}')?.toInt()),
                  style: TextStyle(
                    fontSize: getConvertSize(20, sizeRatio),
                    fontWeight: FontWeight.bold,
                    color: const PdfColor.fromInt(0xFFffffff),
                  ),
                ),
              ),
            ],
          ),
        ),
      ],
    ),
  );
}
