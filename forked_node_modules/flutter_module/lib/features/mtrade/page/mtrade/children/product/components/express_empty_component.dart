import 'package:collection/collection.dart';
import 'package:ekyc/common/widgets/buttons.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/models/master_data/master_data_model.dart';

import '../../../../../../../common/colors.dart';
import '../../../../../../../common/styles.dart';
import '../../../../../../../common/widgets/empty_widget.dart';
import '../../../../../../../common/widgets/images.dart';
import '../../../../../cubit/delivery_support/mtrade_delivery_support_cubit.dart';
import '../../../../../cubit/express_delivery_support/express_delivery_support_cubit.dart';
import '../../../../../cubit/product_group/mtrade_product_group_cubit.dart';
import '../../../components/delivery_support/delivery_support_mixin.dart';

class ExpressEmptyComponent extends StatelessWidget with DeliverySupportMixin {
  const ExpressEmptyComponent({super.key, this.parentState});

  final MTradeProductGroupState? parentState;

  @override
  Widget build(BuildContext context) {
    return ListView(
      padding: const EdgeInsets.symmetric(horizontal: 24),
      children: [
        BlocBuilder<MTradeDeliverySupportCubit, MTradeDeliverySupportState>(
          builder: (context, state) {
            return SizedBox(
              height: 285,
              child: EmptyWidget(
                icon: 'ic_mtrade_mascot_waiting',
                message: 'Rất tiếc, không tìm thấy sản phẩm phù hợp trong\nkhu vực ${state.selectedProvince?.value}',
              ),
            );
          },
        ),
        const SizedBox(
          height: 24,
        ),
        if (parentState?.selectedSpecialGroup?.code == 'FAST_DELIVERY')
          Stack(
            children: [
              BlocProvider(
                create: (_) =>
                    ExpressDeliverySupportCubit()..getExpressProvinceSupport(parentState?.selectedProductGroup),
                child: BlocBuilder<ExpressDeliverySupportCubit, ExpressDeliverySupportState>(
                  builder: (context, state) {
                    final item =
                        parentState?.specialGroups.firstWhereOrNull((e) => parentState?.selectedSpecialGroup?.code == e.code);
                    List<MasterDataModel> data = state.provinces;
                    int widgetLength = (data.length / 2).ceil();
                    if (data.isEmpty) {
                      return const SizedBox();
                    }
                    return Container(
                      height: 169,
                      padding: const EdgeInsets.only(top: 12, left: 16, right: 16),
                      decoration: BoxDecoration(
                        color: UIColors.white,
                        borderRadius: BorderRadius.circular(8),
                      ),
                      child: Column(
                        children: [
                          Row(
                            children: [
                              AppImage.network(
                                url: (item?.image ?? "").trim(),
                                width: 48,
                                height: 48,
                                fit: BoxFit.contain,
                                borderRadius: BorderRadius.circular(24),
                              ),
                              const SizedBox(
                                width: 12,
                              ),
                              Expanded(
                                child: Text(
                                  'Hiện có ${data.length} tỉnh thành hỗ trợ\ngiao hàng hỏa tốc trong ngày',
                                  style: UITextStyle.semiBold.copyWith(
                                    fontSize: 16,
                                  ),
                                ),
                              ),
                            ],
                          ),
                          const SizedBox(
                            height: 8,
                          ),
                          const Divider(
                            height: 1,
                            thickness: 1,
                            color: UIColors.background,
                          ),
                          Expanded(
                            child: ListView.separated(
                              padding: EdgeInsets.zero,
                              itemCount: widgetLength,
                              separatorBuilder: (context, index) {
                                return const Divider(
                                  height: 1,
                                  thickness: 1,
                                  color: UIColors.background,
                                );
                              },
                              itemBuilder: (BuildContext context, int index) {
                                bool availableIndex = data.length > 2 * index + 1;
                                return Row(
                                  children: [
                                    Expanded(
                                      child: SplashButton(
                                        onTap: () {
                                          onShowDeliverySupportDialog(
                                            context,
                                            selectedProvince: data[2 * index].code,
                                          );
                                        },
                                        child: Container(
                                          height: 36,
                                          width: double.infinity,
                                          padding: const EdgeInsets.symmetric(vertical: 8),
                                          child: Center(
                                            child: Text(
                                              '${data[2 * index].value}',
                                              style: UITextStyle.medium.copyWith(
                                                color: UIColors.primaryColor,
                                                height: 1.2,
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                    ),
                                    Expanded(
                                      child: availableIndex
                                          ? SplashButton(
                                              onTap: () {
                                                onShowDeliverySupportDialog(
                                                  context,
                                                  selectedProvince: data[2 * index + 1].code,
                                                );
                                              },
                                              child: Container(
                                                height: 36,
                                                width: double.infinity,
                                                padding: const EdgeInsets.symmetric(vertical: 8),
                                                child: Center(
                                                  child: Text(
                                                    '${data[2 * index + 1].value}',
                                                    style: UITextStyle.medium.copyWith(
                                                      color: UIColors.primaryColor,
                                                      height: 1.2,
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            )
                                          : const SizedBox(),
                                    ),
                                  ],
                                );
                              },
                            ),
                          ),
                        ],
                      ),
                    );
                  },
                ),
              ),
              Positioned(
                left: 0,
                right: 0,
                bottom: 0,
                child: IgnorePointer(
                  ignoring: true,
                  child: Container(
                    decoration: BoxDecoration(
                      borderRadius: const BorderRadius.only(
                        bottomLeft: Radius.circular(8),
                        bottomRight: Radius.circular(8),
                      ),
                      gradient: LinearGradient(
                        begin: Alignment.topCenter,
                        end: Alignment.bottomCenter,
                        colors: [
                          UIColors.white.withOpacity(0),
                          UIColors.white,
                        ],
                      ),
                    ),
                    height: 26,
                  ),
                ),
              ),
            ],
          ),
      ],
    );
  }
}
