import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import '../../../../../../../../../common/colors.dart';
import '../../../../../../../../../common/size.dart';
import '../../../../../../../../../common/styles.dart';
import '../../../../../../../../../common/utils/datetime_util.dart';
import '../../../../../../../../../common/widgets/buttons.dart';
import '../../../../../../../../../common/widgets/images.dart';
import '../../../../../../../../../routes/routes.gr.dart';
import '../../../../../../../../../models/mtrade/bonus/process_model.dart';
import '../../../../../../../cubit/date_selection/mtrade_date_selection_cubit.dart';
import '../../../../../widgets/mtrade_block_widget.dart';

class OrderProcessStateComponent extends StatelessWidget {
  const OrderProcessStateComponent({
    Key? key,
    required this.data,
    this.collaboratorID,
  }) : super(key: key);

  final List<ProcessModel> data;
  final String? collaboratorID;

  @override
  Widget build(BuildContext context) {
    if (data.isEmpty) {
      return const SizedBox();
    }
    return MTradeBlockWidget(
      title: "Đơn hàng của bạn",
      titlePadding: EdgeInsets.zero,
      child: Container(
        padding: const EdgeInsets.symmetric(vertical: 16, horizontal: 12),
        decoration: BoxDecoration(
          color: UIColors.white,
          borderRadius: BorderRadius.circular(12),
        ),
        child: Wrap(
          alignment: WrapAlignment.center,
          runSpacing: 8.0,
          children: List.generate(
            data.length,
            (index) {
              final item = data[index];
              return SplashButton(
                onTap: () async {
                  final processState = item.processState ?? "";
                  context.pushRoute(
                    MTradeOrderProcessStateRoute(
                      processState: processState,
                      collaboratorID: collaboratorID,
                    ),
                  );
                },
                child: Container(
                  alignment: Alignment.center,
                  width: (AppSize.instance.width - 56) / 3, // space: 56 = (12 + 16) * 2
                  padding: const EdgeInsets.all(5),
                  child: Column(
                    children: [
                      AppImage.network(
                        url: item.icon ?? "",
                        width: 32,
                        height: 32,
                      ),
                      const SizedBox(
                        height: 5,
                      ),
                      Text(
                        "${item.stageName ?? ""} (${item.count ?? 0})",
                        style: UITextStyle.regular.copyWith(
                          fontSize: 14,
                          color: UIColors.grayText,
                        ),
                        textAlign: TextAlign.center,
                        maxLines: 2,
                        overflow: TextOverflow.ellipsis,
                      ),
                    ],
                  ),
                ),
              );
            },
          ),
        ),
      ),
    );
  }
}
