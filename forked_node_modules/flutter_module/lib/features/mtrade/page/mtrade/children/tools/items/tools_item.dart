import 'package:flutter/material.dart';
import 'package:flutter_widget_from_html_core/flutter_widget_from_html_core.dart' as fwfh;

import '../../../../../../../common/colors.dart';
import '../../../../../../../common/global_function.dart';
import '../../../../../../../common/styles.dart';
import '../../../../../../../common/utils/text_util.dart';
import '../../../../../../../common/widgets/buttons.dart';
import '../../../../../../../models/mtrade/tools/tools_model.dart';
import 'timeline_item.dart';

class ToolsItem extends StatelessWidget {
  const ToolsItem({
    Key? key,
    required this.data,
    required this.onTap,
  }) : super(key: key);

  final ToolsModel data;
  final Function() onTap;

  @override
  Widget build(BuildContext context) {
    final contents = data.contents ?? [];
    return AppSplashButton(
      onTap: onTap,
      borderRadius: BorderRadius.circular(12),
      child: Container(
        padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 4),
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(12),
          color: UIColors.white,
        ),
        child: ListView.builder(
          shrinkWrap: true,
          padding: EdgeInsets.zero,
          physics: const NeverScrollableScrollPhysics(),
          itemBuilder: (context, index) {
            final item = contents[index];
            final size = item.highlight == true ? 40.0 : 20.0;
            return TimelineItem(
              content: fwfh.HtmlWidget(
                item.content ?? "",
                textStyle: UITextStyle.regular.copyWith(
                  height: 1.5,
                  fontSize: 15,
                ),
                onTapUrl: (url) async {
                  if (TextUtils.isEmpty(url)) {
                    onTap.call();
                    return false;
                  }
                  GlobalFunction.pushWebView(
                    context: context,
                    url: url,
                  );
                  return true;
                },
              ),
              icon: item.icon ?? "",
              lineColor: UIColors.lightBlue,
              nodeSize: Size(40, size),
              iconSize: size,
              showStartConnector: index != 0,
              showEndConnector: index < contents.length - 1,
            );
          },
          itemCount: contents.length,
        ),
      ),
    );
  }
}
