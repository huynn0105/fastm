import 'package:flutter/material.dart';
import '../../../../../../../common/utils/text_util.dart';
import '../../../../../../../common/widgets/images.dart';
import 'package:timelines/timelines.dart';

import '../../../../../../../common/colors.dart';

class TimelineItem extends StatelessWidget {
  const TimelineItem({
    Key? key,
    required this.content,
    this.icon,
    this.lineColor = UIColors.lightGray,
    this.dotColor = UIColors.darkGray,
    this.lineWidth = 1,
    this.dotSize = 8,
    this.iconSize = 20,
    this.nodeSize = const Size(20, 20),
    this.showStartConnector = true,
    this.showEndConnector = true,
  }) : super(key: key);

  final String? icon;
  final Color lineColor;
  final Color dotColor;
  final double lineWidth;
  final double dotSize;
  final double iconSize;
  final Size nodeSize;
  final bool showStartConnector;
  final bool showEndConnector;
  final Widget content;

  @override
  Widget build(BuildContext context) {
    return TimelineTile(
      node: TimelineNode(
        indicator: TextUtils.isNotEmpty(icon)
            ? Container(
                height: nodeSize.height,
                width: nodeSize.width,
                alignment: Alignment.center,
                margin: const EdgeInsets.symmetric(vertical: 5),
                child: AppImage.network(
                  url: icon ?? '',
                  width: iconSize,
                  height: iconSize,
                ),
              )
            : SizedBox(
                width: iconSize,
                child: DotIndicator(
                  size: dotSize,
                  color: dotColor,
                ),
              ),
        startConnector: !showStartConnector
            ? null
            : SolidLineConnector(
                color: lineColor,
                thickness: lineWidth,
              ),
        endConnector: !showEndConnector
            ? null
            : SolidLineConnector(
                color: lineColor,
                thickness: lineWidth,
              ),
        indicatorPosition: 0.5,
      ),
      nodePosition: 0,
      contents: Padding(
        padding: const EdgeInsets.fromLTRB(12, 8, 8, 8),
        child: content,
      ),
    );
  }
}
