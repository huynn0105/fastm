import 'dart:math';

import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/features/mtrade/cubit/filtered_promotion_product/mtrade_filtered_promotion_product_cubit.dart';
import '../../../../../../../app_data.dart';
import '../../../../../../../common/bloc_status.dart';

import '../../../../../../../common/constants.dart';
import '../../../../../../../routes/routes.gr.dart';
import '../../../items/hot_product_card.dart';
import '../../../widgets/mtrade_block_widget.dart';

class FilteredPromotionProductComponent extends StatelessWidget {
  const FilteredPromotionProductComponent({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<MTradeFilteredPromotionProductCubit, MTradeFilteredPromotionProductState>(
      builder: (context, state) {
        if (state.status.isInitial) {
          context.read<MTradeFilteredPromotionProductCubit>().fetchData();
        }

        final data = state.products.take(5).toList();
        return data.isEmpty
            ? const SizedBox()
            : Padding(
                padding: const EdgeInsets.only(top: 18),
                child: MTradeBlockWidget(
                  title: "Sản phẩm đang áp dụng ưu đãi",
                  subtitle: "Tất cả",
                  titlePadding: const EdgeInsets.symmetric(horizontal: 16),
                  onTapSubtitle: () {
                    context.pushRoute(
                      MTradeSearchedProductRoute(
                        title: "Sản phẩm đang áp dụng ưu đãi",
                        group: "productPromotion",
                        pageID: AppData.instance.landingPageID,
                        provinceCode: AppData.instance.landingPageProvinceCode,
                        districtCode: AppData.instance.landingPageDistrictCode,
                      ),
                    );
                  },
                  child: SizedBox(
                    width: double.infinity,
                    child: SingleChildScrollView(
                      physics: AppConstants.physics,
                      scrollDirection: Axis.horizontal,
                      child: IntrinsicHeight(
                        child: Row(
                          crossAxisAlignment: CrossAxisAlignment.stretch,
                          children: List.generate(
                            max(0, data.length * 2 - 1),
                            (index) {
                              if (index.isOdd) {
                                return const SizedBox(
                                  width: 2,
                                );
                              }
                              index = index ~/ 2;
                              final item = data[index];
                              return HotProductCard(
                                data: item,
                                isIntrinsicHeight: true,
                              );
                            },
                          ),
                        ),
                      ),
                    ),
                  ),
                ),
              );
      },
    );
  }
}
