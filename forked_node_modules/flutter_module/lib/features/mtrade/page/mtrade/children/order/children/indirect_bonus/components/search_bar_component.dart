import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/constants.dart';
import 'package:flutter_module/common/utils/debounce_util.dart';
import 'package:flutter_module/common/widgets/chip_selection.dart';
import 'package:flutter_module/features/mtrade/cubit/indirect_bonus/mtrade_indirect_bonus_cubit.dart';
import '../../../../../../../../../common/colors.dart';
import '../../../../../widgets/mtrade_text_field.dart';

import '../../../../../widgets/mtrade_block_widget.dart';

class SearchBarComponent extends StatefulWidget {
  const SearchBarComponent({Key? key}) : super(key: key);

  @override
  State<SearchBarComponent> createState() => _SearchBarComponentState();
}

class _SearchBarComponentState extends State<SearchBarComponent> {
  late final DebounceUtil debounce;
  late final TextEditingController searchController;

  @override
  void initState() {
    super.initState();
    debounce = DebounceUtil(milliseconds: 200);
    searchController = TextEditingController();
  }

  @override
  void dispose() {
    searchController.dispose();
    debounce.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: const EdgeInsets.symmetric(horizontal: 16),
      decoration: const BoxDecoration(
        color: UIColors.background,
      ),
      child: MTradeBlockWidget(
        title: "Thống kê theo Cộng tác viên của bạn",
        child: Column(
          children: [
            MTradeSearchTextField(
              controller: searchController,
              hintText: "Tìm theo nickname",
              onChanged: (value) {
                debounce.run(() {
                  context.read<MTradeIndirectBonusCubit>()
                    ..updateQuery(value)
                    ..fetchData();
                });
              },
            ),
            const SizedBox(
              height: 16,
            ),
            BlocBuilder<MTradeIndirectBonusCubit, MTradeIndirectBonusState>(
              builder: (context, state) {
                return SizedBox(
                  height: 40,
                  child: ListView.separated(
                    scrollDirection: Axis.horizontal,
                    physics: AppConstants.physics,
                    padding: EdgeInsets.zero,
                    itemBuilder: (context, index) {
                      return ChipSelection(
                        title: data[index],
                        unselectedBackgroundColor: UIColors.white,
                        onTap: () {
                          context.read<MTradeIndirectBonusCubit>()
                            ..updateLevel(index)
                            ..fetchData();
                        },
                        selected: index == state.selectedLevelIndex,
                      );
                    },
                    separatorBuilder: (_, __) => const SizedBox(
                      width: 8,
                    ),
                    itemCount: data.length,
                  ),
                );
              },
            ),
            const SizedBox(
              height: 16,
            ),
          ],
        ),
      ),
    );
  }

  List<String> get data {
    return [
      "Tất cả",
      "Tầng 1",
      "Tầng 2",
      "Tầng 3",
      "Tầng 4",
      "Tầng 5",
      "Tầng 6",
      "Tầng 7",
    ];
  }
}
