import 'package:auto_route/auto_route.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/features/mtrade/cubit/order_filter/mtrade_order_filter_cubit.dart';
import 'package:flutter_module/features/mtrade/page/order_filter/components/order_date_filter_listener_component.dart';
import '../../../../../../../../common/bloc_status.dart';
import '../../../../../../cubit/indirect_bonus/mtrade_indirect_bonus_cubit.dart';
import 'components/list_collaborator_component.dart';
import 'components/search_bar_component.dart';

@RoutePage()
class MTradeIndirectBonusPage extends StatelessWidget {
  const MTradeIndirectBonusPage({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return OrderDateFilterListenerComponent(
      onTimeFilterChanged: (value) {
        onFilterChanged(context, value);
      },
      child: BlocBuilder<MTradeIndirectBonusCubit, MTradeIndirectBonusState>(
        builder: (context, state) {
          if (state.status.isInitial) {
            onInit(context);
          }

          return Column(
            children: [
              const SearchBarComponent(),
              Expanded(
                child: ListCollaboratorComponent(
                  status: state.status,
                  data: state.bonus,
                ),
              ),
            ],
          );
        },
      ),
    );
  }

  onInit(BuildContext context) {
    final filter = context.read<MTradeOrderFilterCubit>().getTimeFilterData();
    context.read<MTradeIndirectBonusCubit>()
      ..updateOrderFilter(filter)
      ..fetchData();
  }

  onFilterChanged(BuildContext context, Map<String, dynamic> filter) {
    context.read<MTradeIndirectBonusCubit>()
      ..updateOrderFilter(filter)
      ..fetchData();
  }
}
