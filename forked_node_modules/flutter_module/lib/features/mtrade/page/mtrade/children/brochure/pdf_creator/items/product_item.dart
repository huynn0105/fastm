import 'package:pdf/pdf.dart';
import 'package:pdf/widgets.dart';

import '../../../../../../../../common/pdf_fonts.dart';
import '../../../../../../../../common/utils/format_util.dart';
import '../../../../../../../../models/mtrade/product/mtrade_brochure_product_model.dart';
import '../category_brochure_creator.dart';

renderProductItem(MTradeBrochureProductModel? product, ImageProvider sticker, double sizeRatio) {
  // const String consultantValue = 'Điện thoại Oppo A77s';
  // final Size consultantValueSize = Font.ttf(PdfFonts.pdfSemiBoldFont).measureString(consultantValue);
  bool multiAttr = (product?.variations?.length ?? 0) >= 2;
  return Container(
    width: getConvertSize(181, sizeRatio),
    height: getConvertSize(152, sizeRatio),
    child: Stack(
      children: [
        Container(
          width: getConvertSize(177, sizeRatio),
          height: getConvertSize(152, sizeRatio),
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(4),
            color: const PdfColor.fromInt(0xFFFFFFFF),
          ),
          child: Column(
            children: [
              Row(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  if (product?.productImage == null)
                    SizedBox(
                      width: getConvertSize(96, sizeRatio),
                      height: getConvertSize(106, sizeRatio),
                    ),
                  if (product?.productImage != null)
                    Container(
                      alignment: Alignment.center,
                      width: getConvertSize(96, sizeRatio),
                      height: getConvertSize(106, sizeRatio),
                      padding: EdgeInsets.only(
                        left: getConvertSize(8, sizeRatio),
                        bottom: getConvertSize(8, sizeRatio),
                        top: getConvertSize(8, sizeRatio),
                      ),
                      child: Image(
                        product!.productImage!,
                        width: getConvertSize(90, sizeRatio),
                        height: getConvertSize(90, sizeRatio),
                        fit: BoxFit.cover,
                      ),
                    ),
                  SizedBox(width: getConvertSize(6, sizeRatio)),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.end,
                    children: [
                      if (product?.brandLogoImage != null)
                        Container(
                          width: getConvertSize(40, sizeRatio),
                          height: getConvertSize(16, sizeRatio),
                          margin: EdgeInsets.only(
                            top: getConvertSize(6, sizeRatio),
                            bottom: getConvertSize(6, sizeRatio),
                          ),
                          child: Image(
                            product!.brandLogoImage!,
                            width: getConvertSize(40, sizeRatio),
                            height: getConvertSize(16, sizeRatio),
                            fit: BoxFit.contain,
                          ),
                        ),
                      if (product?.variations?.isNotEmpty == true)
                        Container(
                          width: getConvertSize(67, sizeRatio),
                          padding: EdgeInsets.only(
                            bottom: getConvertSize(2, sizeRatio),
                          ),
                          child: Text(
                            product?.variations?.first.display() ?? '',
                            textAlign: TextAlign.right,
                            maxLines: 1,
                            style: TextStyle(
                              fontSize: getConvertSize(10, sizeRatio),
                              fontWeight: FontWeight.bold,
                              fontBold: Font.ttf(PdfFonts.pdfSemiBoldFont),
                              color: const PdfColor.fromInt(0xFF005fff),
                            ),
                          ),
                        ),
                      if (multiAttr)
                        Container(
                          width: getConvertSize(67, sizeRatio),
                          child: Text(
                            product?.variations?[1].display() ?? '',
                            textAlign: TextAlign.right,
                            maxLines: 1,
                            style: TextStyle(
                              fontSize: getConvertSize(10, sizeRatio),
                              fontWeight: FontWeight.bold,
                              fontBold: Font.ttf(PdfFonts.pdfSemiBoldFont),
                              color: const PdfColor.fromInt(0xFF005fff),
                            ),
                          ),
                        )
                    ],
                  ),
                ],
              ),
              Container(
                padding: EdgeInsets.all(getConvertSize(4, sizeRatio)),
                height: getConvertSize(45, sizeRatio),
                width: getConvertSize(181, sizeRatio),
                color: const PdfColor.fromInt(0xFFe0ecff),
                child: Center(
                  child: Text(
                    product?.name ?? '',
                    textAlign: TextAlign.center,
                    maxLines: 2,
                    overflow: TextOverflow.clip,
                    style: TextStyle(
                      fontSize: getConvertSize(13, sizeRatio),
                      fontWeight: FontWeight.normal,
                      fontNormal: Font.ttf(PdfFonts.pdfMediumFont),
                      color: const PdfColor.fromInt(0xFF000000),
                      lineSpacing: 3,
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),
        Positioned(
          top: getConvertSize(67, sizeRatio),
          right: 0,
          child: Stack(
            children: [
              Image(
                sticker,
                width: getConvertSize(105, sizeRatio),
                height: getConvertSize(31, sizeRatio),
                fit: BoxFit.contain,
              ),
              Container(
                height: getConvertSize(25, sizeRatio),
                width: getConvertSize(108, sizeRatio),
                alignment: Alignment.center,
                child: Text(
                  FormatUtil.currencyFormat(double.tryParse('${product?.price}')?.toInt()),
                  style: TextStyle(
                    fontSize: getConvertSize(14, sizeRatio),
                    fontWeight: FontWeight.bold,
                    color: const PdfColor.fromInt(0xFFffffff),
                  ),
                ),
              ),
            ],
          ),
        ),
      ],
    ),
  );
}
