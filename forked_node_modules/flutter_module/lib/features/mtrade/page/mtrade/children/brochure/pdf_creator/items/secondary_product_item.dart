import 'package:pdf/pdf.dart';
import 'package:pdf/widgets.dart';

import '../../../../../../../../common/pdf_fonts.dart';
import '../../../../../../../../common/utils/format_util.dart';
import '../../../../../../../../models/mtrade/product/mtrade_brochure_product_model.dart';
import '../category_brochure_creator.dart';

renderSecondaryProductItem(MTradeBrochureProductModel? product, ImageProvider sticker, double sizeRatio) {
  // const String consultantValue = 'Điện thoại Oppo A77s';
  // final Size consultantValueSize = Font.ttf(PdfFonts.pdfSemiBoldFont).measureString(consultantValue);
  bool multiAttr = (product?.variations?.length ?? 0) >= 2;
  return Container(
    width: getConvertSize(278, sizeRatio),
    height: getConvertSize(152, sizeRatio),
    child: Stack(
      children: [
        Container(
          width: getConvertSize(274, sizeRatio),
          height: getConvertSize(152, sizeRatio),
          margin: EdgeInsets.only(left: getConvertSize(4, sizeRatio)),
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(4),
            color: const PdfColor.fromInt(0xFFFFFFFF),
          ),
          child: Row(
            children: [
              if (product?.productImage != null)
                Container(
                  width: getConvertSize(136, sizeRatio),
                  height: getConvertSize(136, sizeRatio),
                  margin: EdgeInsets.only(
                    left: getConvertSize(8, sizeRatio),
                    bottom: getConvertSize(8, sizeRatio),
                    top: getConvertSize(8, sizeRatio),
                  ),
                  child: Image(
                    product!.productImage!,
                    width: getConvertSize(136, sizeRatio),
                    height: getConvertSize(136, sizeRatio),
                    fit: BoxFit.cover,
                  ),
                ),
              SizedBox(width: getConvertSize(8, sizeRatio)),
              Spacer(),
              Column(
                crossAxisAlignment: CrossAxisAlignment.end,
                children: [
                  if (product?.brandLogoImage != null)
                    Container(
                      width: getConvertSize(54, sizeRatio),
                      height: getConvertSize(18, sizeRatio),
                      margin: EdgeInsets.only(
                        right: getConvertSize(10, sizeRatio),
                        top: getConvertSize(8, sizeRatio),
                        bottom: getConvertSize(8, sizeRatio),
                      ),
                      child: Image(
                        product!.brandLogoImage!,
                        width: getConvertSize(54, sizeRatio),
                        height: getConvertSize(18, sizeRatio),
                        fit: BoxFit.contain,
                      ),
                    ),
                  Container(
                    padding: EdgeInsets.only(
                      right: getConvertSize(12, sizeRatio),
                    ),
                    width: getConvertSize(118, sizeRatio),
                    child: Text(
                      product?.name ?? '',
                      maxLines: 3,
                      overflow: TextOverflow.clip,
                      textAlign: TextAlign.right,
                      style: TextStyle(
                        fontSize: getConvertSize(16, sizeRatio),
                        fontWeight: FontWeight.bold,
                        fontBold: Font.ttf(PdfFonts.pdfSemiBoldFont),
                        color: const PdfColor.fromInt(0xFF080821),
                        lineSpacing: 3,
                      ),
                    ),
                  ),
                  if (product?.variations?.isNotEmpty == true)
                    Container(
                      padding: EdgeInsets.only(
                        right: getConvertSize(12, sizeRatio),
                        top: getConvertSize(9, sizeRatio),
                      ),
                      width: getConvertSize(118, sizeRatio),
                      child: Text(
                        product?.variations?.first.display() ?? '',
                        textAlign: TextAlign.right,
                        maxLines: 1,
                        style: TextStyle(
                          fontSize: getConvertSize(16, sizeRatio),
                          fontWeight: FontWeight.bold,
                          color: const PdfColor.fromInt(0xFF005fff),
                        ),
                      ),
                    ),
                  if (multiAttr)
                    Container(
                      padding: EdgeInsets.only(
                        right: getConvertSize(12, sizeRatio),
                        top: getConvertSize(1, sizeRatio),
                      ),
                      width: getConvertSize(118, sizeRatio),
                      child: Text(
                        product?.variations?[1].display() ?? '',
                        textAlign: TextAlign.right,
                        maxLines: 1,
                        style: TextStyle(
                          fontSize: getConvertSize(16, sizeRatio),
                          fontWeight: FontWeight.bold,
                          color: const PdfColor.fromInt(0xFF005fff),
                        ),
                      ),
                    ),
                ],
              ),
            ],
          ),
        ),
        Positioned(
          top: getConvertSize(103, sizeRatio),
          left: 0,
          child: Stack(
            children: [
              Image(
                sticker,
                width: getConvertSize(124, sizeRatio),
                height: getConvertSize(35, sizeRatio),
                fit: BoxFit.contain,
              ),
              Container(
                height: getConvertSize(29, sizeRatio),
                width: getConvertSize(120, sizeRatio),
                alignment: Alignment.center,
                child: Text(
                  FormatUtil.currencyFormat(double.tryParse('${product?.price}')?.toInt()),
                  style: TextStyle(
                    fontSize: getConvertSize(16, sizeRatio),
                    fontWeight: FontWeight.bold,
                    color: const PdfColor.fromInt(0xFFffffff),
                  ),
                ),
              ),
            ],
          ),
        ),
      ],
    ),
  );
}
