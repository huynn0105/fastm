import 'package:card_swiper/card_swiper.dart';
import 'package:carousel_slider/carousel_slider.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';

import '../../../../../common/colors.dart';
import '../../../../../common/dialogs/modals/fullscreen_modal.dart';
import '../../../../../common/styles.dart';
import '../../../../../common/widgets/buttons.dart';
import '../../../../../common/widgets/carousel_indicator.dart';
import '../../../../../common/widgets/images.dart';
import '../../product_detail/components/product_image_preview_component.dart';

class MTradeCarouselWidget extends StatefulWidget {
  const MTradeCarouselWidget({
    Key? key,
    required this.images,
    this.aspectRatio = 16 / 9,
    this.enabledOpenPreview = true,
  }) : super(key: key);

  final bool enabledOpenPreview;
  final double aspectRatio;
  final List<String> images;

  @override
  State<MTradeCarouselWidget> createState() => _MTradeCarouselWidgetState();
}

class _MTradeCarouselWidgetState extends State<MTradeCarouselWidget> {
  int currentImageIndex = 0;
  List<String> currentImages = const [];
  CarouselController carouselController = CarouselController();

  @override
  void initState() {
    super.initState();
    currentImages = [...widget.images];
  }

  @override
  void dispose() {
    super.dispose();
  }

  @override
  void didUpdateWidget(covariant MTradeCarouselWidget oldWidget) {
    if (!listEquals(oldWidget.images, widget.images)) {
      currentImageIndex = 0;
      currentImages = [...widget.images];
      carouselController.onReady.then((value) => carouselController.jumpToPage(currentImageIndex));
    }
    super.didUpdateWidget(oldWidget);
  }

  @override
  Widget build(BuildContext context) {
    if (currentImages.isEmpty) {
      return const SizedBox();
    }
    return AspectRatio(
      aspectRatio: widget.aspectRatio,
      child: Stack(
        fit: StackFit.expand,
        children: [
          Positioned.fill(
            child: AppSplashButton(
              isDisable: !widget.enabledOpenPreview,
              onTap: () {
                Navigator.of(context).push(
                  FullScreenModal(
                    page: ProductImagePreviewComponent(
                      images: currentImages,
                      initialIndex: currentImageIndex,
                    ),
                  ),
                );
              },
              child: Swiper(
                loop: false,
                itemCount: currentImages.length,
                itemBuilder: (context, index) {
                  return AppImage.network(
                    url: currentImages[index],
                    width: double.infinity,
                    fit: BoxFit.cover,
                  );
                },
                onIndexChanged: (index) {
                  setState(() {
                    currentImageIndex = index;
                  });
                },
              ),
            ),
          ),
          if (currentImages.length <= 15)
            Align(
              alignment: Alignment.bottomCenter,
              child: Padding(
                padding: const EdgeInsets.only(bottom: 10),
                child: CarouselIndicator(
                  length: currentImages.length,
                  currentIndex: currentImageIndex,
                  style: CarouselIndicatorStyle.rectangle,
                ),
              ),
            ),
          Positioned(
            bottom: 5,
            right: 10,
            child: Container(
              height: 20,
              padding: const EdgeInsets.symmetric(horizontal: 5),
              decoration: BoxDecoration(
                color: UIColors.defaultText.withOpacity(0.3),
                borderRadius: BorderRadius.circular(10),
              ),
              child: Text(
                "${currentImageIndex + 1}/${widget.images.length}",
                style: UITextStyle.regular.copyWith(
                  color: UIColors.white,
                  fontSize: 12,
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}
