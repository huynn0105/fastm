import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/text_util.dart';
import 'package:flutter_module/common/widgets/collect_data_view.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/common/widgets/textfields.dart';
import 'package:flutter_module/features/mtrade/cubit/personal_link_setup/mtrade_personal_link_setup_cubit.dart';
import 'package:flutter_module/features/mtrade/page/personal_link_setup/components/checkbox_expand_component.dart';
import 'package:flutter_module/models/mtrade/personal_link_setup/mtrade_personal_link_setup_model.dart';

class InsuranceItem extends StatefulWidget {
  const InsuranceItem({
    super.key,
    required this.item,
    this.isSelected = false,
    this.value = '',
    this.disableCheckBox = false,
    this.disableDiscount = false,
  });

  final InsuranceLinkSetup item;
  final bool isSelected;
  final String value;
  final bool disableCheckBox;
  final bool disableDiscount;

  @override
  State<InsuranceItem> createState() => _InsuranceItemState();
}

class _InsuranceItemState extends State<InsuranceItem> {
  TextEditingController controller = TextEditingController();

  @override
  void initState() {
    super.initState();
    controller.text = widget.value;
  }

  @override
  void didUpdateWidget(covariant InsuranceItem oldWidget) {
    super.didUpdateWidget(oldWidget);
    if (oldWidget.value != widget.value) {
      controller.text = widget.value;
    }
  }

  @override
  Widget build(BuildContext context) {
    final double commission = TextUtils.parseDouble(widget.item.commPercent) ?? 0;
    final clientCommission = TextUtils.parseDouble(widget.value) ?? 0;
    final double myCommission = double.parse((commission - clientCommission).toStringAsFixed(1));
    final isNotEnoughCommission = clientCommission > commission;
    final disable = widget.disableDiscount || widget.item.isDisable == true;
    return Padding(
      padding: const EdgeInsets.only(top: 12),
      child: CheckboxExpandComponent(
        value: widget.isSelected,
        isEnable: !widget.disableCheckBox,
        onChanged: (value) {
          _onSelectInsuranceItem(context);
        },
        titleWidget: Row(
          children: [
            Expanded(
              child: Text(
                widget.item.name ?? "",
                style: widget.isSelected
                    ? UITextStyle.medium.copyWith(
                        fontSize: 16,
                        color: UIColors.boolText,
                      )
                    : UITextStyle.regular.copyWith(
                        fontSize: 16,
                        color: UIColors.gray,
                      ),
              ),
            ),
            AppImage.network(
              url: widget.item.iconURL2,
              width: 28,
              height: 28,
            )
          ],
        ),
        child: Container(
          margin: const EdgeInsets.only(
            top: 6,
            left: 36,
          ),
          padding: const EdgeInsets.only(
            left: 12,
            right: 12,
            top: 10,
            bottom: 12,
          ),
          decoration: BoxDecoration(
            color: UIColors.background,
            borderRadius: BorderRadius.circular(6),
          ),
          child: CollectDataView(
            errorMsg: widget.item.isDisable == true
                ? 'Sản phẩm bị giới hạn, không thể cài đặt chiết khấu cho khách hàng'
                : isNotEnoughCommission
                    ? "Chiết khấu cho khách phải thấp hơn hoa hồng mặc định"
                    : "",
            child: Column(
              children: [
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    Text(
                      "Hoa hồng\nmặc định",
                      style: UITextStyle.regular.copyWith(
                        fontSize: 12,
                        color: UIColors.grayText,
                      ),
                    ),
                    Text(
                      "Chiết khấu\ncho khách",
                      style: UITextStyle.regular.copyWith(
                        fontSize: 12,
                        color: UIColors.grayText,
                      ),
                    ),
                    Text(
                      "Hoa hồng\ncòn lại",
                      textAlign: TextAlign.end,
                      style: UITextStyle.regular.copyWith(
                        fontSize: 12,
                        color: UIColors.grayText,
                      ),
                    ),
                  ],
                ),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    Expanded(
                      child: Text(
                        "$commission%",
                        style: UITextStyle.semiBold.copyWith(
                          fontSize: 16,
                        ),
                      ),
                    ),
                    Text(
                      "-",
                      style: UITextStyle.medium,
                    ),
                    const SizedBox(
                      width: 8,
                    ),
                    SizedBox(
                      width: 78,
                      height: 32,
                      child: UITextFieldOutline(
                        controller: controller,
                        readOnly: disable == true,
                        contentPadding: const EdgeInsets.symmetric(
                          horizontal: 8,
                          vertical: 6,
                        ),
                        textStyle: UITextStyle.semiBold.copyWith(
                          fontSize: 16,
                          height: 1.3,
                          color: disable == true ? UIColors.red : null,
                        ),
                        inputBorder: OutlineInputBorder(
                          borderSide: BorderSide(
                            color: isNotEnoughCommission ? UIColors.red : UIColors.lightGray,
                          ),
                        ),
                        hintText: '0',
                        fillColor: disable == true
                            ? UIColors.darkGray
                            : isNotEnoughCommission
                                ? UIColors.lightRed
                                : UIColors.white,
                        onChanged: (p0) {
                          _onChangeCommission(context, value: p0);
                        },
                        keyboardType: const TextInputType.numberWithOptions(decimal: true),
                        inputFormatter: [
                          FilteringTextInputFormatter.allow(RegExp(r'^\d+\.?\d{0,1}')),
                        ],
                        suffixIcon: SizedBox(
                          width: 32,
                          child: Center(
                            child: Text(
                              "%",
                              style: UITextStyle.medium.copyWith(
                                color: widget.item.isDisable == true ? UIColors.grayBackground : UIColors.grayText,
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                    const SizedBox(
                      width: 8,
                    ),
                    Text(
                      "=",
                      style: UITextStyle.medium,
                    ),
                    Expanded(
                      child: Text(
                        "$myCommission%",
                        style: UITextStyle.semiBold.copyWith(
                          fontSize: 16,
                          color: UIColors.accentGreen,
                        ),
                        textAlign: TextAlign.end,
                      ),
                    ),
                  ],
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  _onChangeCommission(BuildContext context, {String? value}) {
    final cubit = context.read<MTradePersonalLinkSetupCubit>();
    cubit.changeDiscountInsurance(widget.item.iD ?? "", value ?? "");
  }

  _onSelectInsuranceItem(BuildContext context) {
    final cubit = context.read<MTradePersonalLinkSetupCubit>();
    cubit.selectInsuranceItem(widget.item.iD ?? "");
  }
}
