import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/checkbox.dart';
import 'package:flutter_module/common/widgets/collect_data_view.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/common/widgets/textfields.dart';
import 'package:flutter_module/features/mtrade/cubit/personal_link_setup/mtrade_personal_link_setup_cubit.dart';
import 'package:flutter_module/features/mtrade/page/personal_link_setup/items/insurance_item.dart';
import 'package:flutter_module/models/mtrade/personal_link_setup/mtrade_personal_link_setup_model.dart';

class InsuranceListComponent extends StatefulWidget {
  const InsuranceListComponent({
    super.key,
    this.detailLink,
    this.listInsurance,
    this.errors,
    this.isCreateAdLink = false,
  });
  final DetailLinkSetup? detailLink;
  final List<InsuranceLinkSetup>? listInsurance;
  final Map<String, String>? errors;
  final bool isCreateAdLink;

  @override
  State<InsuranceListComponent> createState() => _InsuranceListComponentState();
}

class _InsuranceListComponentState extends State<InsuranceListComponent> {
  final TextEditingController controller = TextEditingController();
  String name = '';
  bool isMaxCommission = false;

  @override
  void initState() {
    super.initState();
    _initValueInput();
  }

  @override
  void didUpdateWidget(covariant InsuranceListComponent oldWidget) {
    super.didUpdateWidget(oldWidget);
    _initValueInput();
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: const EdgeInsets.symmetric(vertical: 16),
      decoration: BoxDecoration(
        color: UIColors.white,
        borderRadius: BorderRadius.circular(8),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: 16),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  "Tên liên kết tiếp thị",
                  style: UITextStyle.regular,
                ),
                const SizedBox(
                  height: 8,
                ),
                CollectDataView(
                  errorMsg: widget.errors?['customerLabel'],
                  child: UITextFieldOutline(
                    controller: controller,
                    contentPadding: const EdgeInsets.symmetric(
                      horizontal: 16,
                      vertical: 9,
                    ),
                    textStyle: UITextStyle.regular.copyWith(
                      fontSize: 16,
                      color: UIColors.boolText,
                    ),
                    hintText: 'Nhập tên tiếp thị liên kết',
                    fillColor: UIColors.background,
                    onChanged: (p0) {
                      _onLinkNameChange(context, text: p0);
                    },
                  ),
                ),
                const SizedBox(
                  height: 16,
                ),
                const Divider(
                  thickness: 1,
                  height: 1,
                ),
                const SizedBox(
                  height: 12,
                ),
                Text(
                  "Sản phẩm hiển thị trong liên kết",
                  style: UITextStyle.regular,
                ),
                const SizedBox(
                  height: 8,
                ),
                const AppCheckbox.circle(
                  value: true,
                  title: "Sản phẩm bảo hiểm",
                ),
                const SizedBox(
                  height: 12,
                ),
                const Divider(
                  thickness: 1,
                  height: 1,
                ),
                const SizedBox(
                  height: 12,
                ),
                Text(
                  "Tên liên kết tiếp thị",
                  style: UITextStyle.regular,
                ),
              ],
            ),
          ),
          const SizedBox(
            height: 12,
          ),
          Container(
            color: UIColors.lightBlue,
            padding: const EdgeInsets.symmetric(
              horizontal: 16,
              vertical: 12,
            ),
            child: Row(
              children: [
                Expanded(
                  child: Row(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      AppCheckbox.rectangle(
                        value: isMaxCommission,
                        onChanged: (p0) {
                          _onChangeMaxCommission(value: p0);
                        },
                      ),
                      const SizedBox(
                        width: 12,
                      ),
                      Expanded(
                        child: Text(
                          "Đặt chiết khấu cao nhất cho tất cả sản phẩm",
                          style: UITextStyle.regular.copyWith(
                            color: UIColors.grayText,
                          ),
                        ),
                      ),
                      const SizedBox(
                        width: 32,
                      ),
                    ],
                  ),
                ),
                SplashButton(
                  onTap: () {
                    _onSetMaxCommission(context);
                  },
                  child: Row(
                    children: [
                      Text(
                        "Đặt lại",
                        style: UITextStyle.regular.copyWith(
                          color: UIColors.primaryColor,
                        ),
                      ),
                      const SizedBox(
                        width: 4,
                      ),
                      const AppImage.asset(
                        asset: "ic_chat_recall",
                        width: 24,
                        height: 24,
                        color: UIColors.primaryColor,
                      )
                    ],
                  ),
                ),
              ],
            ),
          ),
          Padding(
            padding: const EdgeInsets.symmetric(
              horizontal: 16,
            ),
            child: Column(
              children: [
                CollectDataView(
                  errorMsg: widget.errors?['commission'],
                  child: const SizedBox(
                    height: 8,
                  ),
                ),
                ...List.generate(widget.listInsurance?.length ?? 0, (index) {
                  final item = widget.listInsurance![index];
                  final isSelected = widget.detailLink?.insuranceActiveArr?.contains(item.iD) ?? false;
                  final value = widget.detailLink?.insuranceDiscount?[item.iD ?? ''] ?? '0';
                  return InsuranceItem(
                    item: item,
                    isSelected: isSelected,
                    value: value,
                    disableCheckBox: !widget.isCreateAdLink,
                  );
                })
              ],
            ),
          ),
        ],
      ),
    );
  }

  _onLinkNameChange(
    BuildContext context, {
    String? text,
  }) {
    final cubit = context.read<MTradePersonalLinkSetupCubit>();
    cubit.changeLinkName(text ?? '');
  }

  _initValueInput() {
    if (name.isEmpty) {
      final value = widget.detailLink?.customerLabel ?? "";
      controller.text = value;
      name = value;
    }
  }

  _onChangeMaxCommission({required bool value}) {
    setState(() {
      isMaxCommission = value;
    });
  }

  _onSetMaxCommission(BuildContext context) {
    final cubit = context.read<MTradePersonalLinkSetupCubit>();
    cubit.setMaxCommissionInsurance(isMaxCommission);
  }
}
