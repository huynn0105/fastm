import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/constants.dart';
import 'package:flutter_module/common/enum/mtrade/social_contact_type.dart';
import 'package:flutter_module/common/global_function.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/format_util.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/collect_data_view.dart';
import 'package:flutter_module/common/widgets/textfields.dart';
import 'package:flutter_module/features/mtrade/cubit/personal_link_setup/mtrade_personal_link_setup_cubit.dart';
import 'package:flutter_module/features/mtrade/page/personal_link_setup/components/checkbox_expand_component.dart';
import 'package:flutter_module/models/mtrade/personal_link_setup/mtrade_personal_link_setup_model.dart';
import 'package:url_launcher/url_launcher.dart';

import '../../../../../common/widgets/checkbox.dart';

class InfoPersonalComponent extends StatefulWidget {
  const InfoPersonalComponent({
    super.key,
    this.detailLink,
    this.userLink,
    this.errors,
  });

  final DetailLinkSetup? detailLink;
  final UserLinkSetup? userLink;
  final Map<String, String>? errors;

  @override
  State<InfoPersonalComponent> createState() => _InfoPersonalComponentState();
}

class _InfoPersonalComponentState extends State<InfoPersonalComponent> {
  final TextEditingController controller = TextEditingController();
  final TextEditingController zaloController = TextEditingController();
  final TextEditingController facebookController = TextEditingController();
  String fullName = '';
  String socialZalo = '';
  String socialFacebook = '';

  @override
  void initState() {
    super.initState();
    _initValueInput();
  }

  @override
  void didUpdateWidget(covariant InfoPersonalComponent oldWidget) {
    super.didUpdateWidget(oldWidget);
    _initValueInput();
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: UIColors.white,
        borderRadius: BorderRadius.circular(8),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            'Tên liên hệ',
            style: UITextStyle.regular.copyWith(
              color: UIColors.boolText,
            ),
          ),
          const SizedBox(
            height: 8,
          ),
          CollectDataView(
            errorMsg: widget.errors?['fullName'],
            child: UITextFieldOutline(
              controller: controller,
              contentPadding: const EdgeInsets.symmetric(
                horizontal: 16,
                vertical: 9,
              ),
              textStyle: UITextStyle.regular.copyWith(
                fontSize: 16,
                color: UIColors.boolText,
              ),
              hintText: 'Nhập tên',
              fillColor: UIColors.background,
              onChanged: (p0) {
                _onNameChange(context, text: p0);
              },
            ),
          ),
          const SizedBox(
            height: 16,
          ),
          const Divider(
            thickness: 1,
            height: 1,
            color: UIColors.lightGray,
          ),
          const SizedBox(
            height: 16,
          ),
          CollectDataView(
            errorMsg: widget.errors?['social'],
            child: Text(
              'Phương thức liên hệ',
              style: UITextStyle.regular.copyWith(
                color: UIColors.boolText,
              ),
            ),
          ),
          const SizedBox(
            height: 8,
          ),
          CheckboxExpandComponent(
            value: widget.detailLink?.isFacebook() ?? false,
            onChanged: (value) {
              _onSelectSocial(context, socialType: SocialContactType.facebook);
            },
            titleWidget: Row(
              children: [
                Expanded(
                  child: Text(
                    'Messenger',
                    style: UITextStyle.medium.copyWith(
                      fontSize: 16,
                      color: UIColors.boolText,
                    ),
                  ),
                ),
                SplashButton(
                  onTap: _onGuide,
                  child: Text(
                    'Hướng dẫn',
                    style: UITextStyle.semiBold.copyWith(
                      color: UIColors.primaryColor,
                    ),
                  ),
                ),
              ],
            ),
            child: Padding(
              padding: const EdgeInsets.only(top: 8),
              child: CollectDataView(
                errorMsg: widget.errors?['socialFacebook'],
                child: UITextFieldOutline(
                  controller: facebookController,
                  contentPadding: const EdgeInsets.symmetric(
                    horizontal: 16,
                    vertical: 9,
                  ),
                  textStyle: UITextStyle.regular.copyWith(
                    fontSize: 16,
                    color: UIColors.boolText,
                  ),
                  hintText: 'Nhập link messenger',
                  fillColor: UIColors.background,
                  onChanged: (p0) {
                    _onInputChange(context, text: p0, socialType: SocialContactType.facebook);
                  },
                ),
              ),
            ),
          ),
          const SizedBox(
            height: 16,
          ),
          CheckboxExpandComponent(
            value: widget.detailLink?.isZalo() ?? false,
            onChanged: (value) {
              _onSelectSocial(context, socialType: SocialContactType.zalo);
            },
            title: 'Zalo',
            child: Padding(
              padding: const EdgeInsets.only(top: 8),
              child: CollectDataView(
                errorMsg: widget.errors?['socialZalo'],
                child: UITextFieldOutline(
                  controller: zaloController,
                  contentPadding: const EdgeInsets.symmetric(
                    horizontal: 16,
                    vertical: 9,
                  ),
                  textStyle: UITextStyle.regular.copyWith(
                    fontSize: 16,
                    color: UIColors.boolText,
                  ),
                  hintText: 'Nhập số điện thoại Zalo',
                  fillColor: UIColors.background,
                  inputFormatters: [FilteringTextInputFormatter.digitsOnly],
                  keyboardType: TextInputType.number,
                  onChanged: (p0) {
                    _onInputChange(context, text: p0, socialType: SocialContactType.zalo);
                  },
                ),
              ),
            ),
          ),
          const SizedBox(
            height: 16,
          ),
          Row(
            children: [
              AppCheckbox.rectangle(
                value: widget.detailLink?.isPhone() ?? false,
                onChanged: (value) {
                  _onSelectSocial(context, socialType: SocialContactType.phone);
                },
              ),
              const SizedBox(
                width: 12,
              ),
              Text(
                'Số điện thoại - ${FormatUtil.phoneFormat(widget.userLink?.mobilePhone ?? '')}',
                style: UITextStyle.medium.copyWith(
                  fontSize: 16,
                  color: UIColors.boolText,
                ),
              )
            ],
          ),
        ],
      ),
    );
  }

  _initValueInput() {
    if (fullName.isEmpty) {
      fullName = widget.detailLink?.fullName ?? widget.userLink?.fullName ?? '';
      controller.text = fullName;
      context.read<MTradePersonalLinkSetupCubit>().changeName(fullName);
    }
    if (socialZalo.isEmpty) {
      socialZalo = widget.detailLink?.socialZalo ?? '';
      zaloController.text = socialZalo;
    }
    if (socialFacebook.isEmpty) {
      socialFacebook = widget.detailLink?.socialFacebook ?? '';
      facebookController.text = socialFacebook;
    }
  }

  _onGuide() {
    GlobalFunction.launchScheme(
      AppConstants.linkGuideGetIdFacebook,
      mode: LaunchMode.externalApplication,
    );
  }

  _onSelectSocial(BuildContext context, {required SocialContactType socialType}) {
    final cubit = context.read<MTradePersonalLinkSetupCubit>();
    cubit.selectSocial(socialType);
  }

  _onInputChange(
    BuildContext context, {
    required SocialContactType socialType,
    String? text,
  }) {
    final cubit = context.read<MTradePersonalLinkSetupCubit>();
    cubit.changeValueSocial(socialType, text ?? '');
  }

  _onNameChange(
    BuildContext context, {
    String? text,
  }) {
    final cubit = context.read<MTradePersonalLinkSetupCubit>();
    cubit.changeName(text ?? '');
  }
}
