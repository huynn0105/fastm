part of 'thread_messages_cubit.dart';

enum DisabledThreadType {
  left,
  blocked,
  beBlocked,
  deleted,
}

class ThreadMessagesState extends Equatable {
  const ThreadMessagesState({
    this.status = BlocStatus.initial,
    this.loadMoreStatus = BlocStatus.initial,
    this.scrollToQuoteStatus = BlocStatus.initial,
    this.data = const [],
    this.indexedMessages = const {},
    this.errorMessage,
    this.thread,
    this.quotedMessage,
    this.quotedType,
    this.enableLoadMore = true,
    this.highlightMessageID,
    this.isDisableThread = false,
    this.disabledThreadFields = const {},
    this.disableThreadMessage,
    this.isDataRemote = false,
  });

  final BlocStatus status;
  final BlocStatus loadMoreStatus;
  final BlocStatus scrollToQuoteStatus;
  final List<MessageModel> data;
  final Map<String, int> indexedMessages;
  final String? errorMessage;
  final ChatThreadModel? thread;
  final MessageModel? quotedMessage;
  final QuotedMessageType? quotedType;
  final bool enableLoadMore;
  final String? highlightMessageID;
  final bool isDisableThread;
  final Map<String, String> disabledThreadFields;
  final String? disableThreadMessage;
  final bool isDataRemote;

  @override
  List<Object?> get props => [
        status,
        loadMoreStatus,
        scrollToQuoteStatus,
        data,
        indexedMessages,
        errorMessage,
        thread,
        quotedMessage,
        quotedType,
        enableLoadMore,
        highlightMessageID,
        isDisableThread,
        disabledThreadFields,
        disableThreadMessage,
        isDataRemote,
      ];

  ThreadMessagesState copyWith({
    BlocStatus? status,
    BlocStatus? loadMoreStatus,
    BlocStatus? scrollToQuoteStatus,
    List<MessageModel>? data,
    Map<String, int>? indexedMessages,
    String? errorMessage,
    ChatThreadModel? thread,
    MessageModel? quotedMessage,
    QuotedMessageType? quotedType,
    bool? removeQuoted,
    bool? enableLoadMore,
    String? highlightMessageID,
    bool? isDisableThread,
    Map<String, String>? disabledThreadFields,
    String? disableThreadMessage,
    bool? isDataRemote,
  }) {
    return ThreadMessagesState(
      status: status ?? this.status,
      loadMoreStatus: loadMoreStatus ?? this.loadMoreStatus,
      scrollToQuoteStatus: scrollToQuoteStatus ?? this.scrollToQuoteStatus,
      data: data ?? this.data,
      indexedMessages: indexedMessages ?? this.indexedMessages,
      errorMessage: errorMessage,
      thread: thread ?? this.thread,
      quotedMessage: removeQuoted == true && quotedMessage == null ? null : (quotedMessage ?? this.quotedMessage),
      quotedType: removeQuoted == true && quotedType == null ? null : (quotedType ?? this.quotedType),
      enableLoadMore: enableLoadMore ?? this.enableLoadMore,
      highlightMessageID: highlightMessageID,
      isDisableThread: isDisableThread ?? this.isDisableThread,
      disabledThreadFields: disabledThreadFields ?? this.disabledThreadFields,
      disableThreadMessage: disableThreadMessage ?? this.disableThreadMessage,
      isDataRemote: isDataRemote ?? this.isDataRemote,
    );
  }
}
