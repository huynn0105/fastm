import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/constants.dart';
import 'package:flutter_module/common/toast/toast_provider.dart';
import 'package:flutter_module/features/chat/cubit/chat_general_media/chat_general_media_cubit.dart';
import 'package:flutter_module/features/chat/cubit/thread_messages/thread_messages_cubit.dart';
import 'package:flutter_module/features/chat/page/general_media/items/chat_general_media_item.dart';
import 'package:flutter_module/models/chat/message/message_model.dart';
import 'package:flutter_module/routes/routes.gr.dart';
import 'package:flutter_module/services/firebase/firebase_database/firebase_database_util.dart';

@RoutePage()
class ChatGeneralImagePage extends StatelessWidget {
  const ChatGeneralImagePage({super.key});

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<ChatGeneralMediaCubit, ChatGeneralMediaState>(
      builder: (context, state) {
        final medias = FirebaseDatabaseUtil.getMediasFromMessages(state.images);

        return GridView.count(
          physics: AppConstants.physics,
          padding: const EdgeInsets.only(
            left: 4,
            right: 4,
            top: 2,
          ),
          crossAxisCount: 4,
          crossAxisSpacing: 2,
          children: List.generate(
            medias.length,
            (index) {
              final item = medias[index];
              return ChatGeneralMediaItem(
                item: item,
                onTap: () {
                  context.pushRoute(
                    ChatPreviewImageRoute(
                      images: medias.map((e) => e.url).whereType<String>().toList(),
                      initialIndex: index,
                      onForwardMessage: (_) {
                        final message = FirebaseDatabaseUtil.getMessageFromMediaMessages(state.images, item);
                        _onForwardMessage(context, message: message);
                      },
                      onDeleteMessage: (_) {
                        final message = FirebaseDatabaseUtil.getMessageFromMediaMessages(state.images, item);
                        _onDeleteMessage(context, messageID: message?.uid);
                      },
                    ),
                  );
                },
              );
            },
          ),
        );
      },
    );
  }

  _onForwardMessage(BuildContext context, {MessageModel? message}) {
    context.pushRoute(ChatForwardMessageRoute(message: message));
  }

  _onDeleteMessage(BuildContext context, {String? messageID}) async {
    final cubit = context.read<ThreadMessagesCubit>();
    final mediaCubit = context.read<ChatGeneralMediaCubit>();
    await cubit.updateDeletedForMessage(
      messageID: messageID ?? '',
    );
    // mediaCubit.deletedImageMessage(messageID: messageID);
    if (context.mounted) {
      ToastProvider.instance.show(
        context: context,
        message: "Xoá tin nhắn thành công",
        backgroundColor: UIColors.green,
        duration: const Duration(seconds: 2),
      );
    }
    mediaCubit.getImageMessagesInThread();
  }
}
