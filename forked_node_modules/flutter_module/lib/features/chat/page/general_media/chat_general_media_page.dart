import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/widgets/appbar.dart';
import 'package:flutter_module/common/widgets/tabbar/tabbar.dart';
import 'package:flutter_module/features/chat/cubit/chat_general_media/chat_general_media_cubit.dart';
import 'package:flutter_module/features/chat/cubit/thread_messages/thread_messages_cubit.dart';
import 'package:flutter_module/models/chat/thread/chat_thread_model.dart';
import 'package:flutter_module/routes/routes.gr.dart';

class GeneralMedia {
  const GeneralMedia({
    this.id,
    this.link,
    this.thumbnail,
    this.type,
    this.duration,
  });

  final String? id;
  final String? link;
  final String? thumbnail;
  final String? type;
  final int? duration;
}

@RoutePage()
class ChatGeneralMediaPage extends StatefulWidget implements AutoRouteWrapper {
  const ChatGeneralMediaPage({
    super.key,
    required this.thread,
  });

  final ChatThreadModel thread;

  @override
  State<ChatGeneralMediaPage> createState() => _ChatGeneralMediaPageState();

  @override
  Widget wrappedRoute(BuildContext context) {
    return MultiBlocProvider(
      providers: [
        BlocProvider(
          create: (context) {
            final cubit = ChatGeneralMediaCubit();
            cubit.initState(thread);
            cubit.getImageMessagesInThread();
            cubit.getVideoMessagesInThread();
            return cubit;
          },
        ),
        BlocProvider(
          create: (context) {
            final cubit = ThreadMessagesCubit(threadID: thread.uid);
            cubit.initData(thread: thread);
            return cubit;
          },
        ),
      ],
      child: this,
    );
  }
}

class _ChatGeneralMediaPageState extends State<ChatGeneralMediaPage> with SingleTickerProviderStateMixin {
  late final TabController _tabController;

  @override
  void initState() {
    super.initState();
    _tabController = TabController(length: 2, vsync: this);
  }

  @override
  void dispose() {
    _tabController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: MFastSimpleAppBar(
        context: context,
        title: 'Ảnh, video, link đã gửi',
      ),
      body: AutoTabsRouter(
        routes: const [
          ChatGeneralImageRoute(),
          ChatGeneralVideoRoute(),
          // ChatGeneralLinkRoute(),
        ],
        builder: (BuildContext context, Widget child) {
          return Column(
            children: [
              UnderlineIndicatorTabbar(
                controller: _tabController,
                backgroundColor: UIColors.background,
                titles: const [
                  "Ảnh",
                  "Video",
                  // "Link",
                ],
                onTap: (index) {
                  AutoTabsRouter.of(context).setActiveIndex(index);
                },
              ),
              Expanded(
                child: child,
              ),
            ],
          );
        },
      ),
    );
  }
}
