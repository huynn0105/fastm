import 'dart:math' as math;
import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/widgets/swipeable_widget.dart';

class SwipeableMessageWidget extends StatelessWidget {
  const SwipeableMessageWidget({
    super.key,
    required this.id,
    required this.isMe,
    required this.child,
    this.disabled = false,
    this.threshold = 0.25,
    this.onSwiped,
  });

  final String id;
  final bool isMe;
  final Widget child;
  final bool disabled;
  final double threshold;
  final SwipeDirectionCallback? onSwiped;

  @override
  Widget build(BuildContext context) {
    if (disabled) {
      return child;
    }
    return Swipeable(
      key: ValueKey(id),
      direction: isMe ? SwipeDirection.endToStart : SwipeDirection.startToEnd,
      onSwiped: onSwiped,
      swipeThreshold: threshold,
      backgroundBuilder: (context, details) {
        double progress = math.min(details.progress, threshold) / threshold;

        Offset offset = Offset.lerp(
          const Offset(-24, 0),
          const Offset(24, 0),
          progress,
        )!;

        if (isMe) {
          offset = Offset(-offset.dx, offset.dy);
        }

        Color color = Color.lerp(UIColors.background, UIColors.defaultText, progress) ?? UIColors.defaultText;

        return Align(
          alignment: isMe ? Alignment.centerRight : Alignment.centerLeft,
          child: Transform.translate(
            offset: offset,
            child: Opacity(
              opacity: progress,
              child: SizedBox.square(
                dimension: 28,
                child: CustomPaint(
                  painter: AnimatedCircleBorderPainter(
                    progress: progress,
                    color: color,
                  ),
                  child: Center(
                    child: Icon(
                      Icons.reply_rounded,
                      size: lerpDouble(0, 20, progress),
                      color: color,
                    ),
                  ),
                ),
              ),
            ),
          ),
        );
      },
      child: child,
    );
  }
}
