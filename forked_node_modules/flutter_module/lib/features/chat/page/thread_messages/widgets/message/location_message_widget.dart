import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/map_utils.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/env_data.dart';
import 'package:flutter_module/features/chat/page/thread_messages/inheritance/message_widget_provider.dart';
import 'package:flutter_module/models/chat/message/message_wrapper_model.dart';

class LocationMessageWidget extends StatelessWidget {
  const LocationMessageWidget({super.key, required this.data});

  final MessageWrapperModel data;

  @override
  Widget build(BuildContext context) {
    final borderRadius = MessageWidgetProvider.of(context).borderRadius;
    final message = data.message;
    final isMe = data.message?.isMe() == true;
    final location = message?.location;
    final url = _url(location?.latitude, location?.longitude);

    ///
    return Container(
      width: 250,
      constraints: const BoxConstraints(
        minHeight: 35,
      ),
      decoration: BoxDecoration(
        borderRadius: borderRadius,
        color: isMe ? UIColors.primaryColor : UIColors.white,
        border: Border.all(color: isMe ? UIColors.primaryColor : UIColors.white),
      ),
      child: Column(
        mainAxisSize: MainAxisSize.min,
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          SplashButton(
            onTap: () {
              MapUtils.openMap(
                context,
                location?.latitude.toString(),
                location?.longitude.toString(),
              );
            },
            child: Container(
              decoration: BoxDecoration(
                color: UIColors.gray,
                borderRadius: borderRadius.copyWith(
                  bottomLeft: Radius.zero,
                  bottomRight: Radius.zero,
                ),
              ),
              child: AppImage.network(
                url: url,
                width: 250,
                height: 150,
                borderRadius: borderRadius.copyWith(
                  bottomLeft: Radius.zero,
                  bottomRight: Radius.zero,
                ),
              ),
            ),
          ),
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 10),
            child: Text(
              message?.getLocationTitle() ?? '',
              style: UITextStyle.regular.copyWith(
                fontSize: 14,
                color: isMe ? UIColors.white : UIColors.defaultText,
              ),
            ),
          ),
        ],
      ),
    );
  }

  String _url(double? lat, double? long) {
    Map<String, String> markerData = {
      'icon': 'https://f000.backblazeb2.com/file/appay-rc-cloudcms/202309102250178923.png',
      // 'scale': '2',
      // 'size': 'middle',
      // 'color': 'red',
    };
    String marker = markerData.entries.map((e) => '${e.key}:${e.value}').join('|');
    Uri uri = Uri(
      scheme: 'https',
      host: 'maps.googleapis.com',
      port: 443,
      path: '/maps/api/staticmap',
      queryParameters: {
        'center': '$lat,$long',
        'zoom': '18',
        'size': '400x200',
        'maptype': 'roadmap',
        'key': EnvData.instance.googleApiKey,
        'markers': '$marker|$lat,$long'
      },
    );
    // https://maps.googleapis.com/maps/api/staticmap?center=37.785834%2C-122.406417&zoom=18&size=400x200&maptype=roadmap&key=AIzaSyDnuJjwZlDYChN57Lit45mh_heGUU-ozZQ&markers=icon%3Ahttps%3A%2F%2Ff000.backblazeb2.com%2Ffile%2Fappay-rc-cloudcms%2F202309102250178923.png%7C37.785834%2C-122.406417
    // https://maps.googleapis.com/maps/api/staticmap?center=37.785834%2C-122.406417&zoom=18&size=400x200&maptype=roadmap&key=AIzaSyAmd5tJtN6eP-95B1Rb6pUwTu8l1QoWu-k&markers=icon%3Ahttps%3A%2F%2Ff000.backblazeb2.com%2Ffile%2Fappay-rc-cloudcms%2F202309102250178923.png%7C37.785834%2C-122.406417
    return uri.toString();
  }
}
