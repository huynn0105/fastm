import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/features/chat/page/thread_messages/inheritance/message_widget_provider.dart';

class RoundedMessageWidget extends StatelessWidget {
  const RoundedMessageWidget({
    super.key,
    required this.isMe,
    required this.isFirstMessageInGroup,
    required this.isLastMessageInGroup,
    required this.child,
    this.showBorder = false,
  });

  final bool isMe;
  final bool isFirstMessageInGroup;
  final bool isLastMessageInGroup;
  final bool showBorder;
  final Widget child;

  @override
  Widget build(BuildContext context) {
    double minRadius = 4;
    double maxRadius = 16;
    BorderRadius borderRadius = isMe
        ? BorderRadius.only(
            topLeft: const Radius.circular(16),
            topRight: Radius.circular(isFirstMessageInGroup ? maxRadius : minRadius),
            bottomLeft: const Radius.circular(16),
            bottomRight: Radius.circular(isLastMessageInGroup ? maxRadius : minRadius),
          )
        : BorderRadius.only(
            topLeft: Radius.circular(isFirstMessageInGroup ? maxRadius : minRadius),
            topRight: const Radius.circular(16),
            bottomLeft: Radius.circular(isLastMessageInGroup ? maxRadius : minRadius),
            bottomRight: const Radius.circular(16),
          );
    MainAxisAlignment columnMainAxis = MainAxisAlignment.start;
    CrossAxisAlignment columnCrossAxis = isMe ? CrossAxisAlignment.end : CrossAxisAlignment.start;
    MainAxisAlignment rowMainAxis = isMe == true ? MainAxisAlignment.end : MainAxisAlignment.start;
    CrossAxisAlignment rowCrossAxis = CrossAxisAlignment.start;

    ///
    return MessageWidgetProvider(
      minRadius: minRadius,
      maxRadius: maxRadius,
      borderRadius: borderRadius,
      columnMainAxis: columnMainAxis,
      columnCrossAxis: columnCrossAxis,
      rowMainAxis: rowMainAxis,
      rowCrossAxis: rowCrossAxis,
      showBorder: showBorder,
      child: child,
    );
  }
}
