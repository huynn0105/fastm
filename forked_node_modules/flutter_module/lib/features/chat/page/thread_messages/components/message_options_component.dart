import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/features/chat/page/thread_messages/components/reaction_picker_component.dart';
import 'package:flutter_module/features/chat/page/thread_messages/widgets/option_button.dart';
import 'package:flutter_module/models/chat/message/message_wrapper_model.dart';

class MessageOptionsComponent extends StatelessWidget {
  const MessageOptionsComponent({
    super.key,
    required this.data,
    required this.messageWidget,
    required this.onReacted,
    required this.onCopied,
    required this.onReplied,
    required this.onForwarded,
    required this.onEdited,
    required this.onRecalled,
    required this.onDeleted,
    this.showReaction = true,
    this.showCopy = true,
    this.showReply = true,
    this.showForward = true,
    this.showEdit = true,
    this.showRecall = true,
    this.showDelete = true,
  });

  final MessageWrapperModel data;
  final Widget messageWidget;

  final bool showReaction;
  final bool showCopy;
  final bool showReply;
  final bool showForward;
  final bool showEdit;
  final bool showRecall;
  final bool showDelete;
  final Function(String?) onReacted;
  final Function() onCopied;
  final Function() onReplied;
  final Function() onForwarded;
  final Function() onEdited;
  final Function() onRecalled;
  final Function() onDeleted;

  @override
  Widget build(BuildContext context) {
    return ListView(
      shrinkWrap: true,
      padding: const EdgeInsets.all(32),
      children: [
        GestureDetector(
          behavior: HitTestBehavior.opaque,
          onTap: Navigator.of(context).pop,
          child: messageWidget,
        ),
        const SizedBox(
          height: 10,
        ),
        ReactionPickerComponent(
          value: data.message?.getMyReaction() ?? '',
          onSelected: (value) {
            onReacted(value);
            Navigator.of(context).pop();
          },
        ),
        const SizedBox(
          height: 10,
        ),
        Container(
          width: 300,
          decoration: BoxDecoration(
            color: UIColors.white,
            borderRadius: BorderRadius.circular(8),
          ),
          child: GridView.count(
            shrinkWrap: true,
            physics: const NeverScrollableScrollPhysics(),
            crossAxisCount: 3,
            childAspectRatio: 1.5,
            children: [
              if (showCopy)
                OptionButton(
                  asset: 'ic_mtrade_copy',
                  label: 'Sao chép',
                  onTap: () {
                    Navigator.of(context).pop();
                    onCopied();
                  },
                ),
              if (showReply)
                OptionButton(
                  asset: 'ic_chat_reply',
                  label: 'Trả lời',
                  onTap: () {
                    Navigator.of(context).pop();
                    onReplied();
                  },
                ),
              if (showForward)
                OptionButton(
                  asset: 'ic_chat_forward',
                  label: 'Chuyển tiếp',
                  onTap: () {
                    Navigator.of(context).pop();
                    onForwarded();
                  },
                ),
              if (showEdit)
                OptionButton(
                  asset: 'ic_chat_edit',
                  label: 'Chỉnh sửa',
                  onTap: () {
                    Navigator.of(context).pop();
                    onEdited();
                  },
                ),
              if (showRecall)
                OptionButton(
                  asset: 'ic_chat_recall',
                  label: 'Thu hồi',
                  onTap: () {
                    Navigator.of(context).pop();
                    onRecalled();
                  },
                ),
              if (showDelete)
                OptionButton(
                  asset: 'ic_chat_delete',
                  label: 'Xóa',
                  onTap: () {
                    Navigator.of(context).pop();
                    onDeleted();
                  },
                ),
            ],
          ),
        ),
      ],
    );
  }
}
