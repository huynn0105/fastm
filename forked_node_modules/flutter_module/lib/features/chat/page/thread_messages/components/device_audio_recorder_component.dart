import 'package:audio_waveforms/audio_waveforms.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/constants.dart';
import 'package:flutter_module/common/extension/duration_extension.dart';
import 'package:flutter_module/common/size.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/features/chat/common/typedef.dart';
import 'package:flutter_module/features/chat/cubit/device_audio_recorder/device_audio_recorder_cubit.dart';
import 'package:flutter_sound/flutter_sound.dart';

class DeviceAudioRecorderComponent extends StatelessWidget {
  const DeviceAudioRecorderComponent({
    super.key,
    required this.onSent,
    this.height = AppConstants.keyboardHeight,
  });

  final double height;
  final OnMessageAudioSent onSent;

  @override
  Widget build(BuildContext context) {
    final cubit = context.read<DeviceAudioRecorderCubit>();
    return Container(
      height: height,
      color: UIColors.lightGray,
      alignment: Alignment.topCenter,
      padding: const EdgeInsets.symmetric(horizontal: 16),
      child: Column(
        mainAxisSize: MainAxisSize.min,
        children: [
          const SizedBox(
            height: 10,
          ),
          StreamBuilder<Duration>(
            stream: cubit.waveRecorderController.onCurrentDuration,
            builder: (context, snapshot) {
              final value = snapshot.hasData && snapshot.data != null ? snapshot.data! : Duration.zero;
              return Text(
                value.getMMss(),
                style: UITextStyle.bold.copyWith(
                  fontSize: 20,
                  height: 1,
                ),
              );
            },
          ),
          Row(
            children: [
              StreamBuilder<RecorderState>(
                stream: cubit.waveRecorderController.onRecorderStateChanged,
                builder: (context, snapshot) {
                  final value = snapshot.hasData && snapshot.data != null ? snapshot.data! : RecorderState.initialized;
                  return SplashButton(
                    onTap: () => cubit.startWaveRecorder(),
                    borderRadius: BorderRadius.circular(50),
                    isDisabled: value.isRecording,
                    child: Container(
                      padding: const EdgeInsets.all(10),
                      decoration: BoxDecoration(
                        color: value.isRecording ? UIColors.gray : UIColors.green,
                        shape: BoxShape.circle,
                      ),
                      child: const Icon(
                        Icons.mic_rounded,
                        size: 36,
                        color: UIColors.white,
                      ),
                    ),
                  );
                },
              ),
              Expanded(
                child: AudioWaveforms(
                  enableGesture: false,
                  size: const Size(250, 50),
                  recorderController: cubit.waveRecorderController,
                  waveStyle: const WaveStyle(
                    waveColor: UIColors.darkGray,
                    extendWaveform: true,
                    showMiddleLine: false,
                  ),
                  decoration: BoxDecoration(
                    color: UIColors.background,
                    borderRadius: BorderRadius.circular(12),
                  ),
                  padding: const EdgeInsets.only(left: 16),
                  margin: const EdgeInsets.symmetric(horizontal: 16),
                ),
              ),
              StreamBuilder<RecorderState>(
                stream: cubit.waveRecorderController.onRecorderStateChanged,
                builder: (context, snapshot) {
                  final value = snapshot.hasData && snapshot.data != null ? snapshot.data! : RecorderState.initialized;
                  return SplashButton(
                    onTap: () => cubit.stopWaveRecorder(onSuccess: (value) => onSent(context, value)),
                    borderRadius: BorderRadius.circular(50),
                    isDisabled: !value.isRecording,
                    child: Container(
                      padding: const EdgeInsets.all(10),
                      decoration: BoxDecoration(
                        color: !value.isRecording ? UIColors.gray : UIColors.red,
                        shape: BoxShape.circle,
                      ),
                      child: const Icon(
                        Icons.pause_rounded,
                        size: 36,
                        color: UIColors.white,
                      ),
                    ),
                  );
                },
              ),
            ],
          ),
        ],
      ),
    );
  }
}
