import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/constants.dart';
import 'package:flutter_module/common/extension/list_extension.dart';
import 'package:flutter_module/common/size.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/features/chat/common/typedef.dart';
import 'package:flutter_module/features/chat/cubit/device_icon/device_icon_cubit.dart';
import 'package:flutter_module/features/chat/page/thread_messages/widgets/icon_widget.dart';

class DeviceIconComponent extends StatelessWidget {
  const DeviceIconComponent({
    super.key,
    required this.onInputSelected,
    required this.onEmojiSelected,
    required this.onStickerSelected,
    required this.onEmojiDeleted,
    this.height = AppConstants.keyboardHeight,
  });

  final Function(String?) onEmojiDeleted;
  final Function() onInputSelected;
  final OnMessageEmojiSent onEmojiSelected;
  final OnMessageStickerSent onStickerSelected;
  final double height;

  @override
  Widget build(BuildContext context) {
    final cubit = context.read<DeviceIconCubit>();
    return BlocBuilder<DeviceIconCubit, DeviceIconState>(
      builder: (context, state) {
        if (state.status.isInitial) {
          WidgetsBinding.instance.addPostFrameCallback((_) {
            context.read<DeviceIconCubit>().fetchData();
          });
        }
        final group = state.selectedGroup ?? '';
        final data = state.data[group] ?? [];
        final isEmoji = group == 'emoji';
        return Container(
          height: height,
          color: UIColors.background,
          child: Column(
            children: [
              Expanded(
                child: Theme(
                  data: ThemeData(
                    primarySwatch: Colors.green,
                    scrollbarTheme: ScrollbarThemeData(
                      radius: const Radius.circular(8),
                      thickness: MaterialStateProperty.all(4),
                      thumbColor: MaterialStateProperty.all(UIColors.gray),
                      trackColor: MaterialStateProperty.all(UIColors.white),
                      trackBorderColor: MaterialStateProperty.all(Colors.transparent),
                    ),
                  ),
                  child: Scrollbar(
                    child: GridView.count(
                      crossAxisCount: isEmoji ? 7 : 4,
                      mainAxisSpacing: 0,
                      crossAxisSpacing: 0,
                      padding: EdgeInsets.zero,
                      children: List.generate(
                        data.length,
                        (index) {
                          final item = data[index];
                          return IconWidget(
                            icon: item,
                            size: 25,
                            onEmojiSelected: (value) => _onEmojiSelected(context, value),
                            onStickerSelected: (value) => _onStickerSelected(context, value),
                          );
                        },
                      ),
                    ),
                  ),
                ),
              ),
              Container(
                height: 50 + AppSize.instance.safeBottom,
                color: UIColors.white,
                alignment: Alignment.topCenter,
                child: SafeArea(
                  child: Row(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      SplashButton(
                        onTap: onInputSelected,
                        child: Container(
                          width: 50,
                          height: 50,
                          alignment: Alignment.center,
                          child: Text(
                            'Aa',
                            style: UITextStyle.regular.copyWith(
                              fontSize: 20,
                              color: UIColors.gray,
                              height: 1,
                            ),
                          ),
                        ),
                      ),
                      Expanded(
                        child: SizedBox(
                          height: 50,
                          child: Scrollbar(
                            child: Padding(
                              padding: const EdgeInsets.only(bottom: 5),
                              child: ListView.builder(
                                scrollDirection: Axis.horizontal,
                                itemBuilder: (context, index) {
                                  final key = state.data.keys.toList()[index];
                                  final item = state.data[key].getFirst();
                                  final isSelected = key == group;
                                  return SplashButton(
                                    onTap: () => cubit.selectGroup(key),
                                    child: Container(
                                      width: 50,
                                      height: 50,
                                      alignment: Alignment.center,
                                      decoration: BoxDecoration(
                                        border: !isSelected
                                            ? null
                                            : const Border(
                                                bottom: BorderSide(
                                                  width: 2,
                                                  color: UIColors.primaryColor,
                                                ),
                                              ),
                                      ),
                                      child: IconWidget(
                                        icon: item,
                                        size: 15,
                                        width: 45,
                                        height: 45,
                                      ),
                                    ),
                                  );
                                },
                                itemCount: state.data.keys.length,
                              ),
                            ),
                          ),
                        ),
                      ),
                      Container(
                        height: 50,
                        width: 50,
                        alignment: Alignment.center,
                        child: IconButton(
                          icon: const Icon(
                            Icons.backspace_rounded,
                            size: 24,
                            color: UIColors.grayText,
                          ),
                          padding: const EdgeInsets.all(5),
                          onPressed: () => _onEmojiDeleted(context),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
        );
      },
    );
  }

  _onEmojiSelected(BuildContext context, String code) {
    final cubit = context.read<DeviceIconCubit>();
    cubit.selectEmoji(code);
    onEmojiSelected(context, code);
  }

  _onEmojiDeleted(BuildContext context) {
    final cubit = context.read<DeviceIconCubit>();
    final code = cubit.state.selectedEmojis.getLast();
    if (code != null) {
      cubit.removeLastEmoji();
    }
    onEmojiDeleted(code);
  }

  _onStickerSelected(BuildContext context, String code) {
    onStickerSelected(context, code);
  }
}
