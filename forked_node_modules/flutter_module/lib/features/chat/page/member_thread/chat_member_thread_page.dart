import 'package:auto_route/auto_route.dart';
import 'package:collection/collection.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/app_data.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/appbar.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/features/chat/cubit/chat_thread/chat_thread_cubit.dart';
import 'package:flutter_module/features/chat/page/chat_setting/items/chat_member_item.dart';
import 'package:flutter_module/models/chat/thread/chat_thread_model.dart';
import 'package:flutter_module/routes/routes.gr.dart';

@RoutePage()
class ChatMemberThreadPage extends StatelessWidget {
  const ChatMemberThreadPage({
    super.key,
    required this.thread,
  });

  final ChatThreadModel thread;

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<ChatThreadCubit, ChatThreadState>(
      builder: (context, state) {
        final ChatThreadModel? cubitThread = state.threads.firstWhereOrNull(
          (element) => element.uid == thread.uid,
        );

        if (cubitThread == null) {
          return Scaffold(
            appBar: MFastSimpleAppBar(
              context: context,
              title: 'Thành viên',
            ),
          );
        }

        final isSystemThread = cubitThread.isSystemThread();

        return Scaffold(
          appBar: MFastSimpleAppBar(
            context: context,
            title: 'Thành viên',
            actions: [
              if (!isSystemThread)
                AppSplashButton(
                  onTap: () {
                    context.pushRoute(ChatAddMemberThreadRoute(thread: cubitThread));
                  },
                  child: const AppImage.asset(
                    asset: "ic_add_user_outline",
                    width: 24,
                    height: 24,
                    color: UIColors.grayText,
                  ),
                )
            ],
          ),
          body: Padding(
            padding: const EdgeInsets.symmetric(horizontal: 16),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                const SizedBox(
                  height: 20,
                ),
                Text(
                  'Thành viên (${cubitThread.users?.length ?? 0})',
                  style: UITextStyle.medium.copyWith(
                    fontSize: 16,
                    color: UIColors.grayText,
                  ),
                ),
                const SizedBox(
                  height: 8,
                ),
                Expanded(
                  child: Container(
                    decoration: BoxDecoration(
                      borderRadius: BorderRadius.circular(8),
                      color: UIColors.white,
                    ),
                    padding: const EdgeInsets.all(12),
                    child: ListView(
                      shrinkWrap: true,
                      padding: EdgeInsets.zero,
                      children: [
                        ...(cubitThread.usersDetails ?? []).map((e) {
                          return ChatMemberItem(
                            item: e,
                            isMe: e.uid == AppData.instance.userID,
                            isAdmin: e.uid == cubitThread.adminID,
                            showDivider: true,
                          );
                        })
                      ],
                    ),
                  ),
                ),
              ],
            ),
          ),
        );
      },
    );
  }
}
