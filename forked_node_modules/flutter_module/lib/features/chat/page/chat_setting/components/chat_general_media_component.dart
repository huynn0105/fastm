import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/features/chat/cubit/chat_general_media/chat_general_media_cubit.dart';
import 'package:flutter_module/features/chat/page/general_media/items/chat_general_media_item.dart';
import 'package:flutter_module/models/chat/file/media_model.dart';
import 'package:flutter_module/models/chat/message/message_model.dart';
import 'package:flutter_module/models/chat/thread/chat_thread_model.dart';
import 'package:flutter_module/routes/routes.gr.dart';

class ChatGeneralMediaComponent extends StatelessWidget {
  const ChatGeneralMediaComponent({
    super.key,
    required this.thread,
  });

  final ChatThreadModel thread;

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<ChatGeneralMediaCubit, ChatGeneralMediaState>(
      builder: (context, state) {
        List<MessageModel> data = [...state.images, ...state.videos];
        data.sort(
          (a, b) => (b.createTime ?? 0).compareTo(a.createTime ?? 0),
        );

        final medias = getMediaFromMessage(data);

        return Container(
          padding: const EdgeInsets.all(12),
          decoration: BoxDecoration(
            color: UIColors.white,
            borderRadius: BorderRadius.circular(8),
          ),
          child: Column(
            children: [
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Text(
                    'Ảnh, video đã gửi',
                    style: UITextStyle.medium.copyWith(
                      fontSize: 16,
                      color: UIColors.grayText,
                    ),
                  ),
                  SplashButton(
                    onTap: () {
                      context.pushRoute(ChatGeneralMediaRoute(thread: thread));
                    },
                    child: const AppImage.asset(
                      asset: 'ic_arrow_right',
                      width: 24,
                      height: 24,
                    ),
                  )
                ],
              ),
              if (medias.isNotEmpty) ...{
                const SizedBox(
                  height: 6,
                ),
                GridView.count(
                  physics: const NeverScrollableScrollPhysics(),
                  padding: EdgeInsets.zero,
                  shrinkWrap: true,
                  crossAxisCount: 5,
                  crossAxisSpacing: 8,
                  children: [
                    ...medias
                        .map(
                          (item) => ChatGeneralMediaItem(item: item),
                        )
                        .toList(),
                    SplashButton(
                      onTap: () {
                        context.pushRoute(ChatGeneralMediaRoute(thread: thread));
                      },
                      child: Container(
                        decoration: BoxDecoration(
                          borderRadius: BorderRadius.circular(6),
                          color: UIColors.background,
                        ),
                        child: const Center(
                          child: AppImage.asset(
                            asset: 'ic_arrow_long_right',
                            width: 24,
                            height: 24,
                          ),
                        ),
                      ),
                    )
                  ],
                ),
              }
            ],
          ),
        );
      },
    );
  }

  getMediaFromMessage(List<MessageModel> messages) {
    List<MediaModel> medias = [];

    for (var message in messages) {
      if (medias.length >= 4) {
        break;
      }
      for (var m in (message.medias ?? [])) {
        medias.add(m);
        if (medias.length >= 4) {
          break;
        }
      }
    }

    return medias;
  }
}
