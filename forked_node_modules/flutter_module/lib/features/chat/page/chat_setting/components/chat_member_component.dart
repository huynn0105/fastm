import 'package:auto_route/auto_route.dart';
import 'package:collection/collection.dart';
import 'package:flutter/material.dart';
import 'package:flutter_module/app_data.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/features/chat/page/chat_setting/items/chat_add_member_item.dart';
import 'package:flutter_module/features/chat/page/chat_setting/items/chat_member_item.dart';
import 'package:flutter_module/models/chat/thread/chat_thread_model.dart';
import 'package:flutter_module/routes/routes.gr.dart';

class ChatMemberComponent extends StatelessWidget {
  const ChatMemberComponent({
    super.key,
    required this.thread,
    required this.isSystemThread,
  });

  final ChatThreadModel thread;
  final bool isSystemThread;

  @override
  Widget build(BuildContext context) {
    List<ThreadUserDetail> listUser = thread.usersDetails ?? [];

    if (listUser.length > 3) {
      listUser = listUser.slice(0, 3);
    }

    return Container(
      padding: const EdgeInsets.only(left: 12, right: 12, bottom: 10),
      decoration: BoxDecoration(
        color: UIColors.white,
        borderRadius: BorderRadius.circular(8),
      ),
      child: Column(
        children: [
          if (!isSystemThread)
            SplashButton(
              onTap: () {
                context.pushRoute(ChatAddMemberThreadRoute(thread: thread));
              },
              child: const ChatAddMemberItem(),
            ),
          ...listUser.map((e) {
            return ChatMemberItem(
              item: e,
              isMe: e.uid == AppData.instance.userID,
              isAdmin: e.uid == thread.adminID,
            );
          })
        ],
      ),
    );
  }
}
