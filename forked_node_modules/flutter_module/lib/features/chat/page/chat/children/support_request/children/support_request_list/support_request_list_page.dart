import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/widgets/loadmore_widget.dart';
import 'package:flutter_module/features/chat/page/chat/children/support_request/children/support_request_list/items/support_request_item.dart';

import '../../../../../../cubit/support_request/chat_support_request_cubit.dart';

@RoutePage()
class ChatSupportRequestListPage extends StatelessWidget {
  const ChatSupportRequestListPage({
    super.key,
    required this.type,
  });

  final String type;

  @override
  Widget build(BuildContext context) {
    return BlocProvider(
      create: (context) => ChatSupportRequestCubit(type: type)..fetchData(type: type),
      child: _ChatSupportRequestListPage(
        type: type,
      ),
    );
  }
}

class _ChatSupportRequestListPage extends StatelessWidget {
  const _ChatSupportRequestListPage({
    required this.type,
  });

  final String type;

  @override
  Widget build(BuildContext context) {
    return Stack(
      children: [
        // EmptySupportRequestList()
        BlocBuilder<ChatSupportRequestCubit, ChatSupportRequestState>(
          builder: (context, state) {
            return LoadMoreWidget(
              onRefresh: () {
                return _onRefresh(context);
              },
              onLoadMore: () {
                return _onLoadMore(context);
              },
              child: ListView.builder(
                padding: const EdgeInsets.all(0),
                itemCount: state.supportRequests?.tickets?.length ?? 0,
                itemBuilder: (context, index) {
                  final item = state.supportRequests?.tickets?[index];
                  return SupportRequestItem(
                    item: item,
                  );
                },
              ),
            );
          },
        )
      ],
    );
  }

  _onRefresh(BuildContext context) {
    final cubit = context.read<ChatSupportRequestCubit>();
    return cubit.fetchData();
  }

  _onLoadMore(BuildContext context) {
    final cubit = context.read<ChatSupportRequestCubit>();
    return cubit.fetchData(loadmore: true);
  }
}
