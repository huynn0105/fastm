import 'package:auto_route/auto_route.dart';
import 'package:cxgenie/cxgenie.dart';
import 'package:cxgenie/enums/language.dart';
import 'package:flutter/material.dart';
import 'package:flutter_module/app_data.dart';
import 'package:flutter_module/common/enum/chat/genie_type.dart';
import 'package:flutter_module/common/widgets/appbar.dart';

// String cxgenieTicketScript = '''
// <!DOCTYPE html>
//     <html>
//       <head>
//         <meta name="viewport" content="initial-scale=1.0, maximum-scale=1.0" />
//       </head>
//       <body style="padding: 0; margin: 0">
//         <object style="width: 100vw; height: 100vh" data="https://ticket.cxgenie.ai?wid=fae1a73c-0768-43d7-9ce3-94e994445e3e" />
//       </body>
//     </html>
// ''';

// <object style="width: 100vw; height: 100vh" data="https://ticket.cxgenie.ai?wid=fae1a73c-0768-43d7-9ce3-94e994445e3e" />

@RoutePage()
class ChatBotPage extends StatelessWidget {
  const ChatBotPage({
    super.key,
    @QueryParam('title') this.title,
    @QueryParam('botID') this.botID,
    @QueryParam('type') this.type,
  });

  final String? title;
  final String? botID;
  final String? type;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: MFastSimpleAppBar(
        context: context,
        title: title ?? '',
      ),
      body: ChatSupportRequestPage(
        botID: botID,
        type: type,
      ),
    );
  }
}

@RoutePage()
class ChatSupportRequestPage extends StatefulWidget {
  const ChatSupportRequestPage({
    super.key,
    this.botID,
    this.type,
  });

  final String? botID;
  final String? type;

  @override
  State<ChatSupportRequestPage> createState() => _ChatSupportRequestPageState();
}

class _ChatSupportRequestPageState extends State<ChatSupportRequestPage> {
  // late final WebViewController _controller;

  @override
  void initState() {
    super.initState();
    // _onInitWebviewController(context);
  }

  @override
  Widget build(BuildContext context) {
    return SafeArea(
      top: false,
      child: widget.type == GenieType.CHAT.name
          ? Chat(
              botId: widget.botID ?? '',
              userToken: AppData.instance.accessToken,
              language: LanguageOptions.vi,
            )
          : Tickets(
              botId: widget.botID ?? '',
              userToken: AppData.instance.accessToken,
              language: LanguageOptions.vi,
            ),
    );
    // return Scaffold(
    //   body: WebViewWidget(controller: _controller),
    // );
    // return Scaffold(
    //   body: Padding(
    //     padding: const EdgeInsets.symmetric(horizontal: 16),
    //     child: Column(
    //       crossAxisAlignment: CrossAxisAlignment.start,
    //       children: [
    //         const SizedBox(
    //           height: 18,
    //         ),
    //         Text(
    //           "Danh sách yêu cầu hỗ trợ",
    //           style: UITextStyle.regular.copyWith(
    //             color: UIColors.extraGrayText,
    //           ),
    //         ),
    //         const SizedBox(
    //           height: 14,
    //         ),
    //         Expanded(
    //           child: AutoTabsRouter.tabBar(
    //             physics: AppConstants.physics,
    //             routes: [
    //               AllChatSupportRequestListRoute(type: SupportRequestType.all.value),
    //               PendingChatSupportRequestListRoute(type: SupportRequestType.pending.value),
    //               RespondedChatSupportRequestListRoute(type: SupportRequestType.responded.value),
    //               ClosedChatSupportRequestListRoute(type: SupportRequestType.closed.value),
    //             ],
    //             builder: (context, child, tabController) {
    //               return Column(
    //                 children: [
    //                   SingleRoundedIndicatorTabbar(
    //                     controller: tabController,
    //                     titles: SupportRequestType.values.map((e) => "0 ${e.title}").toList(),
    //                   ),
    //                   const SizedBox(
    //                     height: 16,
    //                   ),
    //                   Expanded(
    //                     child: child,
    //                   ),
    //                 ],
    //               );
    //             },
    //           ),
    //         )
    //       ],
    //     ),
    //   ),
    //   backgroundColor: Colors.transparent,
    //   floatingActionButtonLocation: FloatingActionButtonLocation.endFloat,
    //   floatingActionButton: Container(
    //     margin: const EdgeInsets.only(bottom: 12),
    //     child: Row(
    //       mainAxisSize: MainAxisSize.min,
    //       // mainAxisAlignment: MainAxisAlignment.end,
    //       children: [
    //         Container(
    //           height: 32,
    //           padding: const EdgeInsets.only(left: 12, right: 16),
    //           decoration: const BoxDecoration(
    //             image: DecorationImage(
    //               image: AssetImage(
    //                 'assets/images/ic_rect_with_right_arrow.png',
    //               ),
    //               fit: BoxFit.fill,
    //             ),
    //           ),
    //           child: Center(
    //             child: Text(
    //               "Tạo yêu cầu hỗ trợ",
    //               style: UITextStyle.medium.copyWith(
    //                 color: UIColors.white,
    //               ),
    //             ),
    //           ),
    //         ),
    //         const SizedBox(
    //           width: 6,
    //         ),
    //         const AppImage.asset(
    //           asset: 'ic_add_support_request',
    //           width: 52,
    //           height: 52,
    //         ),
    //       ],
    //       // icon: Container(
    //       //   height: 32,
    //       //   padding: const EdgeInsets.only(left: 12, right: 16),
    //       //   decoration: const BoxDecoration(
    //       //     image: DecorationImage(
    //       //       image: AssetImage(
    //       //         'assets/images/ic_rect_with_right_arrow.png',
    //       //       ),
    //       //       fit: BoxFit.fill,
    //       //     ),
    //       //   ),
    //       //   child: Center(
    //       //       child: Text(
    //       //     "Tạo yêu cầu hỗ trợ",
    //       //     style: UITextStyle.medium.copyWith(
    //       //       color: UIColors.white,
    //       //     ),
    //       //   )),
    //       // ),
    //       // label: const AppImage.asset(
    //       //   asset: 'ic_add_support_request',
    //       //   width: 52,
    //       //   height: 52,
    //       // ),
    //       // extendedIconLabelSpacing: 6,
    //       // backgroundColor: Colors.transparent,
    //       // elevation: 0,
    //       // onPressed: () {},
    //     ),
    //   ),
    // );
  }

// _onInitWebviewController(BuildContext context) {
//   late final PlatformWebViewControllerCreationParams params;
//   if (WebViewPlatform.instance is WebKitWebViewPlatform) {
//     params = WebKitWebViewControllerCreationParams(
//       allowsInlineMediaPlayback: true,
//       mediaTypesRequiringUserAction: const <PlaybackMediaTypes>{},
//     );
//   } else {
//     params = const PlatformWebViewControllerCreationParams();
//   }
//
//   final WebViewController controller = WebViewController.fromPlatformCreationParams(params);
//
//   controller
//     ..setJavaScriptMode(JavaScriptMode.unrestricted)
//     ..setBackgroundColor(const Color(0x00000000))
//     ..setNavigationDelegate(
//       NavigationDelegate(
//         onProgress: (int progress) {
//           debugPrint('WebView is loading (progress : $progress%)');
//         },
//         onPageStarted: (String url) {
//           debugPrint('Page started loading: $url');
//         },
//         onPageFinished: (String url) {
//           debugPrint('Page finished loading: $url');
//         },
//         onWebResourceError: (WebResourceError error) {
//           debugPrint('''
//             Page resource error:
//             code: error.errorCode
//             description: error.description
//             errorType: error.errorType
//             isForMainFrame: error.isForMainFrame
//           ''');
//         },
//         onNavigationRequest: (NavigationRequest request) {
//           if (request.url.startsWith('https://www.youtube.com/')) {
//             debugPrint('blocking navigation to request.url');
//             return NavigationDecision.prevent;
//           }
//           debugPrint('allowing navigation to request.url');
//           return NavigationDecision.navigate;
//         },
//         onUrlChange: (UrlChange change) {
//           debugPrint('url change to change.url');
//         },
//       ),
//     )
//     ..addJavaScriptChannel(
//       'Toaster',
//       onMessageReceived: (JavaScriptMessage message) {
//         ScaffoldMessenger.of(context).showSnackBar(
//           SnackBar(content: Text(message.message)),
//         );
//       },
//     )
//     ..loadHtmlString(cxgenieTicketScript);
//
//   if (controller.platform is AndroidWebViewController) {
//     AndroidWebViewController.enableDebugging(true);
//     (controller.platform as AndroidWebViewController).setMediaPlaybackRequiresUserGesture(false);
//   }
//
//   _controller = controller;
// }
}
