import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/app_data.dart';
import 'package:flutter_module/common/bottom_sheet/bottom_sheet_provider.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/global_function.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/avatar/chat_avatar.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/features/chat/cubit/chat_thread/chat_thread_cubit.dart';
import 'package:flutter_module/models/chat/contact/chat_contact_model.dart';
import 'package:flutter_module/models/chat/thread/chat_thread_model.dart';
import 'package:flutter_module/routes/routes.gr.dart';

class ContactItem extends StatelessWidget {
  const ContactItem({
    super.key,
    required this.item,
    this.index,
  });

  final ChatContactModel item;
  final int? index;

  @override
  Widget build(BuildContext context) {
    return ListTile(
      onTap: () {
        BottomSheetProvider.instance.showBottomSheetUserReviews(
          context,
          uid: item.uid ?? "",
          fullName: item.fullName,
          avatarImage: item.avatar,
        );
      },
      contentPadding: EdgeInsets.only(top: (index ?? 0) > 0 ? 16 : 8),
      horizontalTitleGap: 12,
      leading: ChatAvatar(
        uid: item.uid,
        url: item.avatar ?? '',
        name: item.fullName ?? '',
        size: 48,
      ),
      // trailing: Text(item.name ?? ''),
      title: Container(
        decoration: const BoxDecoration(
          border: Border(
            bottom: BorderSide(
              color: UIColors.lightGray,
            ),
          ),
        ),
        height: 48,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Expanded(
              child: Text(
                item.fullName ?? '',
                maxLines: 1,
                overflow: TextOverflow.ellipsis,
                style: UITextStyle.medium.copyWith(
                  fontSize: 16,
                  color: UIColors.boolText,
                ),
              ),
            ),
            const SizedBox(
              width: 12,
            ),
            // SplashButton(
            //   onTap: () {
            //     _onCall(context);
            //   },
            //   child: const AppImage.asset(
            //     asset: 'ic_call_outline',
            //     width: 24,
            //     height: 24,
            //   ),
            // ),
            // const SizedBox(
            //   width: 16,
            // ),
            SplashButton(
              onTap: () {
                _onChat(
                  context,
                  onSuccess: (thread) {
                    context.pushRoute(ThreadMessagesRoute(thread: thread, threadID: thread.uid));
                  },
                );
              },
              child: const AppImage.asset(
                asset: 'ic_message',
                width: 24,
                height: 24,
              ),
            ),
          ],
        ),
      ),
    );
  }

  _onCall(BuildContext context) {
    GlobalFunction.launchPhone(item.phone ?? '');
  }

  _onChat(
    BuildContext context, {
    required Function(ChatThreadModel) onSuccess,
  }) async {
    final cubit = context.read<ChatThreadCubit>();
    var thread = cubit.getThreadWithUserID(userID: item.uid ?? '');
    if (thread != null) {
      onSuccess(thread);
      return;
    }

    thread = await cubit.createSingleThread(
      user1: ThreadUserDetail.fromAuthor(AppData.instance.author),
      user2: ThreadUserDetail.fromChatContact(item),
    );
    if (thread != null) {
      onSuccess(thread);
      return;
    }
  }
}
