import 'dart:math';

import 'package:collection/collection.dart';
import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/size.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/loadmore_widget.dart';
import 'package:flutter_module/features/chat/page/chat/children/contacts/items/contact_item.dart';
import 'package:flutter_module/models/chat/contact/chat_contact_model.dart';
import 'package:flutter_sticky_header/flutter_sticky_header.dart';

class Contact {
  const Contact({
    this.name,
    this.group,
  });

  final String? name;
  final String? group;
}

const _chars = 'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz1234567890';
Random _rnd = Random();

String getRandomString(int length) =>
    String.fromCharCodes(Iterable.generate(length, (_) => _chars.codeUnitAt(_rnd.nextInt(_chars.length))));

class ListContactsComponent extends StatelessWidget {
  const ListContactsComponent({
    super.key,
    required this.data,
    this.onRefresh,
  });

  final List<ChatContactModel> data;
  final Future<dynamic> Function()? onRefresh;

  @override
  Widget build(BuildContext context) {
    if (data.isNotEmpty) {
      List<ChatContactModel>.from(data).sort(
        (a, b) => (a.fullName?[0] ?? '').compareTo(b.fullName?[0] ?? ''),
      );
    }

    final groups = groupBy(data, (e) => e.fullName?[0].toUpperCase() ?? "");

    return Expanded(
      child: DefaultStickyHeaderController(
        child: Container(
          padding: const EdgeInsets.symmetric(horizontal: 16),
          color: UIColors.white,
          child: LoadMoreWidget(
            onRefresh: onRefresh,
            child: CustomScrollView(
              slivers: [
                ...List.generate(
                  groups.length,
                  (index) {
                    final name = groups.keys.toList()[index];
                    final items = groups.values.toList()[index];
                    return SliverStickyHeader.builder(
                      builder: (context, state) {
                        return AnimatedContainer(
                          color: UIColors.white,
                          padding: EdgeInsets.only(top: index > 0 && !state.isPinned ? 20 : 12),
                          duration: const Duration(milliseconds: 100),
                          child: Row(
                            children: [
                              Text(
                                name,
                                style: UITextStyle.bold.copyWith(
                                  fontSize: 16,
                                  color: UIColors.boldText,
                                ),
                              )
                            ],
                          ),
                        );
                      },
                      sliver: SliverToBoxAdapter(
                        child: Column(
                          mainAxisSize: MainAxisSize.min,
                          children: List.generate(
                            items.length,
                            (index) {
                              final item = items[index];
                              return ContactItem(
                                item: item,
                                index: index,
                              );
                            },
                          ),
                        ),
                      ),
                    );
                  },
                ),
                SliverPadding(padding: EdgeInsets.only(bottom: AppSize.instance.safeBottomBarHeight))
              ],
            ),
          ),
        ),
      ),
    );
  }
}
