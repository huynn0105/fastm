import 'package:flutter/material.dart';
import 'package:flutter_module/common/widgets/loading.dart';
import 'package:flutter_module/features/chat/page/preview_video/components/video_controller_component.dart';
import 'package:video_player/video_player.dart';

class VideoComponent extends StatefulWidget {
  const VideoComponent({
    super.key,
    required this.url,
    this.isActive = false,
  });

  final String url;
  final bool isActive;

  @override
  State<VideoComponent> createState() => _VideoComponentState();
}

class _VideoComponentState extends State<VideoComponent> {
  late final VideoPlayerController videoController;

  @override
  void initState() {
    super.initState();
    _initVideo();
    if (widget.isActive) {
      _play();
    }
  }

  @override
  void didUpdateWidget(covariant VideoComponent oldWidget) {
    super.didUpdateWidget(oldWidget);
    if (oldWidget.isActive != widget.isActive) {
      if (widget.isActive) {
        _play();
      } else {
        _pause();
      }
    }
  }

  @override
  void dispose() {
    videoController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Stack(
      children: [
        Center(
          child: AspectRatio(
            aspectRatio: videoController.value.aspectRatio,
            child: VideoPlayer(videoController),
          ),
        ),
        if (!videoController.value.isInitialized)
          const Center(
            child: LoadingWidget.withoutText(),
          ),
        Positioned(
          bottom: 0,
          left: 0,
          right: 0,
          child: VideoControllerComponent(controller: videoController),
        ),
      ],
    );
  }

  _initVideo() {
    videoController = VideoPlayerController.networkUrl(
      Uri.parse(widget.url),
    );
    videoController.addListener(() {
      setState(() {});
    });
    videoController.initialize();
  }

  _play() {
    videoController.play();
  }

  _pause() {
    videoController.pause();
  }
}
