import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/bottom_sheet/bottom_sheet_provider.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/dialogs/dialog_provider.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/features/webview/cubit/download_images/download_images_cubit.dart';

class PreviewMediaOption {
  const PreviewMediaOption({
    this.title,
    this.icon,
    this.type,
  });

  final String? title;
  final String? icon;
  final String? type;
}

class HeaderPreviewComponent extends StatelessWidget {
  const HeaderPreviewComponent({
    super.key,
    this.current = 0,
    this.length = 0,
    this.onDownload,
    this.onShare,
    this.onForward,
    this.onDelete,
  });

  final int? current;
  final int? length;
  final Function()? onDownload;
  final Function()? onShare;
  final Function()? onForward;
  final Function()? onDelete;

  @override
  Widget build(BuildContext context) {
    List<PreviewMediaOption> listOptions = [
      const PreviewMediaOption(
        title: 'Chia sẻ',
        icon: 'ic_upload',
      ),
      const PreviewMediaOption(
        title: 'Chuyển tiếp',
        icon: 'ic_share_bold',
      ),
      const PreviewMediaOption(
        title: 'Xóa ảnh',
        icon: 'ic_trash',
      ),
    ];

    return BlocBuilder<DownloadImagesCubit, DownloadImagesState>(
      builder: (context, state) {
        return AppBar(
          elevation: 0,
          backgroundColor: UIColors.blurBackground.withOpacity(.85),
          centerTitle: true,
          leading: SplashButton(
            onTap: Navigator.of(context).pop,
            borderRadius: BorderRadius.circular(50),
            child: Container(
              padding: const EdgeInsets.all(10),
              alignment: Alignment.center,
              child: const AppImage.asset(
                asset: "ic_arrow_left",
                width: 24,
                height: 24,
                color: UIColors.white,
              ),
            ),
          ),
          title: RichText(
            text: TextSpan(
              style: UITextStyle.regular.copyWith(
                color: UIColors.white,
              ),
              children: [
                TextSpan(
                  text: "$current",
                  style: UITextStyle.bold.copyWith(
                    fontSize: 16,
                    color: UIColors.white,
                  ),
                ),
                TextSpan(
                  text: " / ",
                  style: UITextStyle.regular.copyWith(
                    fontSize: 16,
                    color: UIColors.white,
                  ),
                ),
                TextSpan(text: "$length"),
              ],
            ),
          ),
          actions: [
            SplashButton(
              isDisabled: state.status.isLoading,
              onTap: () {
                onDownload?.call();
              },
              child: Center(
                child: Container(
                  alignment: Alignment.center,
                  padding: const EdgeInsets.all(6),
                  child: state.status.isLoading
                      ? const SizedBox(
                          width: 24,
                          height: 24,
                          child: CircularProgressIndicator(
                            color: UIColors.primaryColor,
                            strokeWidth: 2,
                          ),
                        )
                      : const AppImage.asset(
                          asset: "ic_download",
                          width: 24,
                          height: 24,
                          color: UIColors.white,
                        ),
                ),
              ),
            ),
            SplashButton(
              onTap: () {
                BottomSheetProvider.instance.show(
                  context,
                  title: "Tùy chọn",
                  child: ListView.separated(
                    padding: const EdgeInsets.only(
                      top: 16,
                      bottom: 26,
                    ),
                    shrinkWrap: true,
                    itemBuilder: (context, index) {
                      final item = listOptions[index];
                      return SplashButton(
                        onTap: () {
                          _onTapOption(context, index: index);
                        },
                        child: Row(
                          children: [
                            const SizedBox(
                              width: 16,
                            ),
                            AppImage.asset(
                              asset: item.icon,
                              width: 32,
                              height: 32,
                            ),
                            const SizedBox(
                              width: 16,
                            ),
                            Expanded(
                              child: Text(
                                item.title ?? '',
                                style: UITextStyle.semiBold.copyWith(
                                  fontSize: 18,
                                  color: UIColors.boolText,
                                ),
                              ),
                            ),
                            const AppImage.asset(
                              asset: 'ic_arrow_right',
                              width: 24,
                              height: 24,
                            ),
                            const SizedBox(
                              width: 16,
                            ),
                          ],
                        ),
                      );
                    },
                    separatorBuilder: (context, index) {
                      return const Column(
                        children: [
                          SizedBox(
                            height: 16,
                          ),
                          Divider(
                            color: UIColors.lightGray,
                            endIndent: 16,
                            indent: 64,
                            height: 1,
                            thickness: 1,
                          ),
                          SizedBox(
                            height: 12,
                          ),
                        ],
                      );
                    },
                    itemCount: listOptions.length,
                  ),
                );
              },
              child: Container(
                padding: const EdgeInsets.all(6),
                alignment: Alignment.center,
                child: const AppImage.asset(
                  asset: "ic_more_horizontal_outline",
                  width: 24,
                  height: 24,
                  color: UIColors.white,
                ),
              ),
            ),
            const SizedBox(
              width: 14,
            )
          ],
        );
      },
    );
  }

  _onTapOption(BuildContext context, {required int index}) {
    switch (index) {
      case 0:
        onShare?.call();
        Navigator.of(context).pop();
        break;
      case 1:
        onForward?.call();
        Navigator.of(context).pop();
        break;
      case 2:
        DialogProvider.instance.showMTradeDialog(
          context: context,
          asset: 'ic_mascot_question',
          titleColor: UIColors.red,
          messageColor: UIColors.defaultText,
          enableAutoPop: true,
          title: 'Xóa tin nhắn cho riêng bạn?',
          message: 'Tin nhắn này chỉ bị xóa ở phía bạn. Để xóa cho mọi người, hãy thu hồi tin nhắn.',
          positiveTitle: 'Đồng ý',
          negativeTitle: 'Huỷ bỏ',
          positiveCallback: () {
            onDelete?.call();
            Navigator.of(context).pop();
          },
        );
        break;
    }
  }
}
