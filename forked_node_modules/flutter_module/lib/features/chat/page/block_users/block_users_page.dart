import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/dialogs/dialog_provider.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/appbar.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/common/widgets/loading.dart';
import 'package:flutter_module/common/widgets/loadmore_widget.dart';
import 'package:flutter_module/features/chat/cubit/block_users/block_users_cubit.dart';
import 'package:flutter_module/features/chat/page/block_users/items/blocked_user_item.dart';

@RoutePage()
class BlockUsersPage extends StatelessWidget implements AutoRouteWrapper {
  const BlockUsersPage({super.key});

  @override
  Widget wrappedRoute(BuildContext context) {
    return BlocProvider(
      create: (_) => BlockUsersCubit(),
      child: this,
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: MFastSimpleAppBar(
        context: context,
        title: 'Danh sách người bị chặn',
      ),
      body: BlocListener<BlockUsersCubit, BlockUsersState>(
        listenWhen: (pre, cur) {
          return pre.unblockStatus != cur.unblockStatus;
        },
        listener: (context, state) {
          if (state.unblockStatus.isFailure) {
            DialogProvider.instance.showMTradeErrorDialog(
              context: context,
              message: state.errorMessage,
            );
          }
        },
        child: BlocBuilder<BlockUsersCubit, BlockUsersState>(
          builder: (context, state) {
            final cubit = context.read<BlockUsersCubit>();
            if (state.status.isInitial) {
              WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
                cubit.fetchData();
              });
            }
            final data = state.users;
            return state.status.isLoading
                ? const Center(child: CircularProgressIndicator())
                : Stack(
                    children: [
                      data.isNotEmpty
                          ? LoadMoreWidget(
                              child: ListView.separated(
                                separatorBuilder: (_, __) => const SizedBox(
                                  height: 12,
                                ),
                                itemBuilder: (context, index) {
                                  return BlockedUserItem(
                                    data: data[index],
                                    onUnBlocked: (user) {
                                      DialogProvider.instance.showConfirmDialog(
                                        context,
                                        message: 'Bạn có muốn bỏ chặn ${user.fullName}',
                                        title: 'MFast',
                                        negativeTitle: 'Đóng',
                                        positiveTitle: 'Đồng ý',
                                        positiveCallback: () {
                                          cubit.unblockUser(userID: user.uid ?? '');
                                        },
                                      );
                                    },
                                  );
                                },
                                itemCount: data.length,
                              ),
                            )
                          : const _EmptyView(),
                      Visibility(
                        visible: state.status.isLoading || state.unblockStatus.isLoading,
                        child: const LoadingWidget.dark(),
                      ),
                    ],
                  );
          },
        ),
      ),
    );
  }
}

class _EmptyView extends StatelessWidget {
  const _EmptyView({super.key});

  @override
  Widget build(BuildContext context) {
    return Center(
      child: Stack(
        alignment: Alignment.topCenter,
        children: [
          Container(
            decoration: BoxDecoration(
              color: UIColors.white,
              borderRadius: BorderRadius.circular(12),
            ),
            width: double.infinity,
            margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 50),
            padding: const EdgeInsets.all(16),
            child: Column(
              mainAxisSize: MainAxisSize.min,
              children: [
                const SizedBox(height: 80),
                Text(
                  'Bạn không chặn bất kì ai',
                  style: UITextStyle.semiBold.copyWith(
                    fontSize: 16,
                  ),
                ),
                const SizedBox(height: 10),
                Text(
                  'Khi chặn một ai đó, họ sẽ không thể bắt đầu\ncuộc trò chuyện với bạn',
                  style: UITextStyle.regular.copyWith(
                    fontSize: 14,
                    color: UIColors.grayBackground,
                  ),
                  textAlign: TextAlign.center,
                ),
              ],
            ),
          ),
          const AppImage.asset(
            asset: 'ic_like_10',
            height: 124,
            width: 124,
          ),
        ],
      ),
    );
  }
}
