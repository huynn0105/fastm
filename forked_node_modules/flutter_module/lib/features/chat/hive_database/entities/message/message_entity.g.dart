// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'message_entity.dart';

// **************************************************************************
// TypeAdapterGenerator
// **************************************************************************

class MessageEntityAdapter extends TypeAdapter<MessageEntity> {
  @override
  final int typeId = 4;

  @override
  MessageEntity read(BinaryReader reader) {
    final numOfFields = reader.readByte();
    final fields = <int, dynamic>{
      for (int i = 0; i < numOfFields; i++) reader.readByte(): reader.read(),
    };
    return MessageEntity(
      uid: fields[0] as String,
      threadID: fields[18] as String?,
      text: fields[2] as String?,
      type: fields[1] as String?,
      author: fields[5] as AuthorEntity?,
      location: fields[6] as LocationEntity?,
      createTime: fields[3] as int?,
      updateTime: fields[4] as int?,
      isEdited: fields[7] as bool?,
      isRecalled: fields[8] as bool?,
      medias: (fields[9] as List?)?.cast<MediaEntity>(),
      typeCreateTime: fields[10] as String?,
      mediaWidth: fields[11] as int?,
      mediaHeight: fields[12] as int?,
      htmlText: fields[13] as String?,
      reaction: (fields[14] as Map?)?.cast<String, String>(),
      quotedMessage: fields[15] as MessageEntity?,
      quotedType: fields[16] as String?,
      isDeletedBy: (fields[17] as Map?)?.cast<String, bool>(),
    );
  }

  @override
  void write(BinaryWriter writer, MessageEntity obj) {
    writer
      ..writeByte(19)
      ..writeByte(1)
      ..write(obj.type)
      ..writeByte(2)
      ..write(obj.text)
      ..writeByte(3)
      ..write(obj.createTime)
      ..writeByte(4)
      ..write(obj.updateTime)
      ..writeByte(5)
      ..write(obj.author)
      ..writeByte(6)
      ..write(obj.location)
      ..writeByte(7)
      ..write(obj.isEdited)
      ..writeByte(8)
      ..write(obj.isRecalled)
      ..writeByte(9)
      ..write(obj.medias)
      ..writeByte(10)
      ..write(obj.typeCreateTime)
      ..writeByte(11)
      ..write(obj.mediaWidth)
      ..writeByte(12)
      ..write(obj.mediaHeight)
      ..writeByte(13)
      ..write(obj.htmlText)
      ..writeByte(14)
      ..write(obj.reaction)
      ..writeByte(15)
      ..write(obj.quotedMessage)
      ..writeByte(16)
      ..write(obj.quotedType)
      ..writeByte(17)
      ..write(obj.isDeletedBy)
      ..writeByte(18)
      ..write(obj.threadID)
      ..writeByte(0)
      ..write(obj.uid);
  }

  @override
  int get hashCode => typeId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MessageEntityAdapter &&
          runtimeType == other.runtimeType &&
          typeId == other.typeId;
}

class AuthorEntityAdapter extends TypeAdapter<AuthorEntity> {
  @override
  final int typeId = 5;

  @override
  AuthorEntity read(BinaryReader reader) {
    final numOfFields = reader.readByte();
    final fields = <int, dynamic>{
      for (int i = 0; i < numOfFields; i++) reader.readByte(): reader.read(),
    };
    return AuthorEntity(
      uid: fields[0] as String,
      fullName: fields[1] as String?,
      avatar: fields[2] as String?,
    );
  }

  @override
  void write(BinaryWriter writer, AuthorEntity obj) {
    writer
      ..writeByte(3)
      ..writeByte(1)
      ..write(obj.fullName)
      ..writeByte(2)
      ..write(obj.avatar)
      ..writeByte(0)
      ..write(obj.uid);
  }

  @override
  int get hashCode => typeId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is AuthorEntityAdapter &&
          runtimeType == other.runtimeType &&
          typeId == other.typeId;
}

class LocationEntityAdapter extends TypeAdapter<LocationEntity> {
  @override
  final int typeId = 6;

  @override
  LocationEntity read(BinaryReader reader) {
    final numOfFields = reader.readByte();
    final fields = <int, dynamic>{
      for (int i = 0; i < numOfFields; i++) reader.readByte(): reader.read(),
    };
    return LocationEntity(
      latitude: fields[0] as double?,
      longitude: fields[1] as double?,
    );
  }

  @override
  void write(BinaryWriter writer, LocationEntity obj) {
    writer
      ..writeByte(2)
      ..writeByte(0)
      ..write(obj.latitude)
      ..writeByte(1)
      ..write(obj.longitude);
  }

  @override
  int get hashCode => typeId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is LocationEntityAdapter &&
          runtimeType == other.runtimeType &&
          typeId == other.typeId;
}

class MediaEntityAdapter extends TypeAdapter<MediaEntity> {
  @override
  final int typeId = 7;

  @override
  MediaEntity read(BinaryReader reader) {
    final numOfFields = reader.readByte();
    final fields = <int, dynamic>{
      for (int i = 0; i < numOfFields; i++) reader.readByte(): reader.read(),
    };
    return MediaEntity(
      uid: fields[0] as String,
      path: fields[2] as String?,
      base64: fields[3] as String?,
      type: fields[4] as String?,
      name: fields[5] as String?,
      url: fields[1] as String?,
      width: fields[6] as int?,
      height: fields[7] as int?,
      mimeType: fields[8] as String?,
      extraData: (fields[9] as Map?)?.cast<String, dynamic>(),
      thumbnail: fields[10] as MediaEntity?,
      duration: fields[11] as int?,
    );
  }

  @override
  void write(BinaryWriter writer, MediaEntity obj) {
    writer
      ..writeByte(12)
      ..writeByte(1)
      ..write(obj.url)
      ..writeByte(2)
      ..write(obj.path)
      ..writeByte(3)
      ..write(obj.base64)
      ..writeByte(4)
      ..write(obj.type)
      ..writeByte(5)
      ..write(obj.name)
      ..writeByte(6)
      ..write(obj.width)
      ..writeByte(7)
      ..write(obj.height)
      ..writeByte(8)
      ..write(obj.mimeType)
      ..writeByte(9)
      ..write(obj.extraData)
      ..writeByte(10)
      ..write(obj.thumbnail)
      ..writeByte(11)
      ..write(obj.duration)
      ..writeByte(0)
      ..write(obj.uid);
  }

  @override
  int get hashCode => typeId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is MediaEntityAdapter &&
          runtimeType == other.runtimeType &&
          typeId == other.typeId;
}
