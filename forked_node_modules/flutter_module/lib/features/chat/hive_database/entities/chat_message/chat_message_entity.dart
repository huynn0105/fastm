// ignore_for_file: public_member_api_docs, sort_constructors_first
import 'package:flutter_module/models/chat/message/chat_message_model.dart';
import 'package:hive/hive.dart';



import '../../hive_constants.dart';
import '../base_entity.dart';

part 'chat_message_entity.g.dart';

@HiveType(typeId: HiveTypes.chatMessage)
class ChatMessageEntity extends BaseEntity {
  @HiveField(1)
  String? authorFullName;
  @HiveField(2)
  int? updateTime;
  @HiveField(3)
  Map<String, bool>? isReceivedBy;
  @HiveField(4)
  String? authorAvatarImage;
  @HiveField(5)
  String? threadID;
  @HiveField(6)
  String? typeCreateTime;
  @HiveField(7)
  String? quotedText;
  @HiveField(8)
  String? tagDataJSON;
  @HiveField(9)
  String? authorID;
  @HiveField(10)
  bool? isDeleted;
  @HiveField(11)
  int? createTime;
  @HiveField(12)
  String? type;
  @HiveField(13)
  String? quotedType;
  @HiveField(14)
  String? text;
  @HiveField(15)
  String? quotedID;

  ChatMessageEntity({
    required super.uid,
    this.authorFullName,
    this.updateTime,
    this.isReceivedBy,
    this.authorAvatarImage,
    this.threadID,
    this.typeCreateTime,
    this.quotedText,
    this.tagDataJSON,
    this.authorID,
    this.isDeleted,
    this.createTime,
    this.type,
    this.quotedType,
    this.text,
    this.quotedID,
  });

  factory ChatMessageEntity.fromModel(ChatMessageModel model) {
    return ChatMessageEntity(
      uid: model.uid!,
      authorAvatarImage: model.authorAvatarImage,
      authorFullName: model.authorFullName,
      authorID: model.authorID,
      createTime: model.createTime,
      isDeleted: model.isDeleted,
      isReceivedBy: model.isReceivedBy,
      quotedID: model.quotedID,
      quotedText: model.quotedText,
      quotedType: model.quotedType,
      tagDataJSON: model.tagDataJSON,
      text: model.text,
      threadID: model.threadID,
      type: model.type,
      typeCreateTime: model.typeCreateTime,
      updateTime: model.updateTime,
    );
  }
}
