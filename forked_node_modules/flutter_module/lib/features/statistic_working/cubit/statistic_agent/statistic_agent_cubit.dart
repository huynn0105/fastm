import 'package:bloc/bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:equatable/equatable.dart';
import 'package:flutter_module/common/utils/datetime_util.dart';
import 'package:flutter_module/common/utils/debounce_util.dart';
import 'package:flutter_module/features/statistic_working/repository/statistic_working_repository.dart';
import 'package:flutter_module/models/mfast/time_checking/time_checking_info_wrapper_model.dart';
import 'package:flutter_module/services/api/mfast/payload/time_checking_history_payload.dart';

part 'statistic_agent_state.dart';

class StatisticAgentCubit extends Cubit<StatisticAgentState> {
  StatisticAgentCubit() : super(const StatisticAgentState());

  final _repository = StatisticWorkingRepository();

  final DebounceUtil debounce = DebounceUtil(milliseconds: 250);

  TimeCheckingHistoryPayload _payload = TimeCheckingHistoryPayload();

  fetchData() async {
    emit(state.copyWith(
      status: BlocStatus.loading,
    ));

    final result = await _repository.getTimeCheckingHistory(_payload);

    emit(state.copyWith(
      status: BlocStatus.success,
      data: result.data,
    ));
  }

  updatePayload({
    String? userID,
    String? date,
  }) {
    final format = DateTimeUtil.getDate(date ?? '', format: DateTimeFormat.yyyy_MM_dd);
    _payload = _payload.copyWith(
      year: format?.year,
      month: format?.month,
      day: format?.day,
      userID: userID,
    );
  }

  onDateChanged(String date) {
    debounce.run(() {
      updatePayload(date: date);
      fetchData();
    });
  }

  @override
  Future<void> close() {
    debounce.cancel();
    return super.close();
  }
}
