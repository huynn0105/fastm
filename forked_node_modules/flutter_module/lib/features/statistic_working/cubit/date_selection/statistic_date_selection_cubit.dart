import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:flutter_module/common/extension/datetime_extension.dart';
import 'package:flutter_module/common/utils/datetime_util.dart';

part 'statistic_date_selection_state.dart';

class StatisticDateSelectionCubit extends Cubit<StatisticDateSelectionState> {
  StatisticDateSelectionCubit() : super(StatisticDateSelectionState());

  final DateTime _now = DateTime.now().dateOnly();
  final DateTime _dateBefore60Days = DateTime.now().subtract(const Duration(days: 60));

  initDate({String? date}) {
    final format = DateTimeUtil.getDate(date ?? '', format: DateTimeFormat.yyyy_MM_dd);
    if (format != null) {
      updateDate(format);
    }
  }

  updateDate(DateTime date) {
    emit(state.copyWith(
      date: date.dateOnly(),
      enabledNext: date.isBefore(_now),
      enabledPrevious: date.isAfter(_dateBefore60Days),
    ));
  }

  next() {
    final date = state.date.copyWith(day: state.date.day + 1);
    emit(state.copyWith(
      date: date,
      enabledNext: date.isBefore(_now),
      enabledPrevious: date.isAfter(_dateBefore60Days),
    ));
  }

  previous() {
    final date = state.date.copyWith(day: state.date.day - 1);
    emit(state.copyWith(
      date: date,
      enabledNext: date.isBefore(_now),
      enabledPrevious: date.isAfter(_dateBefore60Days),
    ));
  }
}
