import 'package:cached_network_image/cached_network_image.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/enum/mfast/time_checking_status.dart';
import 'package:flutter_module/common/global_function.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/color_util.dart';
import 'package:flutter_module/common/utils/text_util.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/models/mfast/time_checking/time_checking_info_model.dart';
import 'package:timelines/timelines.dart';

class CheckingHistoryComponent extends StatelessWidget {
  const CheckingHistoryComponent({
    super.key,
    required this.details,
  });

  final List<CheckingHistoryDetail> details;

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          'Lịch sử điểm danh',
          style: UITextStyle.semiBold.copyWith(
            fontSize: 16,
          ),
        ),
        Container(
          decoration: BoxDecoration(
            color: UIColors.white,
            borderRadius: BorderRadius.circular(8),
          ),
          margin: const EdgeInsets.symmetric(vertical: 12),
          padding: const EdgeInsets.symmetric(horizontal: 12),
          alignment: Alignment.center,
          child: details.isEmpty
              ? const NoThingWidget(
                  message: 'Không có lịch sử điểm danh nào\nđược ghi nhận trong ngày.',
                )
              : ListView.builder(
                  shrinkWrap: true,
                  padding: EdgeInsets.zero,
                  physics: const NeverScrollableScrollPhysics(),
                  itemBuilder: (context, index) {
                    final item = details[index];
                    final isFirst = index == 0;
                    final isLast = index == details.length - 1;

                    ///
                    return TimelineTile(
                      crossAxisExtent: double.infinity,
                      nodeAlign: TimelineNodeAlign.start,
                      node: TimelineNode(
                        indicatorPosition: 0.5,
                        indicator: StatusDotIndicator(
                          status: item.getStatus(),
                        ),
                        startConnector: isFirst ? null : const DashLine(),
                        endConnector: isLast ? null : const DashLine(),
                      ),
                      contents: Column(
                        children: [
                          ItemCheckinInfo(
                            detail: item,
                          ),
                          Visibility(
                            visible: !isLast,
                            child: const Padding(
                              padding: EdgeInsets.only(left: 14),
                              child: Divider(
                                height: 1,
                                color: UIColors.lightGray,
                              ),
                            ),
                          ),
                        ],
                      ),
                    );
                  },
                  itemCount: details.length,
                ),
        ),
      ],
    );
  }
}

class NoThingWidget extends StatelessWidget {
  const NoThingWidget({
    super.key,
    required this.message,
  });

  final String message;

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        const SizedBox(height: 36),
        const AppImage.asset(
          asset: 'ic_nothing',
          height: 165,
          width: 165,
        ),
        const SizedBox(height: 16),
        Text(
          message,
          style: UITextStyle.medium.copyWith(
            fontSize: 16,
            color: UIColors.grayBackground,
          ),
          textAlign: TextAlign.center,
        ),
        const SizedBox(height: 24),
      ],
    );
  }
}

class StatusDotIndicator extends StatelessWidget {
  const StatusDotIndicator({
    super.key,
    required this.status,
  });

  final TimeCheckingStatus status;

  @override
  Widget build(BuildContext context) {
    String image = switch (status) {
      TimeCheckingStatus.success => 'ic_status_success',
      TimeCheckingStatus.fail => 'ic_status_failure',
      TimeCheckingStatus.pending => 'ic_status_pending',
    };
    return AppImage.asset(
      asset: image,
      height: 20,
      width: 20,
    );
  }
}

class DashLine extends StatelessWidget {
  const DashLine({
    super.key,
  });

  @override
  Widget build(BuildContext context) {
    return const DashedLineConnector(
      color: UIColors.lightGray,
      dash: 6,
      gap: 6,
    );
  }
}

class ItemCheckinInfo extends StatelessWidget {
  const ItemCheckinInfo({
    super.key,
    required this.detail,
  });

  final CheckingHistoryDetail detail;

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(
        horizontal: 14,
        vertical: 12,
      ),
      child: Row(
        children: [
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              mainAxisSize: MainAxisSize.min,
              children: [
                Text(
                  detail.checkTime ?? detail.checkTimeline ?? '',
                  style: UITextStyle.medium.copyWith(
                    fontSize: 16,
                  ),
                ),
                const SizedBox(
                  height: 4,
                ),
                Text(
                  detail.typeName ?? '',
                  style: UITextStyle.medium.copyWith(
                    fontSize: 16,
                    color: ColorUtil.fromHex(detail.color ?? ''),
                  ),
                ),
              ],
            ),
          ),
          AppSplashButton(
            isDisable: detail.getStatus().isPending || detail.getStatus().isFail,
            onTap: () {
              GlobalFunction.showFullscreenNetworkImage(
                context,
                image: detail.image
              );
            },
            child: Container(
              width: 56,
              height: 56,
              alignment: Alignment.center,
              decoration: BoxDecoration(
                color: UIColors.background,
                borderRadius: BorderRadius.circular(8),
              ),
              child: TextUtils.isEmpty(detail.image)
                  ? const AppImage.asset(
                      asset: 'ic_error_image',
                      width: 20,
                      height: 20,
                    )
                  : ClipRRect(
                      borderRadius: BorderRadius.circular(8),
                      child: CachedNetworkImage(
                        imageUrl: detail.image ?? '',
                        width: 56,
                        height: 56,
                        fit: BoxFit.cover,
                        progressIndicatorBuilder: (context, url, downloadProgress) {
                          return const Center(
                            child: CupertinoActivityIndicator(),
                          );
                        },
                        errorWidget: (context, url, error) {
                          return const Center(
                            child: AppImage.asset(
                              asset: 'ic_error_image',
                              width: 40,
                              height: 40,
                              fit: BoxFit.contain,
                            ),
                          );
                        },
                      ),
                    ),
            ),
          ),
        ],
      ),
    );
  }
}
