import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/text_util.dart';
import 'package:flutter_module/common/widgets/avatar_widget.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/divider.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/features/statistic_working/page/statistic_asm_checking/components/checking_info_popup.dart';
import 'package:flutter_module/features/statistic_working/page/statistic_working/widget/info_widget.dart';
import 'package:flutter_module/features/statistic_working/page/statistic_working/widget/lastest_action_widget.dart';
import 'package:info_popup/info_popup.dart';

class SaleInfoWidget extends StatelessWidget {
  const SaleInfoWidget({
    super.key,
    required this.userID,
    required this.fullName,
    required this.avatarURL,
    required this.phoneNumber,
    required this.lineLabel,
    this.footer,
    this.statisticType,
    this.lastestActionTime,
    this.onControllerCreated,
    this.onTap,
  });

  final String userID;
  final String fullName;
  final String avatarURL;
  final String phoneNumber;
  final String lineLabel;
  final Widget? footer;
  final String? statisticType;
  final String? lastestActionTime;
  final OnControllerCreated? onControllerCreated;
  final Function()? onTap;

  @override
  Widget build(BuildContext context) {
    Widget widget = AppSplashButton(
      onTap: onTap,
      child: Container(
        padding: const EdgeInsets.all(12),
        decoration: BoxDecoration(
          color: UIColors.white,
          borderRadius: BorderRadius.circular(12),
        ),
        child: Column(
          children: [
            Row(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                AvatarWidget(
                  url: avatarURL,
                  size: 44,
                ),
                const SizedBox(
                  width: 8,
                ),
                Expanded(
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Row(
                        children: [
                          Expanded(
                            child: Text(
                              fullName,
                              style: UITextStyle.semiBold.copyWith(
                                fontSize: 14,
                              ),
                            ),
                          ),
                          const AppImage.asset(
                            asset: 'ic_arrow_right',
                            width: 16,
                            height: 16,
                          ),
                        ],
                      ),
                      ContactInfoWidget(
                        phoneNumber: phoneNumber,
                        userID: userID,
                        lineLabel: lineLabel,
                        phoneColor: UIColors.primaryColor,
                        chatColor: UIColors.primaryColor,
                        lineLabelColor: UIColors.grayText,
                      ),
                      if (TextUtils.isNotEmpty(statisticType) && TextUtils.isNotEmpty(lastestActionTime)) ...[
                        const SizedBox(
                          height: 4,
                        ),
                        LastestActionWidget(
                          statisticType: statisticType!,
                          date: lastestActionTime!,
                          color: UIColors.grayText,
                        ),
                      ],
                    ],
                  ),
                ),
              ],
            ),
            if (footer != null) ...[
              const DottedDivider(
                height: 12,
              ),
              footer!,
            ],
          ],
        ),
      ),
    );
    if (onControllerCreated != null) {
      return CheckingInfoPopup(
        onControllerCreated: onControllerCreated,
        child: widget,
      );
    }
    return widget;
  }
}
