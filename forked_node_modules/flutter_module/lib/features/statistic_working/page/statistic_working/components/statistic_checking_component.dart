import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/enum/statistic_working/statistic_working_level.dart';
import 'package:flutter_module/common/enum/statistic_working/statistic_working_type.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/di/get_it.dart';
import 'package:flutter_module/features/statistic_working/cubit/statistic_asm_checking/statistic_asm_checking_cubit.dart';
import 'package:flutter_module/features/statistic_working/cubit/statistic_path/statistic_path_cubit.dart';
import 'package:flutter_module/features/statistic_working/cubit/statistic_summary_checking/statistic_summary_checking_cubit.dart';
import 'package:flutter_module/features/statistic_working/page/statistic_working/components/statistic_list_component.dart';
import 'package:flutter_module/features/statistic_working/page/statistic_working/mixins/statistic_working_mixin.dart';
import 'package:flutter_module/features/statistic_working/page/statistic_working/widget/sale_info_widget.dart';
import 'package:flutter_module/features/statistic_working/page/statistic_working/widget/statistic_checking_value_widget.dart';
import 'package:flutter_module/models/statistic_working/sale_info_model.dart';
import 'package:info_popup/info_popup.dart';

import '../../statistic_asm_checking/components/statistic_checkin_summary_component.dart';

class StatisticCheckingComponent extends StatefulWidget {
  const StatisticCheckingComponent({super.key});

  @override
  State<StatisticCheckingComponent> createState() => _StatisticCheckingComponentState();
}

class _StatisticCheckingComponentState extends State<StatisticCheckingComponent> with StatisticWorkingMixin {
  InfoPopupController? _infoPopupController;

  @override
  void dispose() {
    _infoPopupController?.dismissInfoPopup();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<StatisticSummaryCheckingCubit, StatisticSummaryCheckingState>(
      builder: (context, summaryState) {
        return BlocBuilder<StatisticAsmTotalCheckingCubit, StatisticAsmCheckingState>(
          builder: (context, state) {
            final level = StatisticWorkingLevel.getLevel(summaryState.data?.level);
            final isAgent = level?.isAgent == true;
            final isSup = level?.isSUP == true;

            ///
            return Padding(
              padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 16),
              child: StatisticListComponent(
                level: summaryState.data?.level,
                name: summaryState.data?.fullName,
                status: state.status,
                data: state.data,
                onControllerCreated: (controller) {
                  _infoPopupController = controller;
                  autoHighlightStatisticWorkingCheckingPopup(controller);
                },
                header: StatisticCheckInSummaryComponent(
                  onControllerCreated: (controller) {
                    _infoPopupController = controller;
                    autoHighlightStatisticAsmCheckingPopup(controller);
                  },
                  showInfoPopup: () {
                    _infoPopupController?.show();
                  },
                ),
                onItemBuilder: (context, item, index) {
                  return SaleInfoWidget(
                    userID: item.userID ?? '',
                    fullName: item.fullName ?? '',
                    avatarURL: item.image ?? '',
                    phoneNumber: item.mobilePhone ?? '',
                    lineLabel: item.level ?? '',
                    statisticType: !isAgent ? null : StatisticWorkingType.checking.code,
                    lastestActionTime: !isAgent ? null : item.lastCheckingTime,
                    footer: StatisticCheckingValueWidget(
                      level: item.level,
                      data: item.checkingDetail,
                    ),
                    onTap: () {
                      final pathCubit = getItInstance.get<StatisticPathCubit>();
                      pathCubit.reset();
                      if (summaryState.data != null) {
                        pathCubit.push(SaleInfoModel.fromStatisticChecking(summaryState.data!));
                      }
                      openChecking(context, userID: item.userID, level: item.level);
                    },
                  );
                },
                onTitleDisplayed: (level, name) {
                  return 'Thống kê các ${StatisticWorkingLevel.getUnderLevel(level)} của bạn';
                },
                onRefresh: () async {
                  return Future.wait([
                    context.read<StatisticAsmTotalCheckingCubit>().refreshData(),
                    context.read<StatisticSummaryCheckingCubit>().fetchData(),
                  ]);
                },
                onLoadMore: context.read<StatisticAsmTotalCheckingCubit>().loadmoreData,
                onSearchChanged: context.read<StatisticAsmTotalCheckingCubit>().onSearchChanged,
              ),
            );
          },
        );
      },
    );
  }
}
