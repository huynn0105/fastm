import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/enum/statistic_working/statistic_working_level.dart';
import 'package:flutter_module/common/enum/statistic_working/statistic_working_type.dart';
import 'package:flutter_module/features/statistic_working/cubit/statistic_asm_checking/statistic_asm_checking_cubit.dart';
import 'package:flutter_module/features/statistic_working/cubit/statistic_summary_checking/statistic_summary_checking_cubit.dart';
import 'package:flutter_module/features/statistic_working/page/statistic_working/components/statistic_list_component.dart';
import 'package:flutter_module/features/statistic_working/page/statistic_working/mixins/statistic_working_mixin.dart';
import 'package:flutter_module/features/statistic_working/page/statistic_working/widget/sale_info_widget.dart';

class StatisticAsmNotCheckingComponent extends StatelessWidget with StatisticWorkingMixin {
  const StatisticAsmNotCheckingComponent({super.key});

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<StatisticSummaryCheckingCubit, StatisticSummaryCheckingState>(
      builder: (context, summaryState) {
        return BlocBuilder<StatisticAsmNotCheckingCubit, StatisticAsmCheckingState>(
          builder: (context, state) {
            final isAgent = StatisticWorkingLevel.getLevel(summaryState.data?.level)?.isAgent == true;
            return Padding(
              padding: const EdgeInsets.symmetric(horizontal: 16),
              child: StatisticListComponent(
                level: summaryState.data?.level,
                name: summaryState.data?.fullName,
                status: state.status,
                data: state.data,
                onItemBuilder: (context, item, index) {
                  return SaleInfoWidget(
                    userID: item.userID ?? '',
                    fullName: item.fullName ?? '',
                    avatarURL: item.image ?? '',
                    phoneNumber: item.mobilePhone ?? '',
                    lineLabel: item.level ?? '',
                    statisticType: StatisticWorkingType.checking.code,
                    lastestActionTime: item.lastCheckingTime,
                    onTap: () {
                      openChecking(context, userID: item.userID, level: item.level);
                    },
                  );
                },
                onTitleDisplayed: (level, name) {
                  return 'Tổng Agent chưa điểm danh của ${name ?? ''}';
                },
                onRefresh: context.read<StatisticAsmNotCheckingCubit>().refreshData,
                onLoadMore: context.read<StatisticAsmNotCheckingCubit>().loadmoreData,
                onSearchChanged: context.read<StatisticAsmNotCheckingCubit>().onSearchChanged,
              ),
            );
          },
        );
      },
    );
  }
}
