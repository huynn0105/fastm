// ignore_for_file: public_member_api_docs, sort_constructors_first
part of 'otp_cubit.dart';

class OTPState extends Equatable {
  final BlocStatus status;
  final BlocStatus completeStatus;
  final bool requestedOtp;
  final OtpModel? otpModel;
  final List<String> resendOtpOptions;
  final String? errorMsg;
  final Map<String, String> errorFields;
  final bool isRegister;

  OTPState({
    this.status = BlocStatus.initial,
    this.completeStatus = BlocStatus.initial,
    this.requestedOtp = false,
    this.otpModel,
    this.resendOtpOptions = const [],
    this.errorMsg,
    Map<String, String>? errorFields,
    this.isRegister = false,
  }) : errorFields = errorFields ?? {}; //workaround to modify errorFields

  @override
  List<Object?> get props => [
        status,
        completeStatus,
        requestedOtp,
        otpModel,
        resendOtpOptions,
        errorMsg,
        errorFields,
        isRegister,
      ];

  OTPState copyWith({
    BlocStatus? status,
    BlocStatus? completeStatus,
    bool? requestedOtp,
    OtpModel? otpModel,
    List<String>? resendOtpOptions,
    String? errorMsg,
    Map<String, String>? errorFields,
    bool? isRegister,
  }) {
    return OTPState(
      status: status ?? this.status,
      completeStatus: completeStatus ?? this.completeStatus,
      requestedOtp: requestedOtp ?? this.requestedOtp,
      otpModel: otpModel ?? this.otpModel,
      resendOtpOptions: resendOtpOptions ?? this.resendOtpOptions,
      errorMsg: errorMsg,
      errorFields: errorFields ?? this.errorFields,
      isRegister: isRegister ?? false,
    );
  }
}
