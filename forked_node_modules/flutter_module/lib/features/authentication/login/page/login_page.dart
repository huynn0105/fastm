import 'dart:io';

import 'package:auto_route/auto_route.dart';
import 'package:flutter_module/common/bottom_sheet/bottom_sheet_provider.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/deeplink_util.dart';
import 'package:flutter_module/common/utils/validation_util.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/loading.dart';
import 'package:flutter_module/features/authentication/auth/auth_cubit.dart';
import 'package:flutter_module/features/authentication/login/cubit/login_cubit.dart';
import 'package:flutter_module/features/authentication/login/page/components/veirfy_password_component.dart';
import 'package:flutter_module/services/api/authentication/payload/register_payload.dart';
import 'package:flutter_module/services/local/local_data_helper.dart';

import '../../../../app_data.dart';
import '../../../../common/colors.dart';
import '../../../../common/widgets/checkbox.dart';
import '../../../../common/widgets/collect_data_view.dart';
import '../../../../common/widgets/images.dart';
import '../../../../common/widgets/textfields.dart';
import '../../../../routes/routes.gr.dart';
import 'components/intro_pass_code_component.dart';
import 'items/login_method_item.dart';

@RoutePage()
class LoginPage extends StatefulWidget implements AutoRouteWrapper {
  const LoginPage({
    super.key,
    this.onSuccess,
  });

  final Function()? onSuccess;

  @override
  State<StatefulWidget> createState() {
    return _LoginState();
  }

  @override
  Widget wrappedRoute(BuildContext context) {
    return BlocProvider(
      create: (_) => LoginCubit(),
      child: this,
    );
  }
}

class _LoginState extends State<LoginPage> {
  late final TextEditingController phoneNumberController;

  @override
  void initState() {
    phoneNumberController = TextEditingController(text: LocalDataHelper.instance.getLoginPhone());
    WidgetsBinding.instance.addPostFrameCallback((_) {
      context.read<LoginCubit>().onPhoneChanged(phoneNumberController.text);
    });
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: UIColors.extraLightGray,
      resizeToAvoidBottomInset: false,
      body: Stack(
        children: [
          SafeArea(
            child: Column(
              children: [
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    SplashButton(
                      onTap: context.router.pop,
                      child: Container(
                        margin: const EdgeInsets.only(left: 4),
                        padding: const EdgeInsets.all(12),
                        child: const AppImage.asset(
                          asset: "ic_arrow_left",
                          width: 24,
                          height: 24,
                          color: UIColors.grayText,
                        ),
                      ),
                    ),
                    const AppImage.asset(
                      asset: "ic_academy_mfast_logo",
                      width: 116,
                      height: 32,
                    ),
                    const SizedBox(
                      width: 52,
                    )
                  ],
                ),
                Expanded(
                  child: Padding(
                    padding: const EdgeInsets.symmetric(horizontal: 16),
                    child: BlocBuilder<LoginCubit, LoginState>(
                      builder: (context, state) {
                        if (state.status.isInitial && LocalDataHelper.instance.getUseBiometric() == true) {
                          context.read<LoginCubit>().checkAvailableBiometrics();
                        }
                        return Column(
                          children: [
                            const SizedBox(height: 24),
                            Text(
                              'Nhập số điện thoại để đăng nhập',
                              style: UITextStyle.semiBold.copyWith(
                                fontSize: 16,
                                color: UIColors.grayText,
                              ),
                            ),
                            const SizedBox(height: 12),
                            CollectDataView(
                              child: UITextFieldOutline(
                                controller: phoneNumberController,
                                showClearButton: state.phoneNumber.isNotEmpty,
                                borderRadius: 27,
                                hintText: 'Số điện thoại',
                                textAlign: TextAlign.center,
                                textStyle: UITextStyle.semiBold.copyWith(
                                  fontSize: 20,
                                ),
                                hintTextStyle: UITextStyle.semiBold.copyWith(
                                  fontSize: 20,
                                  color: UIColors.gray,
                                ),
                                contentPadding: const EdgeInsets.only(left: 48, top: 14, bottom: 14),
                                inputFormatter: [
                                  FilteringTextInputFormatter.digitsOnly,
                                  LengthLimitingTextInputFormatter(10),
                                ],
                                keyboardType: TextInputType.number,
                                onCleared: () => context.read<LoginCubit>().onPhoneChanged(''),
                                onChanged: context.read<LoginCubit>().onPhoneChanged,
                              ),
                            ),
                            const SizedBox(height: 12),
                            CollectDataView(
                              child: Row(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  AppSplashButton(
                                    onTap: context.read<LoginCubit>().onPolicyChanged,
                                    child: IgnorePointer(
                                      ignoring: true,
                                      child: AppCheckbox.rectangle(
                                        value: state.acceptedPolicy,
                                        size: 24,
                                        onChanged: (_) {},
                                      ),
                                    ),
                                  ),
                                  const SizedBox(
                                    width: 12,
                                  ),
                                  Expanded(
                                    child: RichText(
                                      text: TextSpan(
                                        children: [
                                          TextSpan(
                                            text: "Tôi đã đọc và đồng ý với cam kết về ",
                                            style: UITextStyle.regular.copyWith(
                                              fontSize: 14,
                                              height: 1,
                                            ),
                                          ),
                                          TextSpan(
                                            text: "điều khoản chia sẻ thông tin",
                                            style: UITextStyle.regular.copyWith(
                                              fontSize: 14,
                                              color: UIColors.primaryColor,
                                            ),
                                            recognizer: TapGestureRecognizer()
                                              ..onTap = () {
                                                _onShareInfo(context);
                                              },
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            const SizedBox(
                              height: 16,
                            ),
                            PrimaryButton(
                              onPressed: () => _loginByOtp(context, state),
                              enabled: _validateNextStep(state),
                              height: 58,
                              width: double.infinity,
                              radius: 32,
                              widget: Text(
                                'Đăng nhập bằng OTP',
                                textAlign: TextAlign.center,
                                style: UITextStyle.semiBold.copyWith(
                                  color: _validateNextStep(state) ? UIColors.white : UIColors.grayText,
                                  fontSize: 18,
                                  height: 1,
                                ),
                              ),
                            ),
                            const SizedBox(
                              height: 16,
                            ),
                            SplashButton(
                              onTap: context.router.pop,
                              child: Text(
                                'Trải nghiệm trước, đăng nhập sau',
                                style: UITextStyle.medium.copyWith(
                                  fontSize: 16,
                                  color: UIColors.primaryColor,
                                ),
                              ),
                            ),
                            const SizedBox(
                              height: 40,
                            ),
                            Text(
                              'Hoặc đăng nhập nhanh bằng',
                              style: UITextStyle.regular.copyWith(
                                fontSize: 14,
                                color: UIColors.grayText,
                              ),
                            ),
                            const SizedBox(
                              height: 12,
                            ),
                            Row(
                              mainAxisAlignment: MainAxisAlignment.center,
                              children: [
                                LoginMethodItem(
                                  title: "Mật khẩu",
                                  icon: "ic_password",
                                  enable: true,
                                  onTap: _loginByPassword,
                                ),
                                const SizedBox(
                                  width: 50,
                                ),
                                LoginMethodItem(
                                  title: Platform.isIOS ? "FaceID" : "TouchID",
                                  icon: Platform.isIOS ? "ic_face_id" : "ic_touch_id",
                                  enable: true,
                                  onTap: _loginByBiometrics,
                                ),
                              ],
                            ),
                            const Spacer(),
                            RichText(
                              textAlign: TextAlign.center,
                              text: TextSpan(
                                children: [
                                  TextSpan(
                                    text: "Bằng việc đăng nhập vào MFast, bạn đã đồng ý với\n",
                                    style: UITextStyle.regular.copyWith(
                                      fontSize: 14,
                                      height: 1,
                                    ),
                                  ),
                                  TextSpan(
                                    text: "Chính sách Bảo mật",
                                    style: UITextStyle.regular.copyWith(
                                      fontSize: 14,
                                      color: UIColors.primaryColor,
                                    ),
                                    recognizer: TapGestureRecognizer()
                                      ..onTap = () {
                                        _onPrivacy(context);
                                      },
                                  ),
                                  TextSpan(
                                    text: " & ",
                                    style: UITextStyle.regular.copyWith(
                                      fontSize: 14,
                                      height: 1,
                                    ),
                                  ),
                                  TextSpan(
                                    text: "Điều khoản Dịch vụ",
                                    style: UITextStyle.regular.copyWith(
                                      fontSize: 14,
                                      color: UIColors.primaryColor,
                                    ),
                                    recognizer: TapGestureRecognizer()
                                      ..onTap = () {
                                        _onPolicy(context);
                                      },
                                  ),
                                ],
                              ),
                            ),
                            const SizedBox(
                              height: 24,
                            ),
                          ],
                        );
                      },
                    ),
                  ),
                ),
              ],
            ),
          ),
          BlocListener<AuthCubit, AuthState>(
            listenWhen: (pre, cur) => pre.hasLoggedIn != cur.hasLoggedIn,
            listener: (context, state) {
              if (state.hasLoggedIn) {
                context.router.popUntilRoot();
              }
            },
            child: BlocConsumer<LoginCubit, LoginState>(
              listener: (context, state) {
                if (state.verifyPasswordStatus.isSuccess) {
                  // context.router.pop();
                } else if (state.verifyPasswordStatus.isFailure) {
                  _loginByPassword(errMsg: state.errMsg);
                }
              },
              builder: (context, state) {
                return Visibility(
                  visible: state.verifyPasswordStatus.isLoading,
                  child: const LoadingWidget.dark(isFullScreen: true),
                );
              },
            ),
          ),
        ],
      ),
    );
  }

  _loginByOtp(BuildContext context, LoginState state) {
    context.router.push(
      OTPRoute(
        phoneNumber: state.phoneNumber,
        onSuccess: () {
          context.router.pop();
          Future.delayed(const Duration(milliseconds: 100), () {
            widget.onSuccess?.call();
          });
        },
        onRegister: (otpCode) {
          context.router.pop();
          context.pushRoute(
            RegisterNameRoute(
              payload: RegisterPayload(accessToken: state.phoneNumber, otpCode: otpCode),
            ),
          );
        },
      ),
    );
  }

  _loginByPassword({String? errMsg}) {
    if (LocalDataHelper.instance.getUsePassword() == true && LocalDataHelper.instance.getTryTimeLogin() != 0) {
      BottomSheetProvider.instance.show(context,
          title: 'Đăng nhập bằng mật khẩu',
          child: VerifyPasswordComponent(
            description: 'Nhập mật khẩu 6 chữ số của bạn để\nđăng nhập vào MFast',
            errMsg: errMsg,
            onComplete: (value) {
              context.read<LoginCubit>().verifyPassword(value);
            },
          ));
    } else {
      BottomSheetProvider.instance.show(
        context,
        title: 'Đăng nhập bằng mật khẩu',
        child: const IntroPassCodeComponent(),
      );
    }
  }

  _loginByBiometrics() {
    if (LocalDataHelper.instance.getUseBiometric() == true) {
      context.read<LoginCubit>().checkAvailableBiometrics();
    } else {
      BottomSheetProvider.instance.show(
        context,
        title: 'Đăng nhập bằng mật khẩu',
        child: const IntroPassCodeComponent(),
      );
    }
  }

  _validateNextStep(LoginState state) {
    return state.acceptedPolicy && PhoneInputValidation.dirty(value: state.phoneNumber).isValid;
  }

  _onShareInfo(BuildContext context) {
    DeepLinkUtil.open(AppData.instance.appInfo.consentUrl ?? "", forceOpenDeeplink: true);
  }

  _onPrivacy(BuildContext context) {
    context.pushRoute(
      WebViewRoute(
        title: "Chính sách bảo mật",
        url: AppData.instance.appInfo.privacyPolicyUrl ?? "",
      ),
    );
  }

  _onPolicy(BuildContext context) {
    context.pushRoute(
      WebViewRoute(
        title: "Điều khoản sử dụng",
        url: AppData.instance.appInfo.termsOfUsageUrl ?? "",
      ),
    );
  }
}
