import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/enum/tracking_event_type.dart';
import 'package:flutter_module/di/get_it.dart';
import 'package:flutter_module/features/app_cubit.dart';
import 'package:flutter_module/features/authentication/auth/auth_cubit.dart';
import 'package:flutter_module/features/authentication/repository/authentication_repository.dart';
import 'package:flutter_module/services/api/authentication/payload/register_payload.dart';

part 'register_name_state.dart';

class RegisterNameCubit extends Cubit<RegisterNameState> {
  RegisterNameCubit() : super(const RegisterNameState());
  final AuthenticationRepository _repository = AuthenticationRepository();

  checkNickname(String nickname) async {
    emit(state.copyWith(
      status: BlocStatus.loading,
    ));
    final result = await _repository.checkNickname(nickname);

    if (result.status) {
      emit(state.copyWith(
        status: BlocStatus.success,
      ));
    } else {
      emit(state.copyWith(
        status: BlocStatus.failure,
        errorMessage: result.errorMessage,
      ));
    }
  }

  clearErrorMessage() {
    if (state.errorMessage.isEmpty) return;
    emit(state.copyWith(errorMessage: ''));
  }

  register(RegisterPayload payload) async {
    emit(state.copyWith(
      status: BlocStatus.loading,
    ));
    final result = await _repository.register(payload);
    if (result.status) {
      getItInstance.get<AppCubit>().trackingEvent(event: TrackingEventType.completedRegistration);
      await Future.delayed(const Duration(seconds: 3));//delay for user create user (because: mfast_api_v1/hierarchical/hier_info_user -> error)
      emit(state.copyWith(status: BlocStatus.success));
      await getItInstance.get<AuthCubit>().onLogin(phoneNumber: payload.accessToken, user: result.data);
    } else {
      emit(state.copyWith(
        status: BlocStatus.failure,
        errorMessage: result.errorMessage,
      ));
    }
  }
}
