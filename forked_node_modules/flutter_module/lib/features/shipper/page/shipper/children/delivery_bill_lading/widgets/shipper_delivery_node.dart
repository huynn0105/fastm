import 'package:flutter/material.dart';
import 'package:timelines/timelines.dart';

import '../../../../../../../common/colors.dart';
import '../../../../../../../common/enum/shipper/delivery_status.dart';
import '../../../../../../../common/widgets/images.dart';

class ShipperDeliveryNode extends StatelessWidget {
  const ShipperDeliveryNode({
    Key? key,
    required this.isFirst,
    this.showVerticalDashLine = true,
    this.deliveryCode,
  }) : super(key: key);

  final bool isFirst;
  final bool showVerticalDashLine;
  final String? deliveryCode;

  @override
  Widget build(BuildContext context) {
    final double position = isFirst ? 0.1 : 0;
    return TimelineNode(
      indicator: _getIndicator(),
      startConnector: isFirst
          ? const DashedLineConnector(
              color: UIColors.gray,
              thickness: 1,
              dash: 5,
              gap: 5,
            )
          : null,
      endConnector: showVerticalDashLine
          ? const DashedLineConnector(
              color: UIColors.gray,
              thickness: 1,
              dash: 5,
              gap: 5,
            )
          : null,
      indicatorPosition: position,
    );
  }

  _getIndicator() {
    if (deliveryCode == DeliveryStatus.DELAY.name) {
      return const AppImage.asset(
        asset: "ic_shipper_time",
        width: 24,
        height: 24,
      );
    } else if (deliveryCode == DeliveryStatus.DELIVERY_FAILURE.name) {
      return const AppImage.asset(
        asset: "ic_failed",
        width: 24,
        height: 24,
      );
    } else {
      return const OutlinedDotIndicator(
        color: UIColors.gray,
        backgroundColor: UIColors.background,
        borderWidth: 2,
        size: 24,
      );
    }
  }
}
