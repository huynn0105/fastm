import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/enum/shipper/delivery_status.dart';
import 'package:flutter_module/common/widgets/radio.dart';
import 'package:flutter_module/features/shipper/cubit/bill_lading_detail/shipper_bill_lading_detail_cubit.dart';

import '../../../../../common/bottom_sheet/bottom_sheet_provider.dart';
import '../../../../../common/colors.dart';
import '../../../../../common/constants.dart';
import '../../../../../common/styles.dart';
import '../../../../../common/widgets/buttons.dart';
import '../../../../../common/widgets/collect_data_view.dart';
import '../../../../../common/widgets/textfields.dart';

class OrderStatusComponent extends StatefulWidget {
  const OrderStatusComponent({Key? key}) : super(key: key);

  @override
  State<StatefulWidget> createState() {
    return _OrderStatusComponentState();
  }
}

class _OrderStatusComponentState extends State<OrderStatusComponent> {
  final TextEditingController _reasonDelayController = TextEditingController();
  final TextEditingController _reasonFailureController = TextEditingController();

  @override
  void dispose() {
    _reasonDelayController.dispose();
    _reasonFailureController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final cubit = context.read<ShipperBillLadingDetailCubit>();
    final reasonDelay = context.select((ShipperBillLadingDetailCubit cubit) => cubit.state.data?.reasonDelay ?? []);
    final reasonFailure = context.select((ShipperBillLadingDetailCubit cubit) => cubit.state.data?.reasonFailure ?? []);
    return BlocBuilder<ShipperBillLadingDetailCubit, ShipperBillLadingDetailState>(
      builder: (context, state) {
        return Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              "Trạng thái giao hàng",
              style: UITextStyle.medium.copyWith(
                fontSize: 14,
                color: UIColors.grayText,
              ),
            ),
            const SizedBox(
              height: 10,
            ),
            Container(
              padding: const EdgeInsets.all(16),
              decoration: BoxDecoration(
                color: UIColors.white,
                borderRadius: BorderRadius.circular(8),
              ),
              child: Column(
                children: [
                  AppRadio(
                    title: 'Xác nhận đã đến nơi giao hàng',
                    value: state.selectedNextStep == DeliveryStatus.DELIVERIED,
                    onChanged: (value) {
                      if (value == false) {
                        cubit.changeNextStep(DeliveryStatus.DELIVERIED);
                      }
                    },
                  ),
                  const SizedBox(
                    height: 16,
                  ),
                  AppRadio(
                    title: 'Hẹn giao lần sau',
                    value: state.selectedNextStep == DeliveryStatus.DELAY,
                    onChanged: (value) {
                      if (value == false) {
                        cubit.changeNextStep(DeliveryStatus.DELAY);
                      }
                    },
                  ),
                  AnimatedSize(
                    duration: const Duration(milliseconds: 300),
                    alignment: Alignment.topCenter,
                    curve: Curves.linearToEaseOut,
                    child: Visibility(
                      visible: state.selectedNextStep == DeliveryStatus.DELAY,
                      child: Container(
                        margin: const EdgeInsets.only(left: 33, top: 8),
                        decoration: BoxDecoration(
                          color: UIColors.background,
                          borderRadius: BorderRadius.circular(8),
                        ),
                        child: AppSplashButton(
                          onTap: () async {
                            final index = await BottomSheetProvider.instance.showCupertinoPicker(
                              context,
                              data: reasonDelay.map((e) => e.messageOut ?? "").toList(),
                              title: "Lý do hẹn giao lần sau",
                            );
                            if (index is int) {
                              _reasonDelayController.text = reasonDelay[index].messageOut ?? '';
                              cubit.selectReasonDelay(reasonDelay[index].code);
                            }
                          },
                          child: Padding(
                            padding: const EdgeInsets.symmetric(vertical: 12, horizontal: 16),
                            child: CollectDataView(
                              errorMsg: state.errorFields[AppConstants.reasonDelayKey],
                              child: UITextField.dropdown(
                                controller: _reasonDelayController,
                                labelText: "Lí do",
                                readOnly: true,
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                  const SizedBox(
                    height: 16,
                  ),
                  AppRadio(
                    title: 'Giao hàng không thành công',
                    value: state.selectedNextStep == DeliveryStatus.DELIVERY_FAILURE,
                    onChanged: (value) {
                      if (value == false) {
                        cubit.changeNextStep(DeliveryStatus.DELIVERY_FAILURE);
                      }
                    },
                  ),
                  AnimatedSize(
                    duration: const Duration(milliseconds: 300),
                    alignment: Alignment.topCenter,
                    curve: Curves.linearToEaseOut,
                    child: Visibility(
                      visible: state.selectedNextStep == DeliveryStatus.DELIVERY_FAILURE,
                      child: Container(
                        margin: const EdgeInsets.only(left: 33, top: 8),
                        decoration: BoxDecoration(
                          color: UIColors.background,
                          borderRadius: BorderRadius.circular(8),
                        ),
                        child: AppSplashButton(
                          onTap: () async {
                            final index = await BottomSheetProvider.instance.showCupertinoPicker(
                              context,
                              data: reasonFailure.map((e) => e.messageOut ?? "").toList(),
                              title: "Lý do từ chối nhận hàng",
                            );
                            if (index is int) {
                              _reasonFailureController.text = reasonFailure[index].messageOut ?? '';
                              cubit.selectReasonFailure(reasonFailure[index].code);
                            }
                          },
                          child: Padding(
                            padding: const EdgeInsets.symmetric(vertical: 12, horizontal: 16),
                            child: CollectDataView(
                              errorMsg: state.errorFields[AppConstants.reasonFailureKey],
                              child: UITextField.dropdown(
                                controller: _reasonFailureController,
                                labelText: "Lí do",
                                readOnly: true,
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ],
        );
      },
    );
  }
}
