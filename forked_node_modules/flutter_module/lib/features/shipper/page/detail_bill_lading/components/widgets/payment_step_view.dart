import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/enum/shipper/payment_status.dart';
import 'package:flutter_module/common/enum/shipper/upload_invoice_process.dart';
import 'package:flutter_module/common/utils/datetime_util.dart';
import 'package:flutter_module/common/utils/text_util.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/models/mtrade/personal_website_setup/mtrade_personal_website_setup_model.dart';

import '../../../../../../common/colors.dart';
import '../../../../../../common/styles.dart';
import '../../../../../../common/widgets/images.dart';
import '../../../../../../models/shipper/order/shipper_detail_order_model.dart';
import '../../../../../mtrade/page/personal_website_setup/components/website_component.dart';
import '../../../../cubit/bill_lading_detail/shipper_bill_lading_detail_cubit.dart';
import '../../../../cubit/upload_image/upload_image_cubit.dart';
import 'upload_invoice_widget.dart';

class PaymentStepView extends StatelessWidget {
  const PaymentStepView({
    super.key,
    this.data,
    required this.editable,
    this.onPaid,
  });

  final DeliveryModel? data;
  final bool editable;
  final Function()? onPaid;

  @override
  Widget build(BuildContext context) {
    final code = data?.orderDetail?.masterPaymentsStatus?.code;
    final isPaid = code == PaymentStatus.PAID.name;
    return Column(
      children: [
        Container(
          padding: const EdgeInsets.symmetric(vertical: 10, horizontal: 16),
          decoration: BoxDecoration(
            color: UIColors.white,
            borderRadius: BorderRadius.circular(8),
          ),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Row(
                children: [
                  Text(
                    'Trạng thái',
                    style: UITextStyle.regular.copyWith(
                      color: UIColors.grayText,
                    ),
                  ),
                  const Spacer(),
                  if (TextUtils.isNotEmpty(data?.orderDetail?.paymentDate))
                    Text(
                      'Lúc ${DateTimeUtil.convertDate(
                        data?.orderDetail?.paymentDate,
                        fromFormat: DateTimeFormat.yyyy_MM_ddTHH_mm_ssSS,
                        toFormat: DateTimeFormat.HH_mm_dd_MM,
                      )}',
                      style: UITextStyle.regular.copyWith(
                        color: UIColors.grayText,
                      ),
                    ),
                ],
              ),
              const SizedBox(
                height: 1,
              ),
              Text(
                data?.orderDetail?.masterPaymentsStatus?.name ?? '',
                style: UITextStyle.semiBold.copyWith(
                  color: _getStatusColor(code),
                ),
              )
            ],
          ),
        ),
        if (!isPaid)
          WebsiteComponent(
            title: 'Gửi link thanh toán online cho khách hàng',
            titleStyle: UITextStyle.semiBold.copyWith(
              fontSize: 14,
              color: UIColors.grayText,
            ),
            showSetup: false,
            padding: EdgeInsets.zero,
            onAction: () {
              context.read<ShipperBillLadingDetailCubit>().extendPaymentLink(data?.orderDetail?.code ?? '');
            },
            data: MTradePersonalWebsiteSetupModel(sortLink: data?.orderDetail?.paymentLink),
          ),
        if (!isPaid)
          const SizedBox(
            height: 20,
          ),
        if (!isPaid)
          BlocBuilder<UploadImageCubit, UploadImageState>(
            builder: (context, state) {
              if (state.uploadInvoiceProcess == UploadInvoiceProcess.upload) {
                return const SizedBox();
              }
              bool isWaiting = state.uploadInvoiceProcess == UploadInvoiceProcess.waiting && state.countDown > 0;
              return SplashButton(
                onTap: () {
                  if (!isWaiting) {
                    context.read<UploadImageCubit>().requestCheckInvoice(data?.orderDetail?.paymentTransactionId, onPaid);
                  }
                },
                child: Row(
                  children: [
                    const Spacer(),
                    AppImage.asset(
                      asset: 'ic_refresh',
                      width: 24,
                      height: 24,
                      color: isWaiting ? UIColors.darkGray : UIColors.primaryColor,
                    ),
                    const SizedBox(
                      width: 8,
                    ),
                    Text(
                      isWaiting
                          ? 'Kiểm tra lại sau ${DateTimeUtil.formatHHMMSS(state.countDown)}'
                          : 'Kiểm tra trạng thái',
                      style: UITextStyle.medium.copyWith(
                        fontSize: 16,
                        color: isWaiting ? UIColors.darkGray : UIColors.primaryColor,
                      ),
                    ),
                    const Spacer(),
                  ],
                ),
              );
            },
          ),
        if (!isPaid)
          UploadInvoiceWidget(
            orderCode: data?.orderDetail?.code ?? '',
            editable: editable,
          ),
        if (!isPaid)
          const SizedBox(
            height: 10,
          ),
      ],
    );
  }

  _getStatusColor(String? code) {
    if (code == PaymentStatus.ERROR_PAYMENT.name) {
      return UIColors.red;
    }
    if (code == PaymentStatus.PAID.name) {
      return UIColors.accentGreen;
    }
    return UIColors.secondaryColor;
  }
}
