import 'package:flutter/material.dart';
import 'package:flutter_module/common/widgets/buttons.dart';

import '../../../../../common/colors.dart';
import '../../../../../common/styles.dart';
import '../../../../../common/widgets/divider.dart';
import '../../../../../common/widgets/images.dart';
import '../../../../../models/shipper/order/shipper_detail_order_model.dart';
import '../items/delivery_address_item.dart';
import '../items/order_item.dart';
import '../items/sale_info_component.dart';

class DetailOrderComponent extends StatefulWidget {
  const DetailOrderComponent({
    Key? key,
    this.data,
    this.showDetail = true,
    this.showToggleBtn = true,
  }) : super(key: key);
  final DeliveryModel? data;
  final bool showDetail;
  final bool showToggleBtn;

  @override
  State<StatefulWidget> createState() {
    return _DetailOrderComponentState();
  }
}

class _DetailOrderComponentState extends State<DetailOrderComponent> with TickerProviderStateMixin {
  late bool _showDetail;
  late AnimationController _animationController;
  late Animation<double> _expandAnimation;

  @override
  void initState() {
    _showDetail = widget.showDetail;
    super.initState();
    _animationController = AnimationController(
      vsync: this,
      duration: Duration(milliseconds: widget.showToggleBtn ? 300 : 0),
    );
    _expandAnimation = Tween(begin: 0.0, end: 1.0).animate(_animationController);
    if (_showDetail) {
      _animationController.forward();
    }
  }

  @override
  void dispose() {
    _animationController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        SizeTransition(
          axisAlignment: 1,
          axis: Axis.vertical,
          sizeFactor: _expandAnimation,
          child: Column(
            children: [
              DeliveryAddressItem(
                data: widget.data,
              ),
              const DottedDivider(
                height: 12,
              ),
              SaleInfoComponent(
                data: widget.data,
              ),
              const DottedDivider(
                height: 12,
              ),
              OrderItem(
                data: widget.data,
              ),
              if (widget.showToggleBtn)
                const SizedBox(
                  height: 12,
                ),
            ],
          ),
        ),
        if (widget.showToggleBtn)
          SplashButton(
            onTap: () {
              if (_showDetail) {
                _animationController.reverse().then((value) {
                  _showDetail = false;
                  setState(() {});
                });
              } else {
                _animationController.forward().then((value) {
                  _showDetail = true;
                  setState(() {});
                });
              }
            },
            child: Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                AppImage.asset(
                  asset: _showDetail ? 'ic_minus' : 'ic_plus',
                  width: 24,
                  height: 24,
                ),
                const SizedBox(
                  width: 8,
                ),
                Text(
                  _showDetail ? 'Thu gọn thông tin' : 'Thông tin đơn hàng',
                  textAlign: TextAlign.center,
                  style: UITextStyle.medium.copyWith(
                    fontSize: 16,
                    color: UIColors.primaryColor,
                    height: 1.1,
                  ),
                ),
              ],
            ),
          )
      ],
    );
  }
}
