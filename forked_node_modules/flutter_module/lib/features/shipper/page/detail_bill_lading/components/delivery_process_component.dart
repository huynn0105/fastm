import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/features/shipper/cubit/upload_image/upload_image_cubit.dart';
import 'package:flutter_module/features/shipper/page/detail_bill_lading/components/widgets/payment_step_view.dart';
import 'package:flutter_module/features/shipper/page/detail_bill_lading/components/widgets/process_header.dart';

import '../../../../../common/colors.dart';
import '../../../../../common/enum/shipper/delivery_status.dart';
import '../../../../../common/enum/shipper/payment_status.dart';
import '../../../../../common/enum/shipper/upload_invoice_process.dart';
import '../../../../../common/styles.dart';
import '../../../../../models/shipper/order/shipper_detail_order_model.dart';
import 'widgets/delivery_status_widget.dart';
import 'widgets/delivery_timeline.dart';

class DeliveryProcessComponent extends StatelessWidget {
  const DeliveryProcessComponent({
    Key? key,
    this.data,
    required this.editable,
    required this.systemNotUpdatePaid,
    this.onPaid,
  }) : super(key: key);

  final DeliveryModel? data;
  final bool editable;
  final bool systemNotUpdatePaid;
  final Function()? onPaid;

  @override
  Widget build(BuildContext context) {
    final isPaid = data?.orderDetail?.masterPaymentsStatus?.code == PaymentStatus.PAID.name;
    final isSuccess = data?.orderDetail?.masterDeliveryStatus?.code == DeliveryStatus.SUCCEED.name;
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Container(
          height: 4,
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(8),
            color: UIColors.white,
          ),
        ),
        const SizedBox(
          height: 16,
        ),
        Text(
          "Tiến trình xử lý đơn hàng",
          style: UITextStyle.medium.copyWith(
            fontSize: 14,
            color: UIColors.grayText,
          ),
        ),
        const SizedBox(
          height: 8,
        ),
        DeliveryTimeline(
          nodeIndex: '1',
          children: [
            ProcessHeader(
              title: 'Thanh toán đơn hàng',
              icon: isPaid ? 'ic_status_success' : 'ic_pending_time',
            ),
            const SizedBox(
              height: 12,
            ),
            PaymentStepView(
              data: data,
              editable: editable,
              onPaid: onPaid,
            ),
          ],
        ),
        const SizedBox(
          height: 12,
        ),
        DeliveryTimeline(
          nodeIndex: '2',
          connectorVisible: false,
          children: [
            ProcessHeader(
              title: 'Giao hàng và lắp đặt',
              icon: isSuccess ? 'ic_status_success' : 'ic_pending_time',
            ),
            const SizedBox(
              height: 12,
            ),
            BlocBuilder<UploadImageCubit, UploadImageState>(
              builder: (context, state) {
                if (isSuccess) {
                  return const DeliveryStatusWidget(
                    msg: 'Thành công',
                    color: UIColors.accentGreen,
                  );
                }
                bool isPaidComplete = isPaid || (state.uploadInvoiceProcess == UploadInvoiceProcess.upload && state.invoiceCheckBox);
                if (isPaidComplete && systemNotUpdatePaid) {
                  return const DeliveryStatusWidget(
                    msg: 'Đã upload hình ảnh nhưng chờ đối soát',
                    color: UIColors.accentGreen,
                  );
                }
                if (isPaidComplete) {
                  return Container(
                    padding: const EdgeInsets.symmetric(vertical: 10, horizontal: 16),
                    decoration: BoxDecoration(
                      color: UIColors.white,
                      borderRadius: BorderRadius.circular(8),
                    ),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          'Trạng thái',
                          style: UITextStyle.regular.copyWith(
                            color: UIColors.grayText,
                          ),
                        ),
                        const SizedBox(
                          height: 1,
                        ),
                        Text(
                          'Đã xác nhận giao hàng, nhưng chưa bổ sung chứng từ',
                          style: UITextStyle.semiBold.copyWith(
                            color: UIColors.secondaryColor,
                          ),
                        )
                      ],
                    ),
                  );
                }
                return Container(
                  padding: const EdgeInsets.symmetric(vertical: 10, horizontal: 16),
                  decoration: BoxDecoration(
                    color: UIColors.white,
                    borderRadius: BorderRadius.circular(8),
                  ),
                  child: Text(
                    'Đơn hàng cần được thanh toán trước khi bổ sung hình ảnh/chứng từ về quá trình giao hàng và lắp đặt.',
                    style: UITextStyle.regular.copyWith(
                      color: UIColors.grayText,
                    ),
                  ),
                );
              },
            ),
          ],
        ),
        const SizedBox(
          height: 16,
        ),
        Container(
          height: 4,
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(8),
            color: UIColors.white,
          ),
        ),
      ],
    );
  }
}
