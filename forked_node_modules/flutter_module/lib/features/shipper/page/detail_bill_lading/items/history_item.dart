import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:flutter_module/common/constants.dart';
import 'package:timelines/timelines.dart';

import '../../../../../common/colors.dart';
import '../../../../../common/size.dart';
import '../../../../../common/styles.dart';

class HistoryItem extends StatelessWidget {
  const HistoryItem({
    Key? key,
    required this.date,
    required this.label,
    this.title,
    this.icon,
    this.dateColor = UIColors.grayText,
    this.lineColor = UIColors.lightGray,
    this.dotColor = UIColors.darkGray,
    this.lineWidth = 1,
    this.dotSize = 8,
    this.titleColor = UIColors.defaultText,
    this.labelColor = UIColors.defaultText,
    this.contentsPadding = const EdgeInsets.only(left: 8, top: 12, bottom: 12),
    this.oppositeContentsPadding = const EdgeInsets.only(right: 8, top: 12, bottom: 12),
    this.iconColor,
    this.titleStyle,
    this.labelStyle,
  }) : super(key: key);

  final String date;
  final String label;
  final String? title;
  final String? icon;
  final Color? dateColor;
  final Color? lineColor;
  final Color? dotColor;
  final double lineWidth;
  final double dotSize;
  final Color? titleColor;
  final Color? labelColor;
  final EdgeInsets contentsPadding;
  final EdgeInsets oppositeContentsPadding;
  final Color? iconColor;
  final TextStyle? titleStyle;
  final TextStyle? labelStyle;

  @override
  Widget build(BuildContext context) {
    final width =
        AppSize.instance.width > AppConstants.responsiveSize ? AppConstants.responsiveSize : AppSize.instance.width;
    return TimelineTile(
      node: TimelineNode(
        indicator: icon?.isNotEmpty == true
            ? Padding(
                padding: const EdgeInsets.symmetric(vertical: 4),
                child: Image.network(icon ?? '',
                    width: 20, height: 20, color: iconColor))
            : SizedBox(
                width: 20,
                child: DotIndicator(
                  size: dotSize,
                  color: dotColor,
                ),
              ),
        startConnector: SolidLineConnector(
          color: lineColor,
          thickness: lineWidth,
        ),
        endConnector: SolidLineConnector(
          color: lineColor,
          thickness: lineWidth,
        ),
        indicatorPosition: 0.5,
      ),
      nodePosition: 95 / (width - 64),
      contents: Padding(
        padding: contentsPadding,
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            if (title?.isNotEmpty == true)
              Text(
                title ?? '',
                style: titleStyle ??
                    UITextStyle.semiBold.copyWith(color: titleColor),
              ),
            Text(
              label,
              style: labelStyle ??
                  UITextStyle.regular.copyWith(
                    fontSize: 13,
                    color: labelColor,
                  ),
            ),
          ],
        ),
      ),
      oppositeContents: Padding(
        padding: oppositeContentsPadding,
        child: Text(
          date,
          style: UITextStyle.regular.copyWith(
            fontSize: 13,
            color: dateColor,
          ),
          textAlign: TextAlign.right,
        ),
      ),
    );
  }
}
