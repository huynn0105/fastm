import 'package:bloc/bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/enum/mfast/notification_category.dart';
import 'package:flutter_module/features/notification/repository/notification_repository.dart';

part 'notification_tab_state.dart';

class NotificationTabCubit extends Cubit<NotificationTabState> {
  NotificationTabCubit() : super(const NotificationTabState());

  final NotificationRepository _repository = NotificationRepository();

  triggerShowAll() {
    emit(state.copyWith(
      isTriggerShowAll: true,
    ));
  }

  triggerShowUnread() {
    emit(state.copyWith(
      isTriggerShowUnread: true,
    ));
  }

  triggerReadAll() {
    emit(state.copyWith(
      isTriggerReadAll: true,
    ));
  }

  fetchTotalUnread() async {
    final result = await _repository.getUnreadNotification();
    if (result.status) {
      emit(state.copyWith(
        totalSystemUnread: result.data?[NotificationCategory.system.name] ?? 0,
        totalAdminUnread: result.data?[NotificationCategory.admin.name] ?? 0,
      ));
    }
  }

  subtractUnread({String? category}) {
    if (category == NotificationCategory.system.name) {
      emit(state.copyWith(
        totalSystemUnread: state.totalSystemUnread - 1,
      ));
    }
    if (category == NotificationCategory.admin.name) {
      emit(state.copyWith(
        totalAdminUnread: state.totalAdminUnread - 1,
      ));
    }
  }

  clearUnread({String? category}) {
    if (category == NotificationCategory.system.name) {
      emit(state.copyWith(
        totalSystemUnread: 0,
      ));
    }
    if (category == NotificationCategory.admin.name) {
      emit(state.copyWith(
        totalAdminUnread: 0,
      ));
    }
  }
}
