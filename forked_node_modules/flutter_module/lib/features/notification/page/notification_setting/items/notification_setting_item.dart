import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/features/notification/cubit/notification_setting/notification_setting_cubit.dart';
import 'package:flutter_module/models/mfast/notification/mfast_notification_setting_model.dart';
import 'package:flutter_switch/flutter_switch.dart';

class NotificationSettingItem extends StatelessWidget {
  const NotificationSettingItem({
    super.key,
    required this.item,
  });

  final MFastNotificationSettingModel item;

  @override
  Widget build(BuildContext context) {
    return Container(
      margin: const EdgeInsets.only(top: 16),
      padding: const EdgeInsets.symmetric(
        horizontal: 16,
        vertical: 12,
      ),
      color: UIColors.white,
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Expanded(
                child: Text(
                  item.name ?? "",
                  style: UITextStyle.semiBold.copyWith(
                    fontSize: 16,
                  ),
                ),
              ),
              FlutterSwitch(
                width: 46,
                height: 28,
                value: item.subsStatus == true,
                borderRadius: 23,
                padding: 2,
                activeColor: UIColors.primaryColor,
                inactiveColor: UIColors.gray,
                onToggle: (val) {
                  _onChangeNotificationSetting(context, status: val);
                },
              ),
            ],
          ),
          const SizedBox(
            height: 8,
          ),
          Text(
            item.description ?? "",
            style: UITextStyle.regular,
          ),
        ],
      ),
    );
  }

  void _onChangeNotificationSetting(BuildContext context, {required bool status}) {
    final cubit = context.read<NotificationSettingCubit>();
    cubit.changeNotificationSetting(categoryID: item.iD ?? '', status: status);
  }
}
