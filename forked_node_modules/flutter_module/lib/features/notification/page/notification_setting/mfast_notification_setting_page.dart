import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/appbar.dart';
import 'package:flutter_module/common/widgets/loading.dart';
import 'package:flutter_module/features/notification/cubit/notification_setting/notification_setting_cubit.dart';
import 'package:flutter_module/features/notification/page/notification_setting/items/notification_setting_item.dart';

@RoutePage()
class MFastNotificationSettingPage extends StatelessWidget implements AutoRouteWrapper {
  const MFastNotificationSettingPage({super.key});

  @override
  Widget wrappedRoute(BuildContext context) {
    return BlocProvider(
      create: (context) {
        final cubit = NotificationSettingCubit();
        cubit.fetchNotificationSettings();
        return cubit;
      },
      child: this,
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: MFastSimpleAppBar(
        context: context,
        title: "Thiết lập thông báo",
      ),
      body: BlocBuilder<NotificationSettingCubit, NotificationSettingState>(
        builder: (context, state) {
          if (state.status.isLoading) {
            return const LoadingWidget.withoutText();
          }

          return Stack(
            children: [
              Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Padding(
                    padding: const EdgeInsets.fromLTRB(16, 16, 16, 0),
                    child: Text(
                      'Các loại thông báo trên MFast',
                      style: UITextStyle.regular.copyWith(
                        fontSize: 13,
                        color: UIColors.grayText,
                      ),
                    ),
                  ),
                  Expanded(
                    child: ListView(
                      children: [
                        ...List.generate(state.settings.length, (index) {
                          final item = state.settings[index];
                          return NotificationSettingItem(item: item);
                        })
                      ],
                    ),
                  ),
                ],
              ),
              Visibility(
                visible: state.updateStatus.isLoading,
                child: const LoadingWidget.dark(),
              )
            ],
          );
        },
      ),
    );
  }
}
