import 'package:auto_route/auto_route.dart';
import 'package:ekyc/common/styles.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/enum/mfast/notification_category.dart';
import 'package:flutter_module/common/utils/redirect_util.dart';
import 'package:flutter_module/common/widgets/appbar.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/common/widgets/tabbar/tabbar.dart';
import 'package:flutter_module/features/notification/cubit/notification_tab/notification_tab_cubit.dart';
import 'package:flutter_module/routes/routes.gr.dart';

@RoutePage()
class MFastNotificationPage extends StatefulWidget implements AutoRouteWrapper {
  const MFastNotificationPage({super.key});

  @override
  State<MFastNotificationPage> createState() => _MFastNotificationPageState();

  @override
  Widget wrappedRoute(BuildContext context) {
    return BlocProvider(
      create: (context) {
        final cubit = NotificationTabCubit();
        cubit.fetchTotalUnread();
        return cubit;
      },
      child: this,
    );
  }
}

class _MFastNotificationPageState extends State<MFastNotificationPage> with SingleTickerProviderStateMixin {
  TabController? _tabController;

  @override
  void initState() {
    super.initState();
  }

  @override
  void dispose() {
    _tabController?.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return WillPopScope(
      onWillPop: () async {
        if (!context.router.canPop()) {
          RedirectUtil.backToMFast();
          return false;
        }
        return true;
      },
      child: Scaffold(
        appBar: MFastSimpleAppBar(
          title: 'Trợ lý tin tức',
          centerTitle: false,
          backgroundColor: UIColors.white,
          context: context,
          onBack: context.popRoute,
          actions: [
            AppSplashButton(
              onTap: () {
                _onShowBottomSheet(context);
              },
              child: const AppImage.asset(
                asset: "ic_more_horizontal_outline",
                width: 24,
                height: 24,
                color: UIColors.grayText,
              ),
            ),
            const SizedBox(
              width: 20,
            ),
            AppSplashButton(
              onTap: () {
                context.pushRoute(const MFastNotificationSettingRoute());
              },
              child: const AppImage.asset(
                asset: "ic_setting_outline",
                width: 24,
                height: 24,
                color: UIColors.grayText,
              ),
            ),
            const SizedBox(
              width: 12,
            ),
          ],
        ),
        body: AutoTabsRouter.tabBar(
          routes: [
            MFastNotificationSystemRoute(
              category: NotificationCategory.system,
            ),
            MFastNotificationAdminRoute(
              category: NotificationCategory.admin,
            ),
          ],
          builder: (BuildContext context, Widget child, TabController controller) {
            _tabController ??= controller;
            return Column(
              children: [
                BlocBuilder<NotificationTabCubit, NotificationTabState>(
                  builder: (context, state) {
                    return UnderlineIndicatorTabbar(
                      controller: _tabController!,
                      backgroundColor: UIColors.white,
                      titles: ["Biến động (${state.totalSystemUnread})", "Thông báo (${state.totalAdminUnread})"],
                      onTap: (index) {
                        AutoTabsRouter.of(context).setActiveIndex(index);
                      },
                    );
                  },
                ),
                Expanded(
                  child: child,
                ),
              ],
            );
          },
        ),
      ),
    );
  }
}

void _onShowBottomSheet(BuildContext context) {
  showCupertinoModalPopup(
    context: context,
    builder: (context) {
      return CupertinoActionSheet(
        actions: [
          CupertinoActionSheetAction(
            onPressed: () {
              Navigator.pop(context, 0);
            },
            child: Text(
              'Xem tất cả tin',
              style: UITextStyle.regular.copyWith(
                fontSize: 18,
                color: UIColors.primaryColor,
              ),
            ),
          ),
          CupertinoActionSheetAction(
            onPressed: () {
              Navigator.pop(context, 1);
            },
            child: Text(
              'Xem tin chưa đọc',
              style: UITextStyle.regular.copyWith(
                fontSize: 18,
                color: UIColors.primaryColor,
              ),
            ),
          ),
          CupertinoActionSheetAction(
            onPressed: () {
              Navigator.pop(context, 2);
            },
            child: Text(
              'Đánh dấu tất cả đã đọc',
              style: UITextStyle.regular.copyWith(
                fontSize: 18,
                color: UIColors.primaryColor,
              ),
            ),
          ),
          CupertinoActionSheetAction(
            onPressed: () {
              Navigator.pop(context);
            },
            isDestructiveAction: true,
            child: Text(
              'Đóng',
              style: UITextStyle.medium.copyWith(
                fontSize: 18,
                color: UIColors.red,
              ),
            ),
          ),
        ],
      );
    },
  ).then((value) {
    if (value is int) {
      final cubit = context.read<NotificationTabCubit>();
      switch (value) {
        case 0:
          cubit.triggerShowAll();
          break;
        case 1:
          cubit.triggerShowUnread();
          break;
        case 2:
          cubit.triggerReadAll();
          break;
      }
    }
  });
}
