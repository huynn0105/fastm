import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/constants.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/loading.dart';
import 'package:flutter_module/features/news/cubit/knowledges/knowledges_cubit.dart';
import 'package:flutter_module/features/news/pages/news/items/knowledges_item.dart';
import 'package:expandable/expandable.dart';

@RoutePage()
class KnowledgesTabPage extends StatelessWidget implements AutoRouteWrapper {
  const KnowledgesTabPage({super.key});

  @override
  Widget wrappedRoute(BuildContext context) {
    return BlocProvider(
      create: (_) => KnowledgesCubit()..fetchData(showLoading: true),
      child: this,
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Padding(
        padding: const EdgeInsets.only(left: 16, right: 16),
        child: BlocBuilder<KnowledgesCubit, KnowledgesState>(
          builder: (context, stateKnowledges) {
            if (stateKnowledges.status.isLoading) {
              return const LoadingWidget();
            }
            return Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Container(
                  margin: const EdgeInsets.only(bottom: 12),
                  child: Text(
                    'Danh sách kiến thức',
                    style: UITextStyle.semiBold.copyWith(
                      fontSize: 14,
                      color: UIColors.grayText,
                    ),
                  ),
                ),
                Expanded(
                  child: ExpandableTheme(
                    data: const ExpandableThemeData(
                      useInkWell: true,
                    ),
                    child: ListView(
                      physics: AppConstants.physics,
                      children: stateKnowledges.knowledges
                          .asMap()
                          .entries
                          .map(
                            (entry) => KnowledgesItem(
                              item: entry.value,
                              index: entry.key,
                              isParent: true,
                            ),
                          )
                          .toList(),
                    ),
                  ),
                ),
              ],
            );
          },
        ),
      ),
    );
  }
}
