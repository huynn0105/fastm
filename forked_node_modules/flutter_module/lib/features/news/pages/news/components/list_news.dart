import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/datetime_util.dart';
import 'package:flutter_module/common/utils/deeplink_util.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/models/news/news_model.dart';

class ListNews extends StatelessWidget {
  const ListNews({
    super.key,
    this.title,
    required this.data,
  });

  final List<NewsModel> data;
  final String? title;

  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisSize: MainAxisSize.min,
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          'Tin tức $title',
          style: UITextStyle.medium.copyWith(
            fontSize: 14,
            color: UIColors.lightBlack,
          ),
        ),
        Column(
          children: data.map(
            (item) {
              return AppSplashButton(
                onTap: () {
                  DeepLinkUtil.open(item.webURL, title: item.postTitle);
                },
                child: Column(
                  children: [
                    const SizedBox(
                      height: 12,
                    ),
                    Row(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Container(
                          margin: const EdgeInsets.only(right: 16),
                          width: 155,
                          child: AspectRatio(
                            aspectRatio: 155 / 86,
                            child: Image.network(
                              item.postImage ?? '',
                              fit: BoxFit.fill,
                            ),
                          ),
                        ),
                        Expanded(
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Row(
                                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    '# ${item.hashtag?.map((e) => e).join(", ")}',
                                    style: UITextStyle.regular.copyWith(
                                      fontSize: 12,
                                      color: UIColors.darkGray,
                                    ),
                                  ),
                                  Text(
                                    '${DateTimeUtil.convertTimeAgo(
                                      DateTime.fromMillisecondsSinceEpoch((item.createdDate ?? 0) * 1000).toString(),
                                      isFormatDateName: true,
                                      format: DateTimeFormat.yyyy_MM_dd_HH_mm_ss,
                                    )} trước',
                                    style: UITextStyle.regular.copyWith(
                                      fontSize: 12,
                                      color: UIColors.darkGray,
                                    ),
                                  ),
                                ],
                              ),
                              Container(
                                margin: const EdgeInsets.only(top: 8),
                                child: Text(
                                  item.postTitle ?? '',
                                  style: UITextStyle.regular.copyWith(
                                    fontSize: 14,
                                    color: UIColors.lightBlack,
                                  ),
                                  maxLines: 3,
                                  overflow: TextOverflow.ellipsis,
                                ),
                              ),
                            ],
                          ),
                        )
                      ],
                    ),
                    const SizedBox(
                      height: 16,
                    ),
                    const Divider(
                      thickness: 1,
                    )
                  ],
                ),
              );
            },
          ).toList(),
        )
      ],
    );
  }
}
