import 'package:auto_route/auto_route.dart';
import 'package:expandable/expandable.dart';
import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/models/news/knowledges_model.dart';
import 'package:flutter_module/routes/routes.gr.dart';

import '../../../../../common/widgets/images.dart';

class KnowledgesItem extends StatelessWidget {
  const KnowledgesItem({
    super.key,
    required this.item,
    this.isParent = false,
    this.index = 0,
  });

  final KnowledgesModel item;
  final bool isParent;
  final int index;

  @override
  Widget build(BuildContext context) {
    return ExpandableNotifier(
      child: Container(
          margin: index > 0 && isParent
          ? const EdgeInsets.only(top: 16)
          : EdgeInsets.zero,
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(10),
            color: UIColors.white,
          ),
          child: Column(
            children: [
              isParent
                  ? Container()
                  : const Divider(
                      height: 1,
                      thickness: 1,
                      color: UIColors.lightGray,
                    ),
              Builder(builder: (context) {
                var controller =
                ExpandableController.of(context, required: true)!;

                return SplashButton(
                  onTap: () {
                    if (item.extend?.isNotEmpty == true) {
                      controller.toggle();
                    } else {
                      context.pushRoute(WebViewRoute(title: item.title, url: item.ackUrl));
                    }
                  },
                  child: Padding(
                    padding: isParent
                        ? const EdgeInsets.symmetric(
                          vertical: 16, horizontal: 12)
                        : const EdgeInsets.symmetric(vertical: 10),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Row(
                          children: [
                            isParent
                                ? Container(
                                    margin: const EdgeInsets.only(right: 12),
                                    child: Image.network(
                                      item.imageUrl!,
                                      width: 32,
                                      height: 32,
                                    ),
                                  )
                                : Container(),
                            Expanded(
                              child: Row(
                                children: [
                                  Expanded(
                                    child: Container(
                                      margin: const EdgeInsets.only(right: 12),
                                      child: Text(
                                        item.title!,
                                        style: isParent
                                            ? UITextStyle.medium.copyWith(
                                                fontSize: 16,
                                                color: UIColors.lightBlack,
                                              )
                                            : controller.expanded
                                                ? UITextStyle.semiBold.copyWith(
                                                    fontSize: 14,
                                                    color: UIColors.primaryColor,
                                                  )
                                                : UITextStyle.regular.copyWith(
                                                    fontSize: 14,
                                                    color: UIColors.grayText,
                                                  ),
                                      ),
                                    ),
                                  ),
                                  AnimatedRotation(
                                    duration: const Duration(milliseconds: 200),
                                    turns: controller.expanded ? 0 : -0.25,
                                    child: const AppImage.asset(
                                      asset: 'ic_arrow_down',
                                      width: 20,
                                      height: 20,
                                    ),
                                  )
                                ],
                              ),
                            ),
                          ],
                        ),
                      ],
                    ),
                  ),
                );
              }),
              ScrollOnExpand(
                child: ExpandablePanel(
                  theme: const ExpandableThemeData(
                    headerAlignment: ExpandablePanelHeaderAlignment.center,
                  ),
                  collapsed: Container(),
                  expanded: Padding(
                    padding: isParent
                    ? const EdgeInsets.symmetric(horizontal: 12)
                    : EdgeInsets.zero,
                    child: Column(children: [
                      IntrinsicHeight(
                        child: Row(
                          mainAxisSize: MainAxisSize.min,
                          children: [
                            Container(
                              width: isParent ? 32 : 8,
                              margin: const EdgeInsets.only(right: 12),
                              child: Column(
                                children: [
                                  Container(
                                    width: 8,
                                    height: 8,
                                    decoration: const BoxDecoration(
                                      color: UIColors.lightGray,
                                      shape: BoxShape.circle,
                                    ),
                                  ),
                                  Expanded(
                                    child: Container(
                                      width: 2,
                                      height: double.infinity,
                                      color: UIColors.lightGray,
                                      margin: const EdgeInsets.only(bottom: 20),
                                    ),
                                  )
                                ],
                              ),
                            ),
                            if (item.extend?.isNotEmpty == true) ...{
                              Expanded(
                                child: Column(
                                    children: item.extend!
                                        .asMap()
                                        .entries
                                        .map((entry) => KnowledgesItem(
                                              item: entry.value,
                                              index: entry.key,
                                            ))
                                        .toList()),
                              )
                            },
                          ],
                        ),
                      )
                    ]),
                  ),
                  builder: (_, collapsed, expanded) {
                    return Padding(
                      padding: const EdgeInsets.all(0),
                      child: Expandable(
                        collapsed: collapsed,
                        expanded: expanded,
                        theme: const ExpandableThemeData(crossFadePoint: 0),
                      ),
                    );
                  },
                ),
              )
            ],
          )),
    );
  }
}
