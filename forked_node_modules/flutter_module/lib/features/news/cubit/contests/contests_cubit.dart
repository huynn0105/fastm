import 'package:equatable/equatable.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/features/news/repository/news_repository.dart';
import 'package:flutter_module/models/news/contests_model.dart';

part 'contests_state.dart';

class ContestsCubit extends Cubit<ContestsState> {
  ContestsCubit() : super(const ContestsState());

  final NewsRepository _repository = NewsRepository();

  fetchData({bool showLoading = true, bool loadmore = false}) async {
    if (showLoading) {
      emit(state.copyWith(
        status: BlocStatus.loading,
      ));
    }

    final result = await _repository.getListContests();

    if (result.status) {
      emit(state.copyWith(
        status: BlocStatus.success,
        contests: result.data,
      ));
    } else {
      emit(state.copyWith(
        status: BlocStatus.failure,
      ));
    }
  }

  refreshData() async {
    await fetchData(showLoading: false);
  }
}
