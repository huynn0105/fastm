import 'dart:async';

import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/constants.dart';
import 'package:flutter_module/common/event_bus/event_bus.dart';
import 'package:flutter_module/common/widgets/appbar.dart';
import 'package:flutter_module/common/widgets/loading.dart';
import 'package:flutter_module/features/legendary/cubit/rsm_push/rsm_push_user_cubit.dart';
import 'package:flutter_module/features/legendary/cubit/rsm_push_history/rsm_push_history_cubit.dart';
import 'package:flutter_module/routes/routes.gr.dart';

import '../../../../common/widgets/tabbar/tabbar.dart';
import '../../../../general_config.dart';

@RoutePage()
class RSMPushPage extends StatefulWidget implements AutoRouteWrapper {
  const RSMPushPage({super.key});

  @override
  State<RSMPushPage> createState() => _RSMPushPageState();

  @override
  Widget wrappedRoute(BuildContext context) {
    return MultiBlocProvider(
      providers: [
        BlocProvider(
          create: (context) => RSMPushUserCubit()..init()..getCollaborators(),
        ),
        BlocProvider(
          create: (context) => RSMPushHistoryCubit()..getNotificationLogs(),
        ),
      ],
      child: this,
    );
  }
}

class _RSMPushPageState extends State<RSMPushPage> {
  TabController? tabController;
  late final StreamSubscription rsmPushSub;

  @override
  void initState() {
    super.initState();
    rsmPushSub = eventBus.on<ChangeRSMPushTab>().listen((event) {
      if (tabController != null) {
        tabController!.animateTo(event.index);
      }
    });
  }

  @override
  void dispose() {
    tabController = null;
    rsmPushSub.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<RSMPushHistoryCubit, RSMPushHistoryState>(
      builder: (context, state) {
        return Stack(
          children: [
            Scaffold(
              appBar: MFastSimpleAppBar(
                title: "Gửi thông báo hàng loạt",
                context: context,
              ),
              body: AutoTabsRouter.tabBar(
                physics: AppConstants.physics,
                routes: const [
                  RSMPushUserRoute(),
                  RSMPushHistoryRoute(),
                ],
                builder: (context, child, tabController) {
                  this.tabController = tabController;
                  return Column(
                    children: [
                      UnderlineIndicatorTabbar(
                        controller: tabController,
                        backgroundColor: UIColors.background,
                        titles: const [
                          "Gửi thông báo",
                          "Lịch sử gửi",
                        ],
                      ),
                      Expanded(
                        child: child,
                      ),
                    ],
                  );
                },
              ),
            ),
            Visibility(
              visible: state.status.isLoading,
              child: const LoadingWidget.dark(),
            ),
          ],
        );
      },
    );
  }
}
