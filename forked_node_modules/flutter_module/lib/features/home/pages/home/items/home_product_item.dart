import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/enum/menu_type.dart';
import 'package:flutter_module/env_data.dart';
import 'package:lottie/lottie.dart';

import '../../../../../common/size.dart';
import '../../../../../common/styles.dart';
import '../../../../../common/utils/color_util.dart';
import '../../../../../common/utils/text_util.dart';
import '../../../../../common/widgets/buttons.dart';
import '../../../../../common/widgets/images.dart';
import '../../../../../models/home_data/home_item_model.dart';

class HomeProductItem extends StatelessWidget {
  const HomeProductItem({
    Key? key,
    required this.alias,
    required this.item,
    required this.onTap,
    this.maxTitleLine,
    this.showTitle = true,
    this.showBadge = true,
    this.showHighlight = true,
  }) : super(key: key);

  final String? alias;
  final HomeItemModel item;
  final Function() onTap;
  final int? maxTitleLine;
  final bool showTitle;
  final bool showBadge;
  final bool showHighlight;

  @override
  Widget build(BuildContext context) {
    final title = item.title ?? '';
    final isHighlight = item.highlight == true;
    final hasStar = item.star == true;
    final isFinanceItems = alias == MenuType.finance.label;
    final isMTradeItems = alias == MenuType.merchandise.label;
    final badge = item.extraConfig?.badge ?? '';
    final badgeColor = item.extraConfig?.badgeColor ?? '';
    final hotText = item.extraConfig?.hotText ?? '';
    final isDisabled = item.disable == true;
    final iconOpacity = item.extraConfig?.iconOpacity?.toDouble() ?? 1.0;

    ///
    return SplashButton(
      isDisabled: isDisabled,
      onTap: onTap,
      child: Container(
        width: AppSize.instance.width / 5,
        padding: const EdgeInsets.only(top: 10, bottom: 10),
        child: Stack(
          clipBehavior: Clip.none,
          children: [
            Column(
              children: [
                Container(
                  alignment: Alignment.center,
                  margin: const EdgeInsets.symmetric(horizontal: 8),
                  child: Badge(
                    isLabelVisible: hotText.isNotEmpty,
                    largeSize: 18,
                    backgroundColor: UIColors.red,
                    padding: const EdgeInsets.symmetric(
                      horizontal: 2,
                    ),
                    offset: const Offset(0, -5),
                    label: Text(
                      hotText,
                      style: UITextStyle.regular.copyWith(
                        color: UIColors.white,
                        fontSize: 12,
                        height: 1,
                      ),
                    ),
                    child: Opacity(
                      opacity: iconOpacity,
                      child: AppImage.network(
                        url: item.icon,
                        width: isFinanceItems
                            ? 50
                            : isMTradeItems
                                ? 40
                                : 28,
                        height: isFinanceItems
                            ? 32
                            : isMTradeItems
                                ? 40
                                : 28,
                        fit: BoxFit.contain,
                      ),
                    ),
                  ),
                ),
                const SizedBox(
                  height: 5,
                ),
                if (!isFinanceItems && showTitle) ...[
                  Text(
                    title,
                    style: UITextStyle.regular.copyWith(
                      fontSize: 13,
                      height: 1.2,
                    ),
                    textAlign: TextAlign.center,
                    maxLines: maxTitleLine,
                    overflow: maxTitleLine != null ? TextOverflow.ellipsis : null,
                  ),
                ],
                if (TextUtils.isNotEmpty(badge) && showBadge) ...[
                  const SizedBox(
                    height: 3,
                  ),
                  Text(
                    badge,
                    style: UITextStyle.semiBold.copyWith(
                      fontSize: 12,
                      color: ColorUtil.fromHexOrNull(badgeColor, fallbackColor: const Color(0xff00cc94)),
                      height: 1.2,
                    ),
                    maxLines: 1,
                    textAlign: TextAlign.center,
                    overflow: TextOverflow.ellipsis,
                  ),
                ],
              ],
            ),
            Visibility(
              visible: isHighlight && showHighlight,
              child: Lottie.asset(
                'assets/jsons/light.json',
                package: EnvData.instance.package,
              ),
            ),
            Visibility(
              visible: isHighlight && showHighlight,
              child: Positioned(
                top: -15,
                left: -1,
                child: Lottie.asset(
                  'assets/jsons/new.json',
                  width: 40,
                  height: 40,
                  package: EnvData.instance.package,
                ),
              ),
            ),
            Visibility(
              visible: hasStar && showHighlight,
              child: Positioned(
                top: -10,
                right: 5,
                child: Container(
                  height: 22,
                  width: 22,
                  alignment: Alignment.center,
                  decoration: const BoxDecoration(
                    color: UIColors.white,
                    shape: BoxShape.circle,
                  ),
                  child: Image.asset(
                    'assets/jsons/red_star.gif',
                    width: 20,
                    height: 20,
                    package: EnvData.instance.package,
                  ),
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
