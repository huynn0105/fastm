import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/enum/menu_type.dart';
import 'package:flutter_module/common/size.dart';
import 'package:flutter_module/common/utils/text_util.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/html_widget.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/features/home/pages/home/widgets/home_block_widget.dart';
import 'package:flutter_module/models/home_data/home_item_model.dart';
import 'package:popover/popover.dart';

import '../../../../../models/home_data/home_data_model.dart';
import '../../../cubit/selected_item/selected_item_cubit.dart';
import '../widgets/home_product_category_widget.dart';

class ProductComponent extends StatelessWidget {
  const ProductComponent({
    super.key,
    required this.data,
    required this.onSizeChanged,
    required this.onProductItemTap,
    required this.onHeaderSubtitleTap,
    this.child,
  });

  final HomeDataModel? data;
  final Widget? child;
  final Function(String, Size) onSizeChanged;
  final Function(HomeItemModel) onProductItemTap;
  final Function(HomeDataModel) onHeaderSubtitleTap;

  @override
  Widget build(BuildContext context) {
    final alias = data?.catAlias ?? '';
    final groupedCategories = data?.items?.map((e) => e.supGroupId).toSet();
    final categories = data?.supGroup?.where((e) => groupedCategories?.contains(e.id) == true).toList() ?? [];

    ///
    return BlocProvider(
      create: (context) => SelectedItemCubit(),
      child: HomeBlockWidget(
        alias: data?.catAlias ?? "",
        title: data?.catTitle ?? "",
        subtitle: data?.toolsTitle ?? "",
        showSpaceBetween: categories.isEmpty,
        onSizeChanged: onSizeChanged,
        onTapSubTitle: () {
          if (data != null) {
            onHeaderSubtitleTap(data!);
          }
        },
        icon: TextUtils.isEmpty(data?.note)
            ? null
            : Builder(
                builder: (context) {
                  return SplashButton(
                    onTap: () {
                      if (TextUtils.isNotEmpty(data?.note)) {
                        showPopover(
                          context: context,
                          width: AppSize.instance.width * 0.75,
                          arrowWidth: 10,
                          arrowHeight: 10,
                          bodyBuilder: (BuildContext context) {
                            return Container(
                              color: Colors.white,
                              margin: const EdgeInsets.all(16),
                              child: HtmlWidget(
                                data: data?.note ?? "",
                              ),
                            );
                          },
                        );
                      }
                    },
                    child: const AppImage.asset(
                      asset: "ic_info_outline",
                      width: 20,
                      height: 20,
                    ),
                  );
                },
              ),
        child: Column(
          children: [
            if (child != null) ...[
              child!,
            ],
            BlocBuilder<SelectedItemCubit, SelectedItemState>(
              builder: (context, state) {
                final items = state.id.isEmpty
                    ? (data?.items ?? [])
                    : (data?.items ?? []).where((e) => e.supGroupId == state.id).toList();
                return HomeProductCategoryWidget(
                  alias: alias,
                  items: items,
                  selectedId: state.id,
                  categories: categories,
                  enabledAutoSizeChanged: state.id.isEmpty,
                  onProductFilterChanged: (id) {
                    context.read<SelectedItemCubit>().selectItem(id);
                  },
                  onProductItemTap: onProductItemTap,
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}
