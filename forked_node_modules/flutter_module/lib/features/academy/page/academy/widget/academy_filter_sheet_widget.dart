import 'package:ekyc/common/widgets/buttons.dart';
import 'package:flutter/material.dart';
import 'package:flutter_module/common/bottom_sheet/bottom_sheet_provider.dart';
import 'package:flutter_module/common/bottom_sheet/wrapper/data_wrapper.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/models/academy/event/academy_filter_event_model.dart';

class AcademySheetFilterWidget extends StatelessWidget {
  const AcademySheetFilterWidget({
    super.key,
    required this.title,
    required this.sheetTitle,
    required this.allOptionTitle,
    required this.data,
    required this.selectedData,
    this.onSelected,
  });

  final String title;
  final String sheetTitle;
  final String allOptionTitle;
  final List<AcademyFilterEventModel> data;
  final List<AcademyFilterEventModel> selectedData;
  final Function(List<AcademyFilterEventModel>)? onSelected;

  @override
  Widget build(BuildContext context) {
    return SplashButton(
      onTap: () => _onShowSheet(context),
      borderRadius: BorderRadius.circular(8),
      child: Container(
        padding: const EdgeInsets.all(8),
        decoration: BoxDecoration(
          color: UIColors.white,
          border: Border.all(
            color: UIColors.lightGray,
          ),
          borderRadius: BorderRadius.circular(8),
        ),
        child: Row(
          children: [
            const AppImage.asset(
              asset: 'ic_filter',
              width: 20,
              height: 20,
              fit: BoxFit.contain,
            ),
            const SizedBox(
              width: 8,
            ),
            Expanded(
              child: Text(
                title,
                style: UITextStyle.regular.copyWith(
                  fontSize: 13,
                ),
                maxLines: 1,
                overflow: TextOverflow.ellipsis,
              ),
            ),
          ],
        ),
      ),
    );
  }

  _onShowSheet(BuildContext context) async {
    const join = '-';

    ///
    final data = this.data.map((e) => DataWrapper(id: e.value?.join(join), value: e.text)).toList();
    final selectedData = this.selectedData.map((e) => DataWrapper(id: e.value?.join(join), value: e.text)).toList();

    ///
    final result = await BottomSheetProvider.instance.showMultiSelectList(
      context,
      title: sheetTitle,
      allOptionTitle: allOptionTitle,
      data: data,
      selectedData: selectedData,
    );
    if (result != null) {
      final selection = this.data.where((e) {
        final id = e.value?.join(join);
        return result.map((e) => e.id ?? '').contains(id);
      }).toList();
      onSelected?.call(selection);
    }
  }
}
