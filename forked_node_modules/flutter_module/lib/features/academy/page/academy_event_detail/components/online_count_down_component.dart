import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/count_down_util.dart';
import 'package:flutter_module/common/widgets/images.dart';

import '../../../../../common/widgets/buttons.dart';

class OnlineCountDownComponent extends StatelessWidget {
  const OnlineCountDownComponent({
    Key? key,
    required this.isEventEnded,
    required this.countDownUtil,
    required this.onOnlineJoined,
    required this.isCheckOut,
    required this.onShowQuiz,
    required this.isQuestionLink,
  }) : super(key: key);

  final bool isEventEnded;
  final CountDownUtil? countDownUtil;
  final Function() onOnlineJoined;
  final bool isCheckOut;
  final Function() onShowQuiz;
  final bool isQuestionLink;

  @override
  Widget build(BuildContext context) {
    if (countDownUtil == null) {
      return const SizedBox();
    }
    return Container(
      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
      constraints: const BoxConstraints(
        minHeight: 52,
      ),
      decoration: BoxDecoration(
        color: UIColors.white,
        borderRadius: BorderRadius.circular(12),
      ),
      child: isEventEnded
          ? Column(
              children: [
                Text(
                  "Đã kết thúc",
                  style: UITextStyle.regular.copyWith(
                    fontSize: 14,
                    color: UIColors.red,
                  ),
                ),
                if (isCheckOut) ...{
                  const Divider(
                    color: UIColors.lightGray,
                    height: 10,
                    thickness: 1,
                  ),
                  SplashButton(
                    onTap: () {
                      onShowQuiz.call();
                    },
                    child: Text(
                      '${isQuestionLink ? "Truy cập đường dẫn" : "Xem lại bảng câu hỏi"} tổng hợp kiến thức >>',
                      style: UITextStyle.semiBold.copyWith(
                        fontSize: 14,
                        color: UIColors.primaryColor,
                      ),
                    ),
                  ),
                }
              ],
            )
          : ValueListenableBuilder(
              valueListenable: countDownUtil!.result,
              builder: (BuildContext context, int value, Widget? child) {
                if (value < 0) {
                  return const Center(
                    child: SizedBox(
                      width: 24,
                      height: 24,
                      child: CircularProgressIndicator(
                        strokeWidth: 1,
                      ),
                    ),
                  );
                }
                return Row(
                  children: [
                    if (value == 0) ...[
                      Text(
                        "Đang diễn ra sự kiện",
                        style: UITextStyle.regular.copyWith(
                          fontSize: 14,
                          color: UIColors.grayText,
                        ),
                      ),
                    ],
                    if (value > 0) ...[
                      const AppImage.asset(
                        asset: "ic_count_down",
                        width: 24,
                        height: 24,
                      ),
                      const SizedBox(
                        width: 8,
                      ),
                      Text(
                        "Còn ${CountDownUtil.format(value)}",
                        style: UITextStyle.semiBold.copyWith(
                          fontSize: 16,
                          color: UIColors.red,
                        ),
                      ),
                    ],
                    const Spacer(),
                    PrimaryButton(
                      onPressed: onOnlineJoined,
                      title: "Truy cập",
                      enabled: enabled(value),
                      height: 50,
                      width: 112,
                    ),
                  ],
                );
              },
            ),
    );
  }

  bool enabled(int seconds) {
    return (seconds ~/ 60) < 10;
  }
}
