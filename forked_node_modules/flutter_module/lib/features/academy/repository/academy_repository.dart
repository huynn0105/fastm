import 'package:flutter_module/models/academy/count_registered_event/academy_count_registered_event_model.dart';
import 'package:flutter_module/models/academy/event/academy_event_checkout_model.dart';
import 'package:flutter_module/models/academy/event/academy_event_model.dart';
import 'package:flutter_module/models/academy/event/academy_filter_event_type_model.dart';
import 'package:flutter_module/models/academy/registered_event/academy_registered_event_model.dart';
import 'package:flutter_module/models/base_model.dart';
import 'package:flutter_module/services/api/academy/payload/academy_submit_quiz_payload.dart';
import 'package:flutter_module/services/api/academy/payload/event_payload.dart';
import 'package:flutter_module/services/api/academy/payload/filter_event_payload.dart';
import 'package:flutter_module/services/api/academy/payload/registered_event_payload.dart';
import 'package:flutter_module/services/api/api_provider.dart';
import 'package:flutter_module/services/api/academy/payload/academy_register_event_payload.dart';
import 'package:flutter_module/services/api/academy/payload/request_otp_payload.dart';

import '../../../models/academy/event_detail/academy_event_detail_model.dart';
import '../../../services/api/academy/payload/academy_event_detail_payload.dart';

class AcademyRepository {
  Future<BaseModel<List<AcademyRegisteredEventModel>>> getListRegisteredEvent(RegisteredEventPayload payload) {
    return ApiProvider.instance.academy.getListRegisteredEvent(payload);
  }

  Future<BaseModel<List<AcademyFilterEventTypeModel>>> getListFilterEvent(AcademyFilterEventPayload payload) {
    return ApiProvider.instance.academy.getListFilterEvent(payload);
  }

  Future<BaseModel<List<AcademyEventModel>>> getListEvent(AcademyEventPayload payload) {
    return ApiProvider.instance.academy.getListEvent(payload);
  }

  Future<BaseModel<bool>> requestOTP({
    required AcademyRequestOTPPayload payload,
  }) {
    return ApiProvider.instance.academy.requestOTP(payload: payload);
  }

  Future<BaseModel<AcademyEventDetailModel>> getEventDetail({
    required AcademyEventDetailPayload payload,
  }) {
    return ApiProvider.instance.academy.getEventDetail(payload: payload);
  }

  Future<BaseModel<bool>> registerEvent({
    required AcademyRegisterEventPayload payload,
  }) {
    return ApiProvider.instance.academy.registerEvent(payload: payload);
  }

  Future<BaseModel<bool>> checkInEvent({
    required AcademyRegisterEventPayload payload,
  }) {
    return ApiProvider.instance.academy.checkInEvent(payload: payload);
  }

  Future<BaseModel<AcademyEventCheckOutModel>> checkOutEvent({
    required AcademyRegisterEventPayload payload,
  }) {
    return ApiProvider.instance.academy.checkOutEvent(payload: payload);
  }

  Future<BaseModel<bool>> submitQuiz({
    required AcademySubmitQuizPayload payload,
  }) {
    return ApiProvider.instance.academy.submitQuiz(payload: payload);
  }

  Future<BaseModel<List<AcademyCountRegisteredEventModel>>> getCountRegisteredEvent() {
    return ApiProvider.instance.academy.getCountRegisteredEvent();
  }
}
