part of 'academy_filter_event_type_cubit.dart';

class AcademyFilterEventTypeState extends Equatable {
  const AcademyFilterEventTypeState({
    this.status = BlocStatus.initial,
    this.weekTimeData,
    this.eventTypeData,
    this.eventGroupData,
    this.weekTimeFilters = const [],
    this.eventTypeFilters = const [],
    this.eventGroupFilters = const [],
    this.selectedWeekTimes,
    this.selectedEventTypes = const [],
    this.selectedEventGroups = const [],
  });

  final BlocStatus status;
  final AcademyFilterEventTypeModel? weekTimeData;
  final AcademyFilterEventTypeModel? eventTypeData;
  final AcademyFilterEventTypeModel? eventGroupData;
  final List<AcademyFilterEventModel> weekTimeFilters;
  final List<AcademyFilterEventModel> eventTypeFilters;
  final List<AcademyFilterEventModel> eventGroupFilters;
  final AcademyFilterEventModel? selectedWeekTimes;
  final List<AcademyFilterEventModel> selectedEventTypes;
  final List<AcademyFilterEventModel> selectedEventGroups;

  @override
  List<Object?> get props {
    return [
      status,
      weekTimeData,
      eventTypeData,
      eventGroupData,
      weekTimeFilters,
      eventTypeFilters,
      eventGroupFilters,
      selectedWeekTimes,
      selectedEventTypes,
      selectedEventGroups,
    ];
  }

  AcademyFilterEventTypeState copyWith({
    BlocStatus? status,
    AcademyFilterEventTypeModel? weekTimeData,
    AcademyFilterEventTypeModel? eventTypeData,
    AcademyFilterEventTypeModel? eventGroupData,
    List<AcademyFilterEventModel>? weekTimeFilters,
    List<AcademyFilterEventModel>? eventTypeFilters,
    List<AcademyFilterEventModel>? eventGroupFilters,
    AcademyFilterEventModel? selectedWeekTimes,
    List<AcademyFilterEventModel>? selectedEventTypes,
    List<AcademyFilterEventModel>? selectedEventGroups,
  }) {
    return AcademyFilterEventTypeState(
      status: status ?? this.status,
      weekTimeData: weekTimeData ?? this.weekTimeData,
      eventTypeData: eventTypeData ?? this.eventTypeData,
      eventGroupData: eventGroupData ?? this.eventGroupData,
      weekTimeFilters: weekTimeFilters ?? this.weekTimeFilters,
      eventTypeFilters: eventTypeFilters ?? this.eventTypeFilters,
      eventGroupFilters: eventGroupFilters ?? this.eventGroupFilters,
      selectedWeekTimes: selectedWeekTimes ?? this.selectedWeekTimes,
      selectedEventTypes: selectedEventTypes ?? this.selectedEventTypes,
      selectedEventGroups: selectedEventGroups ?? this.selectedEventGroups,
    );
  }
}
