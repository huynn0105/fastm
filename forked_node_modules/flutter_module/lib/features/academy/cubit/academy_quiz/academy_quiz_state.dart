// ignore_for_file: public_member_api_docs, sort_constructors_first
part of 'academy_quiz_cubit.dart';

class AcademyQuizState extends Equatable {
  const AcademyQuizState({
    this.submitStatus = BlocStatus.initial,
    this.errMsg = '',
    this.listQuiz = const [],
    this.listSupport = const [],
    this.listSubmitQuizAnswer = const [],
    this.userAnswers = const [],
    this.questionType,
  });

  final BlocStatus submitStatus;
  final String errMsg;
  final List<EventQuiz> listQuiz;
  final List<EventSupport> listSupport;
  final List<SubmitQuizAnswer> listSubmitQuizAnswer;
  final List<SubmitQuizAnswer> userAnswers;
  final AcademyQuestionType? questionType;

  @override
  List<Object?> get props => [
        submitStatus,
        errMsg,
        listQuiz,
        listSupport,
        listSubmitQuizAnswer,
        userAnswers,
        questionType,
      ];

  AcademyQuizState copyWith({
    BlocStatus? submitStatus,
    String? errMsg,
    List<EventQuiz>? listQuiz,
    List<EventSupport>? listSupport,
    List<SubmitQuizAnswer>? listSubmitQuizAnswer,
    List<SubmitQuizAnswer>? userAnswers,
    AcademyQuestionType? questionType,
  }) {
    return AcademyQuizState(
      submitStatus: submitStatus ?? this.submitStatus,
      errMsg: errMsg ?? this.errMsg,
      listQuiz: listQuiz ?? this.listQuiz,
      listSupport: listSupport ?? this.listSupport,
      listSubmitQuizAnswer: listSubmitQuizAnswer ?? this.listSubmitQuizAnswer,
      userAnswers: userAnswers ?? this.userAnswers,
      questionType: questionType ?? this.questionType,
    );
  }
}
