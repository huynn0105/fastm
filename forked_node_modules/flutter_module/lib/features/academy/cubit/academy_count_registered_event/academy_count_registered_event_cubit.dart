import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/features/academy/repository/academy_repository.dart';
import 'package:flutter_module/models/academy/count_registered_event/academy_count_registered_event_model.dart';

part 'academy_count_registered_event_state.dart';

class AcademyCountRegisteredEventCubit extends Cubit<AcademyCountRegisteredEventState> {
  AcademyCountRegisteredEventCubit() : super(const AcademyCountRegisteredEventState());
  final AcademyRepository _repository = AcademyRepository();

  fetchData({
    bool showLoading = true,
    final String? status,
  }) async {
    if (showLoading) {
      emit(state.copyWith(
        status: BlocStatus.loading,
      ));
    }

    final result = await _repository.getCountRegisteredEvent();
    if (result.status) {
      final data = result.data;

      emit(state.copyWith(
        status: BlocStatus.success,
        listCountRegisteredEvent: result.data,
      ));
    } else {
      emit(state.copyWith(
        status: BlocStatus.failure,
      ));
    }
  }
}
