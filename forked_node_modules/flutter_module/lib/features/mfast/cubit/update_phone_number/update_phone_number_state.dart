// ignore_for_file: public_member_api_docs, sort_constructors_first
part of 'update_phone_number_cubit.dart';

class UpdatePhoneNumberState extends Equatable {
  const UpdatePhoneNumberState({
    this.status = BlocStatus.initial,
    this.errorMessage = "",
    this.errorFields = const {},
    this.frontCardStatus = BlocStatus.initial,
    this.frontCardUrl,
    this.backCardStatus = BlocStatus.initial,
    this.backCardUrl,
    this.countryIdIssuedDate,
    this.countryIdName,
    this.countryIdNumber,
    this.frontCardMessage,
    this.backCardMessage,
  });

  final BlocStatus status;
  final String errorMessage;
  final Map<String, String> errorFields;
  final BlocStatus frontCardStatus;
  final String? frontCardUrl;
  final BlocStatus backCardStatus;
  final String? backCardUrl;
  final String? countryIdIssuedDate;
  final String? countryIdName;
  final String? countryIdNumber;
  final String? frontCardMessage;
  final String? backCardMessage;

  @override
  List<Object?> get props => [
        status,
        errorMessage,
        errorFields,
        frontCardStatus,
        frontCardUrl,
        backCardStatus,
        backCardUrl,
        countryIdIssuedDate,
        countryIdName,
        countryIdNumber,
        frontCardMessage,
        backCardMessage,
      ];

  UpdatePhoneNumberState copyWith({
    BlocStatus? status,
    String? errorMessage,
    Map<String, String>? errorFields,
    BlocStatus? frontCardStatus,
    String? frontCardUrl,
    BlocStatus? backCardStatus,
    String? backCardUrl,
    String? countryIdIssuedDate,
    String? countryIdName,
    String? countryIdNumber,
    String? frontCardMessage,
    String? backCardMessage,
  }) {
    return UpdatePhoneNumberState(
      status: status ?? this.status,
      errorMessage: errorMessage ?? this.errorMessage,
      errorFields: errorFields ?? this.errorFields,
      frontCardStatus: frontCardStatus ?? this.frontCardStatus,
      frontCardUrl: frontCardUrl ?? this.frontCardUrl,
      backCardStatus: backCardStatus ?? this.backCardStatus,
      backCardUrl: backCardUrl ?? this.backCardUrl,
      countryIdIssuedDate: countryIdIssuedDate ?? this.countryIdIssuedDate,
      countryIdName: countryIdName ?? this.countryIdName,
      countryIdNumber: countryIdNumber ?? this.countryIdNumber,
      frontCardMessage: frontCardMessage ?? this.frontCardMessage,
      backCardMessage: backCardMessage ?? this.backCardMessage,
    );
  }

  UpdatePhoneNumberState clearFrontCard() {
    return UpdatePhoneNumberState(
      status: status,
      errorMessage: errorMessage,
      errorFields: errorFields,
      frontCardStatus: BlocStatus.initial,
      frontCardUrl: null,
      backCardStatus: backCardStatus,
      backCardUrl: backCardUrl,
    );
  }

  UpdatePhoneNumberState clearBackCard() {
    return UpdatePhoneNumberState(
      status: status,
      errorMessage: errorMessage,
      errorFields: errorFields,
      frontCardStatus: frontCardStatus,
      frontCardUrl: frontCardUrl,
      backCardStatus: BlocStatus.initial,
      backCardUrl: null,
    );
  }
}
