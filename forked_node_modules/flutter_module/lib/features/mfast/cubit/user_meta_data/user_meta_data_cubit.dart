import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/features/mfast/repository/mfast_repository.dart';
import 'package:flutter_module/models/mfast/user_meta_data/mfast_user_meta_data_model.dart';

part 'user_meta_data_state.dart';

class UserMetaDataCubit extends Cubit<UserMetaDataState> {
  UserMetaDataCubit() : super(const UserMetaDataState());

  final MFastRepository _repository = MFastRepository();

  fetchUserMetaData() async {
    emit(state.copyWith(
      status: BlocStatus.loading,
    ));

    final result = await _repository.getUserMetaData();

    if (result.status) {
      emit(state.copyWith(
        status: BlocStatus.success,
        userMetaData: result.data,
      ));
    } else {
      emit(state.copyWith(
        status: BlocStatus.failure,
      ));
    }
  }

  updateUserMetaData(MFastUserMetaDataModel? userMetaData) {
    if (userMetaData == null) return;
    emit(state.copyWith(
      userMetaData: userMetaData,
    ));
  }
}
