// ignore_for_file: public_member_api_docs, sort_constructors_first
part of 'identity_card_cubit.dart';

class IdentityCardState extends Equatable {
  const IdentityCardState({
    this.status = BlocStatus.initial,
    this.uploadStatus = BlocStatus.initial,
    this.lockStatus = BlocStatus.initial,
    this.submitStatus = BlocStatus.initial,
    this.userMetaData,
    this.isFaceMatch = false,
    this.frontCardMessage = '',
    this.backCardMessage = '',
    this.faceMatchMessage = '',
    this.countFaceMatchFailed = 0,
    this.updateErrorMessage = '',
  });

  final BlocStatus status;
  final BlocStatus uploadStatus;
  final BlocStatus lockStatus;
  final BlocStatus submitStatus;
  final MFastUserMetaDataModel? userMetaData;
  final bool isFaceMatch;
  final String frontCardMessage;
  final String backCardMessage;
  final String faceMatchMessage;
  final int countFaceMatchFailed;
  final String updateErrorMessage;

  @override
  List<Object?> get props => [
        status,
        uploadStatus,
        lockStatus,
        submitStatus,
        userMetaData,
        isFaceMatch,
        frontCardMessage,
        backCardMessage,
        faceMatchMessage,
        countFaceMatchFailed,
        updateErrorMessage,
      ];

  IdentityCardState copyWith({
    BlocStatus? status,
    BlocStatus? uploadStatus,
    BlocStatus? lockStatus,
    BlocStatus? submitStatus,
    MFastUserMetaDataModel? userMetaData,
    bool? isFaceMatch,
    String? frontCardMessage,
    String? backCardMessage,
    String? faceMatchMessage,
    int? countFaceMatchFailed,
    String? updateErrorMessage,
  }) {
    return IdentityCardState(
      status: status ?? this.status,
      uploadStatus: uploadStatus ?? this.uploadStatus,
      lockStatus: lockStatus ?? this.lockStatus,
      submitStatus: submitStatus ?? this.submitStatus,
      userMetaData: userMetaData ?? this.userMetaData,
      isFaceMatch: isFaceMatch ?? this.isFaceMatch,
      frontCardMessage: frontCardMessage ?? this.frontCardMessage,
      backCardMessage: backCardMessage ?? this.backCardMessage,
      faceMatchMessage: faceMatchMessage ?? this.faceMatchMessage,
      countFaceMatchFailed: countFaceMatchFailed ?? this.countFaceMatchFailed,
      updateErrorMessage: updateErrorMessage ?? this.updateErrorMessage,
    );
  }
}
