import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/transformer_page/transformer_page_view.dart';

class StepHeaderWidget extends StatelessWidget {
  const StepHeaderWidget({
    super.key,
    required this.totalStep,
    required this.indexController,
    required this.onPreviousStepIndex,
  });

  final int totalStep;
  final TransformerPageController indexController;
  final Function(int step) onPreviousStepIndex;

  @override
  Widget build(BuildContext context) {
    double barWidth = 247.0;
    double barHeight = 8.0;
    double gapWidth = 3.0;
    double gapHeight = 6.0;

    ///
    return Container(
      height: 32,
      alignment: Alignment.center,
      decoration: const BoxDecoration(
        color: UIColors.white,
      ),
      child: ListenableBuilder(
        listenable: indexController,
        builder: (context, child) {
          return Container(
            width: barWidth,
            height: barHeight,
            alignment: Alignment.center,
            decoration: BoxDecoration(
              color: UIColors.background,
              borderRadius: BorderRadius.circular(4),
            ),
            child: ListView.separated(
              shrinkWrap: true,
              scrollDirection: Axis.horizontal,
              separatorBuilder: (_, __) {
                return Container(
                  width: gapWidth,
                  height: gapHeight,
                  margin: const EdgeInsets.symmetric(vertical: 1),
                  decoration: BoxDecoration(
                    color: UIColors.white,
                    borderRadius: BorderRadius.circular(3),
                  ),
                );
              },
              itemBuilder: (context, index) {
                final currentActiveIndex = indexController.page ?? 0;
                final isActive = index <= currentActiveIndex;
                final width = (barWidth - gapWidth * (totalStep - 1)) / totalStep;

                ///
                return AppSplashButton(
                  isDisable: !(index < currentActiveIndex),
                  onTap: () {
                    onPreviousStepIndex(index);
                  },
                  child: AnimatedContainer(
                    duration: const Duration(milliseconds: 300),
                    width: width,
                    height: barHeight,
                    decoration: BoxDecoration(
                      color: isActive ? UIColors.primaryColor : Colors.transparent,
                      borderRadius: BorderRadius.circular(4),
                    ),
                  ),
                );
              },
              itemCount: totalStep,
            ),
          );
        }
      ),
    );
  }
}
