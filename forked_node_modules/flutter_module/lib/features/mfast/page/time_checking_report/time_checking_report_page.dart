import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/enum/mfast/time_checking_report_step.dart';
import 'package:flutter_module/common/utils/redirect_util.dart';
import 'package:flutter_module/common/widgets/appbar.dart';
import 'package:flutter_module/common/widgets/transformer_page/buildin_transformers.dart';
import 'package:flutter_module/common/widgets/transformer_page/index_controller.dart';
import 'package:flutter_module/common/widgets/transformer_page/transformer_page_view.dart';
import 'package:flutter_module/features/mfast/cubit/time_checking_report/time_checking_report_cubit.dart';
import 'package:flutter_module/features/mfast/page/time_checking_report/components/introduce_report_step_component.dart';
import 'package:flutter_module/features/mfast/page/time_checking_report/components/project_report_step_component.dart';
import 'package:flutter_module/features/mfast/page/time_checking_report/components/working_report_step_component.dart';
import 'package:flutter_module/features/mfast/page/time_checking_report/widgets/step_widget.dart';

@RoutePage()
class TimeCheckingReportPage extends StatefulWidget implements AutoRouteWrapper {
  const TimeCheckingReportPage({super.key});

  @override
  State<TimeCheckingReportPage> createState() => _TimeCheckingReportPageState();

  @override
  Widget wrappedRoute(BuildContext context) {
    return BlocProvider(
      create: (context) => TimeCheckingReportCubit()..getData(),
      child: this,
    );
  }
}

class _TimeCheckingReportPageState extends State<TimeCheckingReportPage> {
  int totalStep = TimeCheckingReportStep.values.length;
  int currnetStepIndex = 0;

  late final IndexController _pageIndexController;
  late final TransformerPageController _pageController;

  @override
  void initState() {
    super.initState();
    _pageController = TransformerPageController(itemCount: totalStep, initialPage: currnetStepIndex);
    _pageIndexController = IndexController();
  }

  @override
  void dispose() {
    _pageIndexController.dispose();
    _pageController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return WillPopScope(
      onWillPop: () async {
        if (!context.router.canPop()) {
          RedirectUtil.backToMFast();
          return false;
        }
        return true;
      },
      child: Scaffold(
        appBar: MFastGradientAppBar(
          title: 'Tạo báo cáo',
          context: context,
          onBack: context.router.pop,
        ),
        resizeToAvoidBottomInset: false,
        body: Column(
          children: [
            StepHeaderWidget(
              totalStep: totalStep,
              indexController: _pageController,
              onPreviousStepIndex: (step) {
                _pageIndexController.move(step);
              },
            ),
            Expanded(
              child: TransformerPageView.children(
                controller: _pageIndexController,
                pageController: _pageController,
                transformer: ScaleAndFadeTransformer(),
                duration: const Duration(milliseconds: 800),
                physics: const NeverScrollableScrollPhysics(),
                children: [
                  BlocBuilder<TimeCheckingReportCubit, TimeCheckingReportState>(
                    builder: (context, state) {
                      return IntroduceReportStepComponent(
                        isSubmitLoading: state.status.isLoading,
                        onNextPage: () {
                          _pageIndexController.next();
                        },
                      );
                    },
                  ),
                  WorkingReportStepComponent(
                    onPrevPage: () {
                      _pageIndexController.previous();
                    },
                    onNextPage: () {
                      _pageIndexController.next();
                    },
                  ),
                  ProjectReportStepComponent(
                    onPrevPage: () {
                      _pageIndexController.previous();
                    },
                    onNextPage: () {
                      _pageIndexController.next();
                    },
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}
