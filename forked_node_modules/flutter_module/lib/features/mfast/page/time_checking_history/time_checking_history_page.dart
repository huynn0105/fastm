import 'dart:async';
import 'dart:collection';

import 'package:auto_route/auto_route.dart';
import 'package:collection/collection.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/enum/event_key.dart';
import 'package:flutter_module/common/event_bus/event_bus.dart';
import 'package:flutter_module/common/extension/datetime_extension.dart';
import 'package:flutter_module/common/size.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/event_util.dart';
import 'package:flutter_module/common/utils/redirect_util.dart';
import 'package:flutter_module/common/widgets/loading.dart';
import 'package:flutter_module/env_data.dart';
import 'package:flutter_module/features/mfast/cubit/time_checking_history/time_checking_history_cubit.dart';
import 'package:flutter_module/features/mfast/page/time_checking_history/components/time_checking_info_component.dart';
import 'package:flutter_module/features/mfast/page/time_checking_history/components/time_checking_report_component.dart';
import 'package:flutter_module/general_config.dart';
import 'package:intl/date_symbol_data_local.dart';
import 'package:intl/intl.dart';
import 'package:sliding_up_panel2/sliding_up_panel2.dart';
import 'package:table_calendar/table_calendar.dart';

import '../../../../common/widgets/buttons.dart';
import '../../../../common/widgets/images.dart';
part 'components/appbar.dart';
part 'components/calendar_table.dart';
part 'components/horizontal_calendar.dart';
part 'components/time_checking_history_detail.dart';

@RoutePage()
class TimeCheckingHistoryPage extends StatefulWidget implements AutoRouteWrapper {
  const TimeCheckingHistoryPage({super.key});

  @override
  State<TimeCheckingHistoryPage> createState() => _TimeCheckingHistoryPageState();

  @override
  Widget wrappedRoute(BuildContext context) {
    return BlocProvider(
      create: (context) {
        final cubit = TimeCheckingHistoryCubit();
        cubit.getTimeCheckingInDay(DateTime.now());
        cubit.getTimeCheckingInMonth(DateTime.now());
        return cubit;
      },
      child: this,
    );
  }
}

class _TimeCheckingHistoryPageState extends State<TimeCheckingHistoryPage> {
  late StreamSubscription subscription;

  @override
  void initState() {
    initializeDateFormatting();
    super.initState();
    WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
      subscription = eventBus.on<TimeCheckingEventBus>().listen(_onEventBusListen);
    });
  }

  @override
  Widget build(BuildContext context) {
    String package = EnvData.instance.package != null ? 'packages/${EnvData.instance.package}' : '';

    return WillPopScope(
      onWillPop: () async {
        if (!context.router.canPop()) {
          EventUtil.sendEventToRNv2(EventKey.refreshTimeChecking.value);
          RedirectUtil.backToMFast();
          return false;
        }
        return true;
      },
      child: Scaffold(
        body: Container(
          decoration: BoxDecoration(
            image: DecorationImage(
              image: AssetImage('$package/assets/images/bg_checkin.png'),
              fit: BoxFit.cover,
            ),
          ),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            mainAxisAlignment: MainAxisAlignment.start,
            children: [
              SizedBox(height: AppSize.instance.safeTop),
              const _AppBar(),
              const _TimeCheckingHistoryDetail(),
            ],
          ),
        ),
      ),
    );
  }

  void _onEventBusListen(TimeCheckingEventBus event) {
    if (event is RefreshHistoryInDayEventBus) {
      final cubit = context.read<TimeCheckingHistoryCubit>();
      cubit.getTimeCheckingInMonth(DateTime.now());
      cubit.getTimeCheckingInDay(DateTime.now());
    }
  }
}
