import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/enum/mfast/time_checking_status.dart';
import 'package:flutter_module/common/extension/datetime_extension.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/location_util.dart';
import 'package:flutter_module/features/mfast/page/time_checking_history/components/time_checking_info_component.dart';
import 'package:flutter_module/features/mfast/page/time_checking_history/widgets/action_button.dart';
import 'package:flutter_module/features/mfast/page/time_checking_history/widgets/overview_report_widget.dart';
import 'package:flutter_module/models/mfast/time_checking/time_checking_info_model.dart';
import 'package:flutter_module/routes/routes.gr.dart';
import 'package:timelines/timelines.dart';

class TimeCheckingReportComponent extends StatelessWidget {
  const TimeCheckingReportComponent({
    super.key,
    required this.selectedDay,
    required this.details,
  });

  final DateTime? selectedDay;
  final List<ReportHistoryModel> details;

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        const SizedBox(height: 10),
        Row(
          children: [
            Expanded(
              child: Text(
                'Báo cáo công việc',
                style: UITextStyle.semiBold.copyWith(
                  fontSize: 16,
                ),
              ),
            ),
            OutlineActionButton(
              asset: 'ic_paper_plus',
              title: 'Tạo báo cáo',
              isEnabled: selectedDay != null && selectedDay!.dateOnly().isAtSameMomentAs(DateTime.now().dateOnly()),
              onTap: () async {
                final locationStatus =
                    await LocationUtil.instance.requestPermission(context: context, openSettings: true);
                if (locationStatus && context.mounted) {
                  final position = await LocationUtil.instance.getCurrentLocation();
                  if (position != null && context.mounted) {
                    context.router.push(const TimeCheckingReportRoute());
                  }
                }
              },
            ),
          ],
        ),
        Container(
          decoration: BoxDecoration(
            color: UIColors.white,
            borderRadius: BorderRadius.circular(8),
          ),
          margin: const EdgeInsets.symmetric(vertical: 12),
          padding: const EdgeInsets.symmetric(horizontal: 12),
          alignment: Alignment.center,
          child: details.isEmpty
              ? const NoThingWidget(
                  message: 'Không có lịch sử báo cáo nào\nđược ghi nhận trong ngày.',
                )
              : ListView.builder(
                  shrinkWrap: true,
                  padding: EdgeInsets.zero,
                  physics: const NeverScrollableScrollPhysics(),
                  itemBuilder: (context, index) {
                    final item = details[index];
                    final isFirst = index == 0;
                    final isLast = index == (details.length - 1);

                    ///
                    return TimelineTile(
                      crossAxisExtent: double.infinity,
                      nodeAlign: TimelineNodeAlign.start,
                      node: TimelineNode(
                        indicatorPosition: 0.5,
                        indicator: const StatusDotIndicator(
                          status: TimeCheckingStatus.success,
                        ),
                        startConnector: isFirst ? null : const DashLine(),
                        endConnector: isLast ? null : const DashLine(),
                      ),
                      contents: OverviewReportWidget(
                        isLast: isLast,
                        time: item.reportTime ?? '',
                        percent: item.estKpi ?? 0,
                        onTap: () {
                          context.router.push(TimeCheckingReportDetailRoute(reportID: item.reportId));
                        },
                      ),
                    );
                  },
                  itemCount: details.length,
                ),
        ),
      ],
    );
  }
}
