import 'package:flutter_module/common/colors.dart';
import 'package:flutter/material.dart';
import 'package:flutter_module/common/utils/format_util.dart';
import 'package:flutter_module/common/utils/text_util.dart';
import 'package:flutter_module/features/mfast/page/time_checking_report_result/widgets/kpi_widget.dart';
import 'package:flutter_module/models/mfast/report/report_submit_response_model.dart';
import 'package:flutter_staggered_grid_view/flutter_staggered_grid_view.dart';

class KPIResultComponent extends StatelessWidget {
  const KPIResultComponent({
    super.key,
    this.data,
    this.incomeTitle = 'Doanh số KPI\ntự khai ước tính',
    this.kpiTitle = '%KPI\ntự khai ước tính',
    this.ignoreDecoration = false,
  });

  final ReportSubmitResponseModel? data;
  final String incomeTitle;
  final String kpiTitle;
  final bool ignoreDecoration;

  @override
  Widget build(BuildContext context) {
    List<Widget> children = [
      KPIWidget.salesAmount(
        title: incomeTitle,
        content: FormatUtil.currencyDoubleFormat(data?.totalIncome ?? 0),
        titleColor: UIColors.extraLightGray,
        contentColor: UIColors.white,
        backgroundColor: UIColors.darkBlue,
      ),
      KPIWidget.salesPercent(
        title: kpiTitle,
        percent: data?.estKpi ?? 0,
        content: TextUtils.isNotEmpty(data?.note) ? data?.note ?? '' : '${FormatUtil.doubleFormat(data?.estKpi ?? 0)}%',
        titleColor: UIColors.extraLightGray,
        backgroundColor: UIColors.darkBlue,
      ),
    ];
    return Container(
      decoration: ignoreDecoration
          ? null
          : const BoxDecoration(
              gradient: LinearGradient(
                colors: [UIColors.white, UIColors.background],
                stops: [0.5, 0.5],
                begin: Alignment.topCenter,
                end: Alignment.bottomCenter,
              ),
            ),
      child: IgnorePointer(
        ignoring: true,
        child: AlignedGridView.count(
          shrinkWrap: true,
          padding: EdgeInsets.zero,
          physics: const NeverScrollableScrollPhysics(
            parent: ClampingScrollPhysics(),
          ),
          crossAxisCount: 2,
          mainAxisSpacing: 3,
          crossAxisSpacing: 3,
          itemBuilder: (context, index) {
            return children[index];
          },
          itemCount: children.length,
        ),
      ),
    );
  }
}
