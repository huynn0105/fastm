import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/dialogs/dialog_provider.dart';
import 'package:flutter_module/common/enum/mfast/account_identify_step.dart';
import 'package:flutter_module/common/enum/mfast/liveness_support_status.dart';
import 'package:flutter_module/common/event_bus/event_bus.dart';
import 'package:flutter_module/common/size.dart';
import 'package:flutter_module/common/utils/redirect_util.dart';
import 'package:flutter_module/common/widgets/appbar.dart';
import 'package:flutter_module/common/widgets/loading.dart';
import 'package:flutter_module/common/widgets/transformer_page/index_controller.dart';
import 'package:flutter_module/common/widgets/transformer_page/transformer_page_view.dart';
import 'package:flutter_module/features/mfast/cubit/add_bank_account/mfast_add_bank_account_cubit.dart';
import 'package:flutter_module/features/mfast/cubit/contract_collaborator/mfast_contract_collaborator_cubit.dart';
import 'package:flutter_module/features/mfast/cubit/identity_card/identity_card_cubit.dart';
import 'package:flutter_module/features/mfast/cubit/personal_information/personal_information_cubit.dart';
import 'package:flutter_module/features/mfast/cubit/user_meta_data/user_meta_data_cubit.dart';
import 'package:flutter_module/features/mfast/page/account_identification/components/liner_step_indicator_component.dart';
import 'package:flutter_module/features/mfast/page/account_identification/page/add_banking_account/mfast_add_banking_account_page.dart';
import 'package:flutter_module/general_config.dart';
import 'package:flutter_module/models/mfast/user_meta_data/mfast_user_meta_data_model.dart';
import 'package:flutter_module/routes/deeplink/mfast_deeplink_path.dart';

import 'page/contract_collaborator/mfast_contract_collaborator_page.dart';
import 'page/identity_card/mfast_identity_card_page.dart';
import 'page/personal_information/mfast_personal_information_page.dart';

const int MAX_PAGE = 4;

@RoutePage()
class MFastAccountIdentificationPage extends StatefulWidget implements AutoRouteWrapper {
  const MFastAccountIdentificationPage({super.key});

  @override
  State<MFastAccountIdentificationPage> createState() => _MFastAccountIdentificationPageState();

  @override
  Widget wrappedRoute(BuildContext context) {
    return MultiBlocProvider(
      providers: [
        BlocProvider(
          create: (context) {
            final cubit = UserMetaDataCubit();
            cubit.fetchUserMetaData();
            return cubit;
          },
        ),
        BlocProvider(
          create: (context) => IdentityCardCubit(),
        ),
        BlocProvider(
          create: (context) {
            final cubit = PersonalInformationCubit();
            cubit.fetchDistricts();
            return cubit;
          },
        ),
        BlocProvider(
          create: (context) => MFastAddBankAccountCubit(),
        ),
        BlocProvider(
          create: (context) => MFastContractCollaboratorCubit(),
        ),
      ],
      child: this,
    );
  }
}

class _MFastAccountIdentificationPageState extends State<MFastAccountIdentificationPage> {
  late final TransformerPageController _pageController;
  late final IndexController _pageIndexController;
  int currentIndex = 0;

  @override
  Widget build(BuildContext context) {
    return WillPopScope(
      onWillPop: () async {
        if (!context.router.canPop()) {
          RedirectUtil.backToMFast();
          return false;
        }
        return true;
      },
      child: Scaffold(
        appBar: MFastSimpleAppBar(
          context: context,
          title: 'Định danh tài khoản',
          onBack: context.popRoute,
        ),
        body: BlocConsumer<UserMetaDataCubit, UserMetaDataState>(
          listener: (context, state) {
            _onListenerUserMetaData(context, state);
          },
          listenWhen: (previous, current) {
            return previous.userMetaData != current.userMetaData;
          },
          builder: (context, state) {
            return Stack(
              children: [
                Column(
                  crossAxisAlignment: CrossAxisAlignment.end,
                  children: [
                    const SizedBox(
                      height: 8,
                    ),
                    LinerStepIndicatorComponent(
                      labels: const [
                        'Xác thực\ndanh tính',
                        "Thông tin\ncá nhân",
                        'Ngân hàng\nliên kết',
                        "Hợp đồng\ndịch vụ"
                      ],
                      width: AppSize.instance.width * 0.8,
                      step: _pageController.itemCount,
                      index: _pageIndexController.index ?? 0,
                      onChangeIndex: _onChangeTab,
                    ),
                    Expanded(
                      child: TransformerPageView.children(
                        controller: _pageIndexController,
                        pageController: _pageController,
                        physics: const NeverScrollableScrollPhysics(),
                        children: [
                          MFastIdentityCardPage(
                            isDisabled: currentIndex != 0,
                            onNextPage: () {
                              _pageIndexController.next();
                            },
                          ),
                          MFastPersonalInformationPage(
                            isDisabled: currentIndex != 1,
                            onNextPage: () {
                              _pageIndexController.next();
                            },
                          ),
                          MFastAddBankingAccountPage(
                            userMetaData: state.userMetaData,
                            onNextPage: () {
                              _pageIndexController.next();
                            },
                          ),
                          MFastContractCollaboratorPage(
                            userMetaData: state.userMetaData,
                            onNextPage: () {},
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
                Visibility(
                  visible: state.status.isLoading,
                  child: const LoadingWidget.withoutText(),
                ),
              ],
            );
          },
        ),
      ),
    );
  }

  @override
  void dispose() {
    _pageController.dispose();
    _pageIndexController.dispose();
    super.dispose();
  }

  @override
  void initState() {
    super.initState();
    _pageController = TransformerPageController(itemCount: MAX_PAGE, initialPage: 0);
    _pageIndexController = IndexController();
  }

  void _onChangeTab(int index) {
    if (index > currentIndex) return;
    _pageIndexController.move(index);
    setState(() {});
  }

  void _onCheckCurrentIndex({MFastUserMetaDataModel? userMetaData}) {
    int index = AccountIdentifyStep.identifyCard.step; //0
    if (userMetaData?.ctvAgreement == true) {
      eventBus.fire(RefresshUserEventBus());
      DialogProvider.instance.showMTradeDialog(
        context: context,
        titleColor: UIColors.accentGreen,
        asset: 'ic_mtrade_mascot_announce',
        barrierDismissible: false,
        title: 'Định danh tài khoản thành công !!!',
        message: 'Chúc mừng bạn đã định danh thành công. Bấm “Về thông tin cá nhân” để tiếp tục trải nghiệm MFast. Xin cảm ơn!!!',
        positiveTitle: 'Về thông tin cá nhân',
        positiveCallback: () {
          RedirectUtil.openMFastDeepLink(MFastDeeplinkPath.openAccountInfo());
        },
      );
    } else if (userMetaData?.isBanking == true &&
        userMetaData?.isVerifiedEmail == true &&
        userMetaData?.countryIdStatus == LivenessSupportStatus.success.name) {
      index = AccountIdentifyStep.contractCollaborator.step; // 3
    } else if (userMetaData?.isVerifiedEmail == true &&
        userMetaData?.countryIdStatus == LivenessSupportStatus.success.name) {
      index = AccountIdentifyStep.addBanking.step; // 2
    } else if (userMetaData?.countryIdStatus == LivenessSupportStatus.success.name) {
      index = AccountIdentifyStep.personalInformation.step; //1
    }
    setState(() {
      currentIndex = index;
    });
    _onChangeTab(index);
  }

  void _onListenerUserMetaData(BuildContext context, UserMetaDataState state) {
    context.read<IdentityCardCubit>().initData(
          userMetaData: state.userMetaData,
        );
    context.read<PersonalInformationCubit>().initData(
          userMetaData: state.userMetaData,
        );

    _onCheckCurrentIndex(userMetaData: state.userMetaData);
  }
}
