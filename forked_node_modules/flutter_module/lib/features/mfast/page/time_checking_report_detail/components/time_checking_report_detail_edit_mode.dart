part of '../time_checking_report_detail_page.dart';

class _TimeCheckingReportDetailEditMode extends StatelessWidget {
  const _TimeCheckingReportDetailEditMode({
    super.key,
    required this.workingReports,
    required this.projectReports,
    required this.isValueChange,
    required this.reportID,
    required this.onUpdate,
  });

  final List<ReportModel> workingReports;
  final List<ReportModel> projectReports;
  final ValueNotifier<bool> isValueChange;
  final String reportID;
  final VoidCallback onUpdate;

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<TimeCheckingReportCubit, TimeCheckingReportState>(
      builder: (context, state) {
        return Stack(
          children: [
            SingleChildScrollView(
              child: Column(
                children: [
                  Visibility(
                    visible: workingReports.isNotEmpty,
                    child: Padding(
                      padding: const EdgeInsets.symmetric(horizontal: 16),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Text(
                            'Báo cáo hoạt động',
                            style: UITextStyle.semiBold.copyWith(
                              fontSize: 16,
                              color: UIColors.darkBlue,
                            ),
                          ),
                          const SizedBox(
                            height: 12,
                          ),
                          ...state.workingReportsSelected
                              .map((e) => Padding(
                                    padding: const EdgeInsets.only(bottom: 16),
                                    child: ReportItem(
                                      key: GlobalObjectKey(e.report.id),
                                      enabledRemove: false,
                                      reportField: e,
                                      type: ReportType.activeReport,
                                      onValueChange: (_) {
                                        if (!isValueChange.value) {
                                          isValueChange.value = true;
                                        }
                                      },
                                    ),
                                  ))
                              .toList(),
                        ],
                      ),
                    ),
                  ),
                  Visibility(
                    visible: state.workingReportsSelected.isNotEmpty && state.projectReportsSelected.isNotEmpty,
                    child: Container(
                      height: 4,
                      margin: const EdgeInsets.only(right: 16, left: 16, bottom: 16),
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(8),
                        color: UIColors.white,
                      ),
                    ),
                  ),
                  Visibility(
                    visible: projectReports.isNotEmpty,
                    child: Padding(
                      padding: const EdgeInsets.symmetric(horizontal: 16),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Text(
                            'Báo cáo kết quả',
                            style: UITextStyle.semiBold.copyWith(
                              fontSize: 16,
                              color: UIColors.darkBlue,
                            ),
                          ),
                          const SizedBox(
                            height: 12,
                          ),
                          ...state.projectReportsSelected.map((e) => Padding(
                                padding: const EdgeInsets.only(bottom: 16),
                                child: ReportItem(
                                  key: GlobalObjectKey(e.report.id),
                                  enabledRemove: false,
                                  reportField: e,
                                  type: ReportType.activeReport,
                                  onValueChange: (_) {
                                    if (!isValueChange.value) {
                                      isValueChange.value = true;
                                    }
                                  },
                                ),
                              )),
                        ],
                      ),
                    ),
                  ),
                  const SizedBox(height: 8),
                  Padding(
                    padding: const EdgeInsets.symmetric(horizontal: 16),
                    child: ValueListenableBuilder<bool>(
                      builder: (context, isValueChange, __) {
                        return PrimaryButton(
                          onPressed: onUpdate,
                          title: 'Cập nhật báo cáo',
                          height: 48,
                          width: double.infinity,
                          enabled: isValueChange,
                        );
                      },
                      valueListenable: isValueChange,
                    ),
                  ),
                  AppSplashButton(
                    onTap: () {
                      context.read<TimeCheckingReportDetailCubit>().changeEditMode();
                    },
                    child: Container(
                      height: 48,
                      width: 150,
                      alignment: Alignment.center,
                      child: Text(
                        'Quay lại',
                        style: UITextStyle.semiBold.copyWith(
                          fontSize: 14,
                          color: UIColors.primaryColor,
                        ),
                      ),
                    ),
                  ),
                  SizedBox(
                    height: max(24, AppSize.instance.safeBottom),
                  ),
                ],
              ),
            ),
            Visibility(
              visible: state.submitStatus.isLoading,
              child: const LoadingWidget.dark(),
            ),
          ],
        );
      },
    );
  }
}
