import 'dart:io';

import 'package:flutter_module/common/bottom_sheet/wrapper/data_wrapper.dart';
import 'package:flutter_module/models/base_model.dart';
import 'package:flutter_module/models/mfast/bank_account/general_bank_branch_model.dart';
import 'package:flutter_module/models/mfast/bank_account/general_bank_model.dart';
import 'package:flutter_module/models/mfast/bank_account/suggested_bank_model.dart';
import 'package:flutter_module/models/mfast/report/report_category.dart';
import 'package:flutter_module/models/mfast/report/report_submit_model.dart';
import 'package:flutter_module/models/mfast/report/report_submit_response_model.dart';
import 'package:flutter_module/models/mfast/time_checking/time_checking_detail_model.dart';
import 'package:flutter_module/models/mfast/time_checking/time_checking_info_wrapper_model.dart';
import 'package:flutter_module/models/mfast/time_checking/time_checking_submit_payload_model.dart';
import 'package:flutter_module/models/mfast/bank_account/bidv_bank_account_model.dart';
import 'package:flutter_module/models/mfast/bank_account/general_bank_branch_model.dart';
import 'package:flutter_module/models/mfast/bank_account/general_bank_model.dart';
import 'package:flutter_module/models/mfast/bank_account/suggested_bank_model.dart';
import 'package:flutter_module/models/mfast/user_meta_data/mfast_user_meta_data_model.dart';
import 'package:flutter_module/models/personal_setting/bank_account_model.dart';
import 'package:flutter_module/services/api/api_provider.dart';
import 'package:flutter_module/services/api/mfast/payload/mfast_add_bank_account_payload.dart';
import 'package:flutter_module/services/api/mfast/payload/time_checking_history_payload.dart';
import 'package:flutter_module/services/api/mfast/payload/time_checking_report_detail_payload.dart';

import '../../../models/mfast/time_checking/time_checking_month_model.dart';
import 'package:flutter_module/services/api/mfast/payload/mfast_get_list_province_payload.dart';
import 'package:flutter_module/services/api/mfast/payload/mfast_register_tax_payload.dart';

class MFastRepository {
  Future<BaseModel<MFastUserMetaDataModel>> getUserMetaData() {
    return ApiProvider.instance.mfast.getUserMetaData();
  }

  Future<BaseModel<bool>> updateMobilePhone({
    required String mobilePhone,
  }) {
    return ApiProvider.instance.mfast.updateMobilePhone(mobilePhone: mobilePhone);
  }

  Future<BaseModel<String>> uploadImage({
    required File file,
  }) {
    return ApiProvider.instance.mfast.uploadImage(file: file);
  }

  Future<BaseModel<MFastUserMetaDataModel>> updateUserMetaData({
    required MFastUserMetaDataModel payload,
  }) {
    return ApiProvider.instance.mfast.updateUserMetaData(payload: payload);
  }

  Future<BaseModel<List<MFastGeneralBankModel>>> getGeneralBanks() {
    return ApiProvider.instance.mfast.getGeneralBanks();
  }

  Future<BaseModel<List<MFastGeneralBankBranchModel>>> getGeneralBankBranches() {
    return ApiProvider.instance.mfast.getGeneralBankBranches();
  }

  Future<BaseModel<bool>> addBankAccount({
    required MFastAddBankAccountPayload payload,
  }) {
    return ApiProvider.instance.mfast.addBankAccount(payload: payload);
  }

  Future<BaseModel<List<DataWrapper>>> getDistricts() {
    return ApiProvider.instance.mfast.getDistricts();
  }

  Future<BaseModel<MFastSuggestedBankModel>> getMetaDataBIDV() {
    return ApiProvider.instance.mfast.getMetaDataBIDV();
  }

  Future<BaseModel<bool>> checkDuplicateEmail({
    required String email,
  }) {
    return ApiProvider.instance.mfast.checkDuplicateEmail(email: email);
  }

  Future<BaseModel<bool>> saveLogOCR({
    Map? data,
  }) {
    return ApiProvider.instance.mfast.saveLogOCR(data: data);
  }

  Future<BaseModel<List<BankAccountModel>>> getListBankAccount() {
    return ApiProvider.instance.mfast.getListBankAccount();
  }

  Future<BaseModel<bool>> setDefaultBankAccount(String ID) {
    return ApiProvider.instance.mfast.setDefaultBankAccount(ID);
  }

  Future<BaseModel<bool>> removeBankAccount(String ID) {
    return ApiProvider.instance.mfast.removeBankAccount(ID);
  }

  Future<BaseModel<List<DataWrapper>>> getListProvince(
    MFastGetListProvincePayload payload,
  ) {
    return ApiProvider.instance.mfast.getListProvince(payload);
  }

  Future<BaseModel<bool>> registerTax(MFastRegisterTaxPayload payload) {
    return ApiProvider.instance.mfast.registerTax(payload);
  }

  Future<BaseModel<MFastBIDVBankAccountModel>> getBIDVBankAccount() {
    return ApiProvider.instance.mfast.getBIDVBankAccount();
  }

  Future<BaseModel<String>> uploadImageFromFile(File? file) => ApiProvider.instance.shipper.uploadImageFromFile(file);

  Future<BaseModel<TimeCheckingWrapperModel>> getTimeCheckingHistory(TimeCheckingHistoryPayload payload) {
    return ApiProvider.instance.mfast.getTimeCheckingHistory(payload);
  }

  Future<BaseModel<bool>> timeCheckingSubmit(TimeCheckingSubmitPayload payload) {
    return ApiProvider.instance.mfast.timeCheckingSubmit(payload);
  }

  Future<BaseModel<ReportCategory>> getReportCategories(String type) {
    return ApiProvider.instance.mfast.getReportCategories(type);
  }

  Future<BaseModel<ReportSubmitResponseModel>> submitDataReport(ReportSubmitModel payload) {
    return ApiProvider.instance.mfast.submitDataReport(payload);
  }

  Future<BaseModel<TimeCheckingReportDetailModel>> getReportDetail(TimeCheckingReportDetailPayload payload) {
    return ApiProvider.instance.mfast.getReportDetail(payload);
  }
}
