import 'package:auto_route/auto_route.dart';
import 'package:ekyc/common/bloc_status.dart';
import 'package:ekyc/common/styles.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/dialogs/dialog_provider.dart';
import 'package:flutter_module/common/widgets/appbar.dart';
import 'package:flutter_module/common/widgets/loading.dart';
import 'package:flutter_module/features/personal_setting/cubit/account_visible_setting/account_visible_setting_cubit.dart';
import 'package:flutter_module/features/personal_setting/pages/account_visible_setting/items/setting_switch_item.dart';

@RoutePage()
class AccountVisibleSettingPage extends StatelessWidget implements AutoRouteWrapper {
  const AccountVisibleSettingPage({super.key});

  @override
  Widget wrappedRoute(BuildContext context) {
    return BlocProvider(
      create: (_) => AccountVisibleSettingCubit(),
      child: this,
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: MFastSimpleAppBar(
        context: context,
        title: 'Thiết lập hiển thị tài khoản',
      ),
      body: BlocListener<AccountVisibleSettingCubit, AccountVisibleSettingState>(
        listenWhen: (pre, cur) {
          return pre.updateStatus != cur.updateStatus;
        },
        listener: (context, state) {
          if (state.updateStatus.isFailure) {
            DialogProvider.instance.showMTradeErrorDialog(
              context: context,
              message: state.errorMessage,
            );
          }
        },
        child: BlocBuilder<AccountVisibleSettingCubit, AccountVisibleSettingState>(
          builder: (context, state) {
            final cubit = context.read<AccountVisibleSettingCubit>();
            if (state.status.isInitial) {
              WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
                cubit.fetchData();
              });
            }

            final data = state.settings;
            return Stack(
              children: [
                Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Padding(
                      padding: const EdgeInsets.all(16),
                      child: Text(
                        'Thông tin của bạn được hiển thị khi',
                        style: UITextStyle.regular.copyWith(
                          fontSize: 13,
                          color: UIColors.grayText,
                        ),
                      ),
                    ),
                    Expanded(
                      child: ListView.separated(
                        separatorBuilder: (_, __) => const SizedBox(
                          height: 12,
                        ),
                        itemBuilder: (context, index) {
                          final item = state.settings[index];
                          return SettingSwitchItem(
                            value: item.status == "1",
                            title: item.name ?? '',
                            subtitle: item.description ?? '',
                            onSwitchChanged: (value) => cubit.updateSetting(index, item.categoryID ?? '', value),
                          );
                        },
                        itemCount: data.length,
                      ),
                    ),
                  ],
                ),
                Visibility(
                  visible: state.status.isLoading || state.updateStatus.isLoading,
                  child: const LoadingWidget.dark(),
                ),
              ],
            );
          },
        ),
      ),
    );
  }
}
