import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bottom_sheet/bottom_sheet_provider.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/size.dart';
import 'package:flutter_module/common/utils/color_util.dart';
import 'package:flutter_module/common/widgets/appbar.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/di/get_it.dart';
import 'package:flutter_module/features/account/cubit/user/user_cubit.dart';
import 'package:flutter_module/features/personal_setting/pages/account_setting/components/countdown_delete_account_component.dart';
import 'package:flutter_module/features/personal_setting/pages/account_setting/components/delete_account_component.dart';
import 'package:flutter_module/features/personal_setting/pages/account_setting/items/account_setting_item.dart';
import 'package:flutter_module/routes/routes.gr.dart';

@RoutePage()
class AccountSettingPage extends StatelessWidget {
  const AccountSettingPage({super.key});

  @override
  Widget build(BuildContext context) {
    getItInstance.get<UserCubit>().getUserDelete();
    final data = getData(context);
    return Scaffold(
      appBar: MFastSimpleAppBar(
        context: context,
        title: 'Thiết lập tài khoản',
      ),
      body: ListView.separated(
        separatorBuilder: (_, __) => const SizedBox(
          height: 12,
        ),
        itemBuilder: (context, index) {
          return data[index];
        },
        itemCount: data.length,
      ),
    );
  }

  List<Widget> getData(BuildContext context) {
    return [
      AccountSettingItem(
        asset: 'ic_setting_account',
        title: 'Thiết lập hiển thị tài khoản',
        subtitle: 'Cho phép bạn quản lý nơi mọi người có thể tìm thấy bạn',
        onTap: () {
          context.pushRoute(const AccountVisibleSettingRoute());
          // context.pushRoute(const LoginHistoryRoute());
        },
      ),
      AccountSettingItem(
        asset: 'ic_bell_fill',
        title: 'Thiết lập thông báo',
        subtitle: 'Cho phép bật / tắt các loại thông báo của MFast được phép gửi về tài khoản của bạn',
        iconColor: ColorUtil.fromHex('#00b886'),
        onTap: () {
          context.pushRoute(const MFastNotificationSettingRoute());
        },
      ),
      AccountSettingItem(
        asset: 'ic_lock',
        title: 'Danh sách đã chặn',
        subtitle: 'Chặn và không cho phép những người này tìm thấy thông tin của bạn',
        iconColor: ColorUtil.fromHex('#f58b14'),
        onTap: () {
          context.pushRoute(const BlockUsersRoute());
        },
      ),
      BlocBuilder<UserCubit, UserState>(
        buildWhen: (previous, current) => previous.userDelete != current.userDelete,
        builder: (context, state) {
          if (state.userDelete?.requestDeleteDate != null) {
            return CountdownDeleteAccountComponent(
              dateString: state.userDelete?.requestDeleteDate,
            );
          }
          return AccountSettingItem(
            asset: 'ic_trash',
            title: 'Hủy tài khoản',
            subtitle:
                'Tài khoản sẽ được hủy sau 30 ngày kể từ lúc yêu cầu. Sau thời gian này, thông tin giao dịch, thông tin cá nhân, số dư MFast đều sẽ bị xóa và không thể khôi phục',
            onTap: () {
              _onOpenBottomDeleteAccount(context);
            },
          );
        },
      ),
    ];
  }

  _onOpenBottomDeleteAccount(BuildContext context) {
    BottomSheetProvider.instance.show(
      context,
      title: 'Hủy tài khoản',
      child: const DeleteAccountComponent(),
    );
  }
}
