import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/constants.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/features/home/cubit/selected_item/selected_item_cubit.dart';
import 'package:flutter_module/features/personal_setting/pages/personal_setting/items/rating/rating_item.dart';

import '../../../../../../models/mtrade/my_review/mentor_rating_model.dart';
import '../../../../cubit/mentor_rating/mentor_rating_cubit.dart';
import 'selected_rating_item.dart';

class DetailRatingItem extends StatelessWidget {
  const DetailRatingItem({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return BlocProvider(
      create: (_) => SelectedItemCubit()..selectItem("-1"),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Text(
            "Chi tiết đánh giá",
            style: UITextStyle.regular.copyWith(
              color: UIColors.grayText,
            ),
          ),
          const SizedBox(
            height: 8,
          ),
          BlocBuilder<SelectedItemCubit, SelectedItemState>(
            builder: (context, state) {
              return SizedBox(
                height: 32,
                child: ListView.separated(
                  shrinkWrap: true,
                  padding: EdgeInsets.zero,
                  scrollDirection: Axis.horizontal,
                  itemBuilder: (context, index) {
                    index = AppConstants.maxRating - index + 1;
                    if (index > 5) {
                      index = -1;
                    }
                    return SelectedRatingItem(
                      title: index == -1 ? "Tất cả" : "$index sao",
                      onTap: () {
                        context.read<SelectedItemCubit>().selectItem("$index");
                      },
                      isSelected: index.toString() == state.id,
                    );
                  },
                  separatorBuilder: (_, __) => const SizedBox(
                    width: 10,
                  ),
                  itemCount: 6,
                ),
              );
            },
          ),
          const SizedBox(
            height: 16,
          ),
          BlocBuilder<MentorRatingCubit, MentorRatingState>(
            builder: (context, state) {
              if (state.status.isLoading) {
                return const SizedBox(
                  height: 200,
                  child: Center(
                    child: CircularProgressIndicator(),
                  ),
                );
              }

              List<MentorRatingUserModel> data = state.data?.ratingUser ?? [];

              final id = context.select(
                (SelectedItemCubit cubit) => cubit.state.id,
              );
              if (int.parse(id) > 0) {
                data = data.where((e) => e.rating == int.parse(id)).toList();
              }

              return data.isEmpty
                  ? const EmptyRatingItem()
                  : ListView.separated(
                      shrinkWrap: true,
                      padding: EdgeInsets.zero,
                      physics: const NeverScrollableScrollPhysics(),
                      itemBuilder: (context, index) {
                        return RatingItem(
                          data: data[index],
                        );
                      },
                      separatorBuilder: (_, __) => const SizedBox(
                        height: 12,
                      ),
                      itemCount: data.length,
                    );
            },
          ),
        ],
      ),
    );
  }
}
