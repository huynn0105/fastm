import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/features/personal_setting/repository/personal_setting_repository.dart';

import '../../../../models/mtrade/my_review/mentor_rating_model.dart';

part 'mentor_rating_state.dart';

class MentorRatingCubit extends Cubit<MentorRatingState> {
  MentorRatingCubit() : super(const MentorRatingState());

  final _repository = PersonalSettingRepository();

  fetchData({bool showLoading = true}) async {
    if (showLoading) {
      emit(state.copyWith(
        status: BlocStatus.loading,
      ));
    }

    final result = await _repository.getMentorRating();

    if (result.status) {
      emit(state.copyWith(
        status: BlocStatus.success,
        data: result.data,
      ));
    } else {
      emit(state.copyWith(
        status: BlocStatus.failure,
      ));
    }
  }
}
