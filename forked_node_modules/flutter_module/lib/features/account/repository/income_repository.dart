import 'package:flutter_module/models/authentication/otp_model.dart';
import 'package:flutter_module/models/base_model.dart';
import 'package:flutter_module/models/income/check_withdraw_info_model.dart';
import 'package:flutter_module/models/income/fee_withdraw_model.dart';
import 'package:flutter_module/models/income/history_income_model.dart';
import 'package:flutter_module/models/income/statistic_income_model.dart';
import 'package:flutter_module/models/income/withdraw_info_model.dart';
import 'package:flutter_module/services/api/api_provider.dart';
import 'package:flutter_module/services/api/income/payload/export_statement_payload.dart';
import 'package:flutter_module/services/api/income/payload/get_statistice_income_payload.dart';
import 'package:flutter_module/services/api/income/payload/get_withdraw_fee_payload.dart';
import 'package:flutter_module/services/api/income/payload/history_income_payload.dart';
import 'package:flutter_module/services/api/income/payload/send_withdraw_otp_payload.dart';
import 'package:flutter_module/services/api/income/payload/submit_withdraw_payload.dart';

class IncomeRepository {
  Future<BaseModel<StatisticIncomeModel>> getStatisticeIncome(GetStatisticeIncomePayload payload) {
    return ApiProvider.instance.income.getStatisticeIncome(payload);
  }

  Future<BaseModel<bool>> exportStatement(ExportStatementPayload payload) {
    return ApiProvider.instance.income.exportStatement(payload);
  }

  Future<BaseModel<HistoryIncomeModel>> getHistoryIncome(GetHistoryIncomePayload payload) {
    return ApiProvider.instance.income.getHistoryIncome(payload);
  }

  Future<BaseModel<WithdrawInfoModel>> getWithdrawInfo() {
    return ApiProvider.instance.income.getWithdrawInfo();
  }

  Future<BaseModel<CheckWithdrawInfoModel>> checkWithdrawInfo() {
    return ApiProvider.instance.income.checkWithdrawInfo();
  }

  Future<BaseModel<FeeWithdrawModel>> getWithdrawFee(GetWithdrawFeePayload payload) {
    return ApiProvider.instance.income.getWithdrawFee(payload);
  }

  Future<BaseModel<OtpModel>> sendWithdrawOTP(SendWithdrawOTPPayload payload) {
    return ApiProvider.instance.income.sendWithdrawOTP(payload);
  }

  Future<BaseModel<bool>> submitWithdraw(SubmitWithdrawPayload payload) {
    return ApiProvider.instance.income.submitWithdraw(payload);
  }
}
