import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/features/mfast/repository/mfast_repository.dart';

part 'bank_account_detail_state.dart';

class BankAccountDetailCubit extends Cubit<BankAccountDetailState> {
  BankAccountDetailCubit() : super(const BankAccountDetailState());
  final MFastRepository _repository = MFastRepository();

  setDefaultBankAccount(String ID) async {
    emit(state.copyWith(
      status: BlocStatus.loading,
    ));
    final result = await _repository.setDefaultBankAccount(ID);
    if (result.status) {
      emit(state.copyWith(
        status: BlocStatus.success,
      ));
    } else {
      emit(state.copyWith(
        status: BlocStatus.failure,
      ));
    }
  }

  removeBankAccount(String ID) async {
    emit(state.copyWith(
      removeStatus: BlocStatus.loading,
    ));
    final result = await _repository.removeBankAccount(ID);
    if (result.status) {
      emit(state.copyWith(
        removeStatus: BlocStatus.success,
      ));
    } else {
      emit(state.copyWith(
        removeStatus: BlocStatus.failure,
      ));
    }
  }
}
