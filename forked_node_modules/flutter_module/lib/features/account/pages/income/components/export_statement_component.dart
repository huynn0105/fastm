import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bottom_sheet/bottom_sheet_provider.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/enum/income/export_statement_type.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/collect_data_view.dart';
import 'package:flutter_module/common/widgets/radio.dart';
import 'package:flutter_module/common/widgets/textfields.dart';
import 'package:flutter_module/features/account/cubit/export_statement/export_statement_cubit.dart';
import 'package:flutter_module/routes/routes.gr.dart';
import 'package:flutter_module/services/api/income/payload/export_statement_payload.dart';

class ExportStatementComponent extends StatelessWidget {
  const ExportStatementComponent({super.key});

  @override
  Widget build(BuildContext context) {
    final cubit = context.read<ExportStatementCubit>();
    return BlocBuilder<ExportStatementCubit, ExportStatementState>(
      builder: (context, state) {
        return Padding(
          padding: const EdgeInsets.all(16),
          child: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              CollectDataView(
                errorMsg: state.errorFields[ExportStatementFields.date.name],
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  children: List.generate(
                    ExportStatementType.values.length,
                    (index) {
                      final item = ExportStatementType.values[index];
                      final isSelected = item == state.type;
    
                      final child = AppSplashButton(
                        onTap: () => cubit.onTypeChanged(item),
                        child: Container(
                          height: 40,
                          alignment: Alignment.centerLeft,
                          child: IgnorePointer(
                            child: AppRadio(
                              title: item.title,
                              value: isSelected,
                            ),
                          ),
                        ),
                      );
    
                      return Column(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          child,
                          AnimatedSize(
                            alignment: Alignment.topCenter,
                            duration: const Duration(milliseconds: 400),
                            child: !(item.isCustom && state.type?.isCustom == true)
                                ? const SizedBox(
                                    width: double.infinity,
                                  )
                                : Column(
                                    mainAxisSize: MainAxisSize.min,
                                    children: [
                                      const SizedBox(
                                        height: 4,
                                      ),
                                      Row(
                                        children: [
                                          Expanded(
                                            child: AppSplashButton(
                                              onTap: () {
                                                _onShowDatePicker(
                                                  context,
                                                  title: 'Ngày bắt đầu',
                                                  initDate: state.fromDate,
                                                  onSuccess: cubit.onFromDateChanged,
                                                );
                                              },
                                              child: SizedBox(
                                                height: 40,
                                                child: IgnorePointer(
                                                  child: UITextFieldOutline(
                                                    controller: cubit.fromDateController,
                                                    readOnly: true,
                                                    prefixText: cubit.fromDateController.text.isEmpty ? null : 'Từ: ',
                                                    hintText: 'Từ dd/mm/yyyy',
                                                    contentPadding: const EdgeInsets.symmetric(horizontal: 8),
                                                  ),
                                                ),
                                              ),
                                            ),
                                          ),
                                          const SizedBox(
                                            width: 8,
                                          ),
                                          Expanded(
                                            child: AppSplashButton(
                                              onTap: () {
                                                _onShowDatePicker(
                                                  context,
                                                  title: 'Ngày kết thúc',
                                                  initDate: state.toDate,
                                                  onSuccess: cubit.onToDateChanged,
                                                );
                                              },
                                              child: SizedBox(
                                                height: 40,
                                                child: IgnorePointer(
                                                  child: UITextFieldOutline(
                                                    controller: cubit.toDateController,
                                                    readOnly: true,
                                                    prefixText: cubit.toDateController.text.isEmpty ? null : 'Đến: ',
                                                    hintText: 'Đến dd/mm/yyyy',
                                                    contentPadding: const EdgeInsets.symmetric(horizontal: 8),
                                                  ),
                                                ),
                                              ),
                                            ),
                                          ),
                                        ],
                                      ),
                                    ],
                                  ),
                          ),
                        ],
                      );
                    },
                  ),
                ),
              ),
              const SizedBox(
                height: 16,
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Text(
                    'Email nhận sao kê',
                    style: UITextStyle.regular.copyWith(
                      fontSize: 13,
                      color: UIColors.grayText,
                    ),
                  ),
                  AppSplashButton(
                    onTap: () {
                      Navigator.of(context).pop();
                      context.router.push(const UpdateBasicUserInfoRoute());
                    },
                    child: Text(
                      'Thay đổi',
                      style: UITextStyle.regular.copyWith(
                        fontSize: 13,
                        color: UIColors.primaryColor,
                      ),
                    ),
                  ),
                ],
              ),
              const SizedBox(
                height: 4,
              ),
              CollectDataView(
                errorMsg: state.errorFields[ExportStatementFields.email.name],
                child: ExportStatementContainer(
                  child: Text(
                    state.email ?? '',
                    style: UITextStyle.regular.copyWith(
                      fontSize: 14,
                      color: UIColors.defaultText,
                    ),
                  ),
                ),
              ),
              const SizedBox(
                height: 16,
              ),
              PrimaryButton(
                enabled: state.enabledNextStep,
                onPressed: () {
                  cubit.submit(
                    onSuccess: () {
                      final type = state.type;
                      Navigator.of(context).pop(
                        ExportStatementPayload(
                          email: state.email,
                          dateCtr: type?.id,
                          dateFrm: type?.isCustom == true ? cubit.fromDateController.text : null,
                          dateTo: type?.isCustom == true ? cubit.toDateController.text : null,
                        ),
                      );
                    },
                  );
                },
                width: double.infinity,
                title: 'Xuất sao kê ngay',
              ),
            ],
          ),
        );
      },
    );
  }

  _onShowDatePicker(
    BuildContext context, {
    required String title,
    required DateTime? initDate,
    required Function(DateTime) onSuccess,
  }) async {
    final result = await BottomSheetProvider.instance.showCupertinoDatePicker(
      context,
      title: title,
      initDate: initDate,
    );
    if (result is DateTime) {
      onSuccess(result);
    }
  }
}

class ExportStatementContainer extends StatelessWidget {
  const ExportStatementContainer({
    super.key,
    this.child,
  });

  final Widget? child;

  @override
  Widget build(BuildContext context) {
    return Container(
      height: 40,
      alignment: Alignment.centerLeft,
      padding: const EdgeInsets.symmetric(horizontal: 8),
      decoration: BoxDecoration(
        border: Border.all(
          color: UIColors.border,
        ),
        borderRadius: BorderRadius.circular(4),
        color: UIColors.white,
      ),
      child: child,
    );
  }
}
