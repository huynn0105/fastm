import 'package:flutter/material.dart';
import 'package:flutter_module/common/enum/income/history_income_type.dart';
import 'package:flutter_module/common/utils/format_util.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/models/income/statistic_income_model.dart';

import '../../../../../../../common/colors.dart';
import '../../../../../../../common/styles.dart';
import '../../../../../../../common/widgets/chart/donut_chart/donut_chart_controller.dart';
import '../../../../../../../common/widgets/chart/donut_chart/donut_chart_legend.dart';

class StatisticComponent extends StatelessWidget {
  const StatisticComponent({
    Key? key,
    required this.data,
    required this.chartController,
    required this.onHistoryTypeChanged,
  }) : super(key: key);

  final StatisticIncomeModel? data;
  final DonutChartController chartController;
  final Function(HistoryIncomeType type) onHistoryTypeChanged;

  @override
  Widget build(BuildContext context) {
    return Column(
      mainAxisSize: MainAxisSize.min,
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          "Thống kê thu nhập trong tháng",
          style: UITextStyle.semiBold.copyWith(
            color: UIColors.grayText,
          ),
        ),
        const SizedBox(
          height: 8,
        ),
        Container(
          width: double.infinity,
          padding: const EdgeInsets.all(16),
          decoration: BoxDecoration(
            color: UIColors.white,
            borderRadius: BorderRadius.circular(12),
          ),
          child: DonutChartLegend(
            controller: chartController,
            enableShowLoading: (data?.getTotal() ?? 0) <= 0,
            onDisplayLabel: (data) {
              return FormatUtil.currencyFormat(data.value.toInt());
            },
            onTapLabel: (index) {
              switch (index) {
                case 0:
                  onHistoryTypeChanged(HistoryIncomeType.all);
                  break;
                case 1:
                  onHistoryTypeChanged(HistoryIncomeType.taxDeduct);
                  break;
                case 2:
                  onHistoryTypeChanged(HistoryIncomeType.bankWithdrawal);
                  break;
                case 3:
                  onHistoryTypeChanged(HistoryIncomeType.payment);
                  break;
                default:
                  break;
              }
            },
            emptyBuidler: () {
              return Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  const Padding(
                    padding: EdgeInsets.symmetric(vertical: 10),
                    child: AppImage.asset(
                      asset: "ic_no_balance",
                      width: 120,
                      height: 120,
                    ),
                  ),
                  Text(
                    'Chưa phát sinh thu nhập trong tháng',
                    style: UITextStyle.regular.copyWith(
                      fontSize: 14,
                      color: UIColors.grayText,
                    ),
                  ),
                ],
              );
            },
          ),
        ),
      ],
    );
  }
}
