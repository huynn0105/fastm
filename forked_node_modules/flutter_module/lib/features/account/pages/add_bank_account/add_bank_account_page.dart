import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/bottom_sheet/bottom_sheet_provider.dart';
import 'package:flutter_module/common/bottom_sheet/wrapper/data_wrapper.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/constants.dart';
import 'package:flutter_module/common/dialogs/dialog_provider.dart';
import 'package:flutter_module/common/enum/tracking_event_type.dart';
import 'package:flutter_module/common/size.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/appbar.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/collect_data_view.dart';
import 'package:flutter_module/common/widgets/loading.dart';
import 'package:flutter_module/common/widgets/textfields.dart';
import 'package:flutter_module/di/get_it.dart';
import 'package:flutter_module/features/account/cubit/user/user_cubit.dart';
import 'package:flutter_module/features/app_cubit.dart';
import 'package:flutter_module/features/mfast/cubit/add_bank_account/mfast_add_bank_account_cubit.dart';
import 'package:flutter_module/features/mfast/page/account_identification/page/add_banking_account/components/bank_confirm_component.dart';
import 'package:flutter_module/models/mfast/user_meta_data/mfast_user_meta_data_model.dart';

@RoutePage()
class AddBankAccountPage extends StatelessWidget implements AutoRouteWrapper {
  const AddBankAccountPage({super.key});

  @override
  Widget wrappedRoute(BuildContext context) {
    return BlocProvider(
      create: (context) {
        final cubit = MFastAddBankAccountCubit();
        return cubit;
      },
      child: this,
    );
  }

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<UserCubit, UserState>(
      buildWhen: (previous, current) => previous.userMetaData != current.userMetaData,
      builder: (context, userState) {
        final userMetaData = MFastUserMetaDataModel.fromJson(userState.userMetaData?.toJson() ?? {});

        return MultiBlocListener(
          listeners: [
            BlocListener<MFastAddBankAccountCubit, MFastAddBankAccountState>(
              listenWhen: (pre, cur) {
                return pre.submitStatus != cur.submitStatus;
              },
              listener: (context, state) {
                if (state.submitStatus.isSuccess) {
                  getItInstance.get<AppCubit>().trackingEvent(event: TrackingEventType.finishAddNewBank);
                  DialogProvider.instance.showMTradeDialog(
                    asset: "ic_mtrade_mascot_success",
                    context: context,
                    titleColor: UIColors.accentGreen,
                    title: "Thành công!!!",
                    message: state.errorMessage ?? "Thêm tài khoản ngân hàng thành công.",
                    positiveTitle: "Quay lại",
                    positiveCallback: () {
                      context.popRoute(true);
                    },
                  );
                  return;
                }
                if (state.submitStatus.isFailure) {
                  DialogProvider.instance.showMTradeErrorDialog(
                    context: context,
                    message: state.errorMessage,
                  );
                  return;
                }
              },
            ),
          ],
          child: BlocBuilder<MFastAddBankAccountCubit, MFastAddBankAccountState>(
            builder: (context, state) {
              final cubit = context.read<MFastAddBankAccountCubit>();

              if (state.status.isInitial) {
                WidgetsBinding.instance.addPostFrameCallback((_) {
                  cubit.fetchData();
                });
              }

              return Scaffold(
                appBar: MFastSimpleAppBar(title: "Thêm tài khoản ngân hàng", context: context),
                body: Stack(
                  children: [
                    ListView(
                      padding: EdgeInsets.only(
                        left: 16,
                        right: 16,
                        bottom: AppSize.instance.safeBottom,
                      ),
                      children: [
                        const SizedBox(
                          height: 24,
                        ),
                        Text(
                          'Thông tin ngân hàng liên kết',
                          style: UITextStyle.medium.copyWith(),
                        ),
                        const SizedBox(
                          height: 8,
                        ),
                        Container(
                          padding: const EdgeInsets.all(16),
                          decoration: BoxDecoration(
                            color: UIColors.white,
                            borderRadius: BorderRadius.circular(8),
                          ),
                          child: Column(
                            children: [
                              Row(
                                children: [
                                  Expanded(
                                    flex: 35,
                                    child: Text(
                                      'Chủ tài khoản:',
                                      style: UITextStyle.regular.copyWith(
                                        color: UIColors.grayText,
                                      ),
                                    ),
                                  ),
                                  Expanded(
                                    flex: 65,
                                    child: Text(
                                      userMetaData.countryIdName ?? '',
                                      style: UITextStyle.semiBold,
                                    ),
                                  ),
                                ],
                              ),
                              const SizedBox(
                                height: 16,
                              ),
                              CollectDataView(
                                errorMsg: state.errorFields[AppConstants.bankAccountNumberKey],
                                child: UITextField(
                                  controller: cubit.bankAccountNumberController,
                                  labelText: 'Số tài khoản ngân hàng',
                                  labelTextStyle: UITextStyle.regular,
                                  onChanged: cubit.changeBankAccountNumber,
                                  keyboardType: TextInputType.number,
                                  inputFormatters: [
                                    FilteringTextInputFormatter.digitsOnly,
                                  ],
                                ),
                              ),
                              const SizedBox(
                                height: 16,
                              ),
                              SplashButton(
                                isDisabled: !state.enabledGeneralBank,
                                onTap: () {
                                  _onSelectGeneralBank(context);
                                },
                                child: CollectDataView(
                                  errorMsg: state.errorFields[AppConstants.generalBankKey],
                                  child: IgnorePointer(
                                    ignoring: true,
                                    child: UITextField.dropdown(
                                      controller: cubit.generalBankController,
                                      labelText: 'Tên ngân hàng',
                                      labelTextStyle: UITextStyle.regular,
                                      enable: state.enabledGeneralBank,
                                    ),
                                  ),
                                ),
                              ),
                              const SizedBox(
                                height: 16,
                              ),
                              SplashButton(
                                isDisabled: !state.enabledGeneralBankBranch,
                                onTap: () {
                                  _onSelectGeneralBankBranch(context);
                                },
                                child: CollectDataView(
                                  errorMsg: state.errorFields[AppConstants.generalBankBranchKey],
                                  child: IgnorePointer(
                                    ignoring: true,
                                    child: UITextField.dropdown(
                                      controller: cubit.generalBankBranchController,
                                      labelText: 'Chi nhánh',
                                      labelTextStyle: UITextStyle.regular,
                                      enable: state.enabledGeneralBankBranch,
                                    ),
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ),
                        const SizedBox(
                          height: 16,
                        ),
                        Row(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Text(
                              'Lưu ý:',
                              style: UITextStyle.bold.copyWith(
                                fontSize: 13,
                                color: UIColors.red,
                              ),
                            ),
                            const SizedBox(
                              width: 8,
                            ),
                            Expanded(
                              child: RichText(
                                text: TextSpan(
                                  style: UITextStyle.regular.copyWith(
                                    fontSize: 13,
                                  ),
                                  children: [
                                    const TextSpan(
                                      text: 'Thông tin chủ tài khoản ngân hàng ',
                                    ),
                                    TextSpan(
                                      text: 'phải khớp',
                                      style: UITextStyle.bold.copyWith(
                                        fontSize: 13,
                                        color: UIColors.red,
                                      ),
                                    ),
                                    const TextSpan(
                                      text: ' với thông tin cá nhân định danh trên MFast',
                                    ),
                                  ],
                                ),
                              ),
                            ),
                          ],
                        ),
                        const SizedBox(
                          height: 16,
                        ),
                        PrimaryButton(
                          onPressed: () => _onShowConfirmDialog(context, userMetaData: userMetaData),
                          enabled: state.enabledSubmit,
                          title: "Thêm tài khoản",
                        ),
                      ],
                    ),
                    Visibility(
                      visible: state.status.isLoading || state.submitStatus.isLoading,
                      child: const LoadingWidget.dark(),
                    ),
                  ],
                ),
              );
            },
          ),
        );
      },
    );
  }

  _onSelectGeneralBank(BuildContext context) async {
    FocusManager.instance.primaryFocus?.unfocus();
    final cubit = context.read<MFastAddBankAccountCubit>();
    final data = cubit.state.banks.map((e) => DataWrapper(id: e.bankName, value: e.bankName)).toList();
    final selectedID = cubit.state.selectedGeneralBank ?? '';
    final result = await BottomSheetProvider.instance.onShowSearchList(
      context,
      title: 'Tên ngân hàng',
      selectedId: selectedID,
      data: data,
    );
    if (result is DataWrapper) {
      cubit.selectBank(result.id ?? '');
    }
  }

  _onSelectGeneralBankBranch(BuildContext context) async {
    FocusManager.instance.primaryFocus?.unfocus();
    final cubit = context.read<MFastAddBankAccountCubit>();
    final branches = cubit.getGeneralBranchesByBank();
    final data = branches.map((e) => DataWrapper(id: e.branchCode, value: e.branchName)).toList();
    final selectedID = cubit.state.selectedGeneralBankBranch ?? '';
    final result = await BottomSheetProvider.instance.onShowSearchList(
      context,
      title: 'Tên chi nhánh',
      selectedId: selectedID,
      data: data,
    );
    if (result is DataWrapper) {
      cubit.selectBankBranches(result.id ?? '');
    }
  }

  _onShowConfirmDialog(BuildContext context, {MFastUserMetaDataModel? userMetaData}) async {
    FocusManager.instance.primaryFocus?.unfocus();
    final cubit = context.read<MFastAddBankAccountCubit>();
    if (!cubit.enabledSubmit()) {
      return;
    }
    DialogProvider.instance.showMTradeDialog(
      context: context,
      asset: 'ic_mtrade_mascot_happy_waiting',
      title: 'Kiểm tra lại thông tin',
      customContent: BankConfirmComponent(
        bankAccountName: userMetaData?.countryIdName ?? '',
        bankAccountNumber: cubit.bankAccountNumberController.text,
        bankName: cubit.generalBankController.text,
        bankBranchName: cubit.generalBankBranchController.text,
      ),
      positiveTitle: 'Xác nhận',
      negativeTitle: 'Huỷ bỏ',
      positiveCallback: () => _onSubmit(context, userMetaData: userMetaData),
    );
  }

  _onSubmit(BuildContext context, {MFastUserMetaDataModel? userMetaData}) async {
    final cubit = context.read<MFastAddBankAccountCubit>();
    cubit.submit(
      context: context,
      userMetaData: userMetaData,
    );
  }
}
