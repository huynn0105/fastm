import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/constants.dart';
import 'package:flutter_module/common/dialogs/dialog_provider.dart';
import 'package:flutter_module/common/enum/tracking_event_type.dart';
import 'package:flutter_module/common/size.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/appbar.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/collect_data_view.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/common/widgets/loading.dart';
import 'package:flutter_module/common/widgets/textfields.dart';
import 'package:flutter_module/di/get_it.dart';
import 'package:flutter_module/features/account/cubit/user/user_cubit.dart';
import 'package:flutter_module/features/app_cubit.dart';
import 'package:flutter_module/features/mfast/cubit/add_bank_account/mfast_add_bank_account_cubit.dart';
import 'package:flutter_module/features/mfast/page/account_identification/page/add_banking_account/components/bank_confirm_component.dart';
import 'package:flutter_module/models/mfast/user_meta_data/mfast_user_meta_data_model.dart';

@RoutePage()
class AddBIDVBankAccountPage extends StatelessWidget implements AutoRouteWrapper {
  const AddBIDVBankAccountPage({super.key});

  @override
  Widget wrappedRoute(BuildContext context) {
    return BlocProvider(
      create: (context) {
        final cubit = MFastAddBankAccountCubit();
        return cubit;
      },
      child: this,
    );
  }

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<UserCubit, UserState>(
      buildWhen: (previous, current) => previous.userMetaData != current.userMetaData,
      builder: (context, userState) {
        final userMetaData = MFastUserMetaDataModel.fromJson(userState.userMetaData?.toJson() ?? {});

        return MultiBlocListener(
          listeners: [
            BlocListener<MFastAddBankAccountCubit, MFastAddBankAccountState>(
              listenWhen: (pre, cur) {
                return pre.submitStatus != cur.submitStatus;
              },
              listener: (context, state) {
                if (state.submitStatus.isSuccess) {
                  getItInstance.get<AppCubit>().trackingEvent(event: TrackingEventType.finishAddNewBank);
                  DialogProvider.instance.showMTradeDialog(
                    asset: "ic_mtrade_mascot_success",
                    context: context,
                    titleColor: UIColors.accentGreen,
                    title: "Thành công!!!",
                    message: state.errorMessage ?? "Thêm tài khoản ngân hàng thành công.",
                    positiveTitle: "Quay lại",
                    positiveCallback: () {
                      context.popRoute(true);
                    },
                  );
                  return;
                }
                if (state.submitStatus.isFailure) {
                  DialogProvider.instance.showMTradeErrorDialog(
                    context: context,
                    message: state.errorMessage,
                  );
                  return;
                }
              },
            ),
          ],
          child: BlocBuilder<MFastAddBankAccountCubit, MFastAddBankAccountState>(
            builder: (context, state) {
              final cubit = context.read<MFastAddBankAccountCubit>();

              if (state.status.isInitial) {
                WidgetsBinding.instance.addPostFrameCallback((_) {
                  cubit.getBIDVBankAccount();
                });
              }

              Widget renderInfo(String title, String? description) {
                return Row(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Expanded(
                      flex: 35,
                      child: Text(
                        title,
                        style: UITextStyle.regular.copyWith(
                          color: UIColors.grayText,
                        ),
                      ),
                    ),
                    Expanded(
                      flex: 65,
                      child: Text(
                        description ?? "",
                        style: UITextStyle.semiBold,
                      ),
                    ),
                  ],
                );
              }

              return Scaffold(
                appBar: MFastSimpleAppBar(title: "Thêm tài khoản ngân hàng", context: context),
                body: Stack(
                  children: [
                    ListView(
                      padding: EdgeInsets.only(
                        left: 16,
                        right: 16,
                        bottom: AppSize.instance.safeBottom,
                      ),
                      children: [
                        const SizedBox(
                          height: 24,
                        ),
                        Text(
                          'Thông tin ngân hàng liên kết',
                          style: UITextStyle.medium.copyWith(),
                        ),
                        const SizedBox(
                          height: 8,
                        ),
                        Container(
                          padding: const EdgeInsets.symmetric(
                            horizontal: 16,
                            vertical: 12,
                          ),
                          decoration: BoxDecoration(
                            color: UIColors.white,
                            borderRadius: BorderRadius.circular(8),
                          ),
                          child: Column(
                            children: [
                              AppImage.network(
                                url: state.bidvBankAccount?.image ?? "",
                                width: 88,
                                height: 44,
                                fit: BoxFit.contain,
                              ),
                              const SizedBox(height: 12),
                              renderInfo("Chủ tài khoản:", state.bidvBankAccount?.fullName),
                              const SizedBox(height: 12),
                              renderInfo("Ngân hàng:", state.bidvBankAccount?.bankName),
                              const SizedBox(height: 12),
                              renderInfo("Chi nhánh:", state.bidvBankAccount?.bankBranch),
                              const SizedBox(height: 4),
                            ],
                          ),
                        ),
                        const SizedBox(
                          height: 24,
                        ),
                        Text(
                          'Số tài khoản ngân hàng',
                          style: UITextStyle.medium.copyWith(),
                        ),
                        const SizedBox(
                          height: 8,
                        ),
                        Container(
                          padding: const EdgeInsets.all(16),
                          decoration: BoxDecoration(
                            color: UIColors.white,
                            borderRadius: BorderRadius.circular(8),
                          ),
                          child: CollectDataView(
                            errorMsg: state.errorFields[AppConstants.bankAccountNumberKey],
                            child: UITextField(
                              controller: cubit.bankAccountNumberController,
                              labelText: 'Số tài khoản ngân hàng',
                              labelTextStyle: UITextStyle.regular,
                              onChanged: cubit.changeBankAccountNumber,
                              keyboardType: TextInputType.number,
                              inputFormatters: [
                                FilteringTextInputFormatter.digitsOnly,
                              ],
                            ),
                          ),
                        ),
                        const SizedBox(
                          height: 16,
                        ),
                        PrimaryButton(
                          onPressed: () => _onShowConfirmDialog(context, userMetaData: userMetaData),
                          title: "Thêm tài khoản",
                        ),
                      ],
                    ),
                    Visibility(
                      visible: state.status.isLoading || state.submitStatus.isLoading,
                      child: const LoadingWidget.dark(),
                    ),
                  ],
                ),
              );
            },
          ),
        );
      },
    );
  }

  _onShowConfirmDialog(BuildContext context, {MFastUserMetaDataModel? userMetaData}) async {
    FocusManager.instance.primaryFocus?.unfocus();
    final cubit = context.read<MFastAddBankAccountCubit>();
    if (!cubit.enabledSubmitBIDVBankAccount()) {
      return;
    }
    DialogProvider.instance.showMTradeDialog(
      context: context,
      asset: 'ic_mtrade_mascot_happy_waiting',
      title: 'Kiểm tra lại thông tin',
      customContent: BankConfirmComponent(
        bankAccountName: userMetaData?.countryIdName ?? '',
        bankAccountNumber: cubit.bankAccountNumberController.text,
        bankName: cubit.state.bidvBankAccount?.bankName ?? "",
        bankBranchName: cubit.state.bidvBankAccount?.bankBranch ?? "",
      ),
      positiveTitle: 'Xác nhận',
      negativeTitle: 'Huỷ bỏ',
      positiveCallback: () => _onSubmit(context, userMetaData: userMetaData),
    );
  }

  _onSubmit(BuildContext context, {MFastUserMetaDataModel? userMetaData}) async {
    final cubit = context.read<MFastAddBankAccountCubit>();
    cubit.submitBIDVBankAccount(
      userMetaData: userMetaData,
    );
  }
}
