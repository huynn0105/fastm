import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/app_data.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/text_util.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/common/widgets/loading.dart';
import 'package:flutter_module/features/account/pages/bank_account/children/bank_account_tab/items/bank_account_item.dart';
import 'package:flutter_module/features/account/pages/bank_account/cubit/bank_account/bank_account_cubit.dart';
import 'package:flutter_module/features/mfast/page/account_identification/page/add_banking_account/components/referral_banking_component.dart';
import 'package:flutter_module/models/personal_setting/bank_account_model.dart';
import 'package:flutter_module/routes/routes.gr.dart';

@RoutePage()
class BankAccountTabPage extends StatelessWidget {
  const BankAccountTabPage({super.key});

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<BankAccountCubit, BankAccountState>(
      builder: (context, state) {
        final isCanRemoveBankAccount =
            state.listBankAccount.where((element) => element.disabled != true || element.bankLink == true).length > 1;
        return Stack(
          children: [
            ListView(
              padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 20),
              children: [
                if (state.listBankAccount.isEmpty) ...[
                  SplashButton(
                    onTap: () {
                      _onGoToAddBank(context);
                    },
                    child: Container(
                      decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(10),
                        color: UIColors.darkBlue,
                      ),
                      padding: const EdgeInsets.all(12),
                      child: Row(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          const AppImage.asset(
                            asset: "ic_add_bank",
                            width: 32,
                            height: 32,
                          ),
                          const SizedBox(
                            width: 16,
                          ),
                          Expanded(
                              child: Row(
                            children: [
                              Expanded(
                                child: Column(
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: [
                                    Text(
                                      "Liên kết tài khoản của bạn",
                                      style: UITextStyle.semiBold.copyWith(
                                        color: UIColors.white,
                                      ),
                                    ),
                                    const SizedBox(
                                      height: 4,
                                    ),
                                    Text(
                                      "Liên kết tài khoản ngân hàng/thẻ ghi nợ của bạn để rút tiền về từ MFast",
                                      style: UITextStyle.regular.copyWith(
                                        fontSize: 13,
                                        color: UIColors.white.withOpacity(.8),
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                              const SizedBox(
                                width: 16,
                              ),
                              const AppImage.asset(
                                asset: "ic_arrow_right",
                                width: 20,
                                height: 20,
                                color: UIColors.white,
                              ),
                            ],
                          ))
                        ],
                      ),
                    ),
                  )
                ] else ...[
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Text(
                        "Tài khoản đã liên kết",
                        style: UITextStyle.regular,
                      ),
                      SplashButton(
                        onTap: () {
                          _onGoToAddBank(context);
                        },
                        child: Row(
                          children: [
                            Text(
                              "Thêm tài khoản",
                              style: UITextStyle.regular.copyWith(
                                fontSize: 13,
                                color: UIColors.primaryColor,
                              ),
                            ),
                            const SizedBox(
                              width: 4,
                            ),
                            const AppImage.asset(
                              asset: "ic_add_bank",
                              width: 24,
                              height: 24,
                              color: UIColors.primaryColor,
                            ),
                          ],
                        ),
                      )
                    ],
                  ),
                  ...List.generate(state.listBankAccount.length, (index) {
                    final item = state.listBankAccount[index];
                    return BankAccountItem(
                      item: item,
                      onTap: () {
                        _onTapBank(context, item: item, isCanRemoveBankAccount: isCanRemoveBankAccount);
                      },
                    );
                  }),
                ],
                const SizedBox(
                  height: 12,
                ),
                SplashButton(
                  onTap: () {
                    context.router.push(WebViewRoute(
                      title: 'Cách rút tiền từ ví tích lũy',
                      url: AppData.instance.appInfo.guideWithdrawMoneyUrl ?? '',
                    ));
                  },
                  borderRadius: BorderRadius.circular(8),
                  child: Container(
                    padding: const EdgeInsets.symmetric(vertical: 10, horizontal: 12),
                    decoration: BoxDecoration(
                      color: UIColors.white,
                      borderRadius: BorderRadius.circular(8),
                    ),
                    child: Row(
                      children: [
                        Expanded(
                          child: Text(
                            "Hướng dẫn rút tiền về TK ngân hàng liên kết",
                            style: UITextStyle.regular.copyWith(
                              color: UIColors.primaryColor,
                            ),
                          ),
                        ),
                        const AppImage.asset(
                          asset: "ic_arrow_right",
                          width: 20,
                          height: 20,
                          color: UIColors.primaryColor,
                        ),
                      ],
                    ),
                  ),
                ),
                if (TextUtils.isNotEmpty(state.bidvMetaData?.url))
                  ReferralBankingComponent(
                    data: state.bidvMetaData,
                  ),
              ],
            ),
            Visibility(
              visible: state.status.showLoading,
              child: const LoadingWidget.dark(),
            )
          ],
        );
      },
    );
  }

  _onGoToAddBank(BuildContext context) {
    context.pushRoute(const AddBankAccountRoute()).then((value) {
      if (value == true) {
        final cubit = context.read<BankAccountCubit>();
        cubit.getListBankAccount();
      }
    });
  }

  _onTapBank(BuildContext context, {required BankAccountModel item, required bool isCanRemoveBankAccount}) {
    if (item.disabled == true) return;
    if (item.bankLink == true) {
      context.pushRoute(const AddBIDVBankAccountRoute()).then((value) {
        if (value == true) {
          final cubit = context.read<BankAccountCubit>();
          cubit.getListBankAccount();
        }
      });
    } else {
      context
          .pushRoute(BankAccountDetailRoute(
        bankAccount: item,
        isCanRemoveBankAccount: isCanRemoveBankAccount,
      ))
          .then((value) {
        if (value == true) {
          final cubit = context.read<BankAccountCubit>();
          cubit.getListBankAccount();
        }
      });
    }
  }
}
