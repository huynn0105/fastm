import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/features/mfast/repository/mfast_repository.dart';
import 'package:flutter_module/models/mfast/bank_account/suggested_bank_model.dart';
import 'package:flutter_module/models/personal_setting/bank_account_model.dart';

part 'bank_account_state.dart';

class BankAccountCubit extends Cubit<BankAccountState> {
  BankAccountCubit() : super(const BankAccountState());

  final MFastRepository _mFastRepository = MFastRepository();

  getMetaDataBIDV() async {
    final result = await _mFastRepository.getMetaDataBIDV();

    if (result.status) {
      emit(state.copyWith(
        bidvMetaData: result.data,
      ));
    }
  }

  getListBankAccount() async {
    emit(state.copyWith(
      status: BlocStatus.loading,
    ));

    final result = await _mFastRepository.getListBankAccount();

    if (result.status) {
      emit(state.copyWith(
        status: BlocStatus.success,
        listBankAccount: result.data,
      ));
    } else {
      emit(state.copyWith(
        status: BlocStatus.failure,
      ));
    }
  }
}
