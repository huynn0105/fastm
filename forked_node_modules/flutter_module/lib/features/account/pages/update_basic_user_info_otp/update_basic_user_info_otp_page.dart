import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/constants.dart';
import 'package:flutter_module/common/dialogs/dialog_provider.dart';
import 'package:flutter_module/common/utils/text_util.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/pin_code/pin_code_component.dart';
import 'package:flutter_module/features/account/cubit/update_basic_user_info_otp/update_basic_user_info_otp_cubit.dart';

import '../../../../common/colors.dart';
import '../../../../common/widgets/images.dart';
import '../../../../common/widgets/loading.dart';

@RoutePage()
class UpdateBasicUserInfoOTPPage extends StatelessWidget implements AutoRouteWrapper {
  const UpdateBasicUserInfoOTPPage({super.key, required this.email});

  final String email;

  @override
  Widget wrappedRoute(BuildContext context) {
    return MultiBlocProvider(
      providers: [
        BlocProvider(
          create: (_) => UpdateBasicUserInfoOTPCubit(),
        ),
      ],
      child: this,
    );
  }

  @override
  Widget build(BuildContext context) {
    final cubit = context.read<UpdateBasicUserInfoOTPCubit>();
    return Scaffold(
      backgroundColor: UIColors.extraLightGray,
      body: BlocConsumer<UpdateBasicUserInfoOTPCubit, UpdateBasicUserInfoOTPState>(
        listener: (context, state) {
          if (state.completeStatus.isSuccess) {
            context.router.pop(true);
          } else if (state.completeStatus.isFailure && TextUtils.isNotEmpty(state.errorMsg)) {
            DialogProvider.instance.showErrorMsgDialog(
              context: context,
              message: state.errorMsg,
              btnTitle: 'Đóng',
            );
          }
        },
        builder: (context, state) {
          if (!state.requestedOtp) {
            cubit.requestOTP(email: email);
          }
          return Stack(
            children: [
              SafeArea(
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  children: [
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        SplashButton(
                          onTap: context.router.pop,
                          child: Container(
                            margin: const EdgeInsets.only(left: 4),
                            padding: const EdgeInsets.all(12),
                            child: const AppImage.asset(
                              asset: "ic_arrow_left",
                              width: 24,
                              height: 24,
                              color: UIColors.grayText,
                            ),
                          ),
                        ),
                        const AppImage.asset(
                          asset: "ic_academy_mfast_logo",
                          width: 116,
                          height: 32,
                        ),
                        const SizedBox(
                          width: 52,
                        )
                      ],
                    ),
                    Container(
                      margin: const EdgeInsets.all(16),
                      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 20),
                      decoration: BoxDecoration(color: UIColors.white, borderRadius: BorderRadius.circular(16)),
                      child: PinCodeComponent(
                        data: email,
                        type: PinCodeType.email,
                        allowRetryEmail: false,
                        errorMsg: state.errorFields[AppConstants.otpKey],
                        onOtpChange: cubit.otpChange,
                        countdownTime: state.otpModel?.resendTime,
                        onComplete: (code) {
                          cubit.verifyOTP(
                            email: email,
                            otpCode: code,
                            onSuccess: (phone, user) {},
                          );
                        },
                        onTapResendOption: (String option) {
                          cubit.requestOTP(email: email);
                        },
                      ),
                    ),
                  ],
                ),
              ),
              Visibility(
                visible: state.completeStatus.isLoading,
                child: const LoadingWidget.dark(),
              ),
            ],
          );
        },
      ),
    );
  }
}
