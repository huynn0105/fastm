// ignore_for_file: public_member_api_docs, sort_constructors_first
part of 'register_tax_cubit.dart';

class RegisterTaxState extends Equatable {
  const RegisterTaxState({
    this.status = BlocStatus.initial,
    this.provinceStatus = BlocStatus.initial,
    this.districtStatus = BlocStatus.initial,
    this.wardStatus = BlocStatus.initial,
    this.listProvince = const [],
    this.listDistrict = const [],
    this.listWard = const [],
    this.permanentProvinceId = '',
    this.permanentDistrictId = '',
    this.permanentWardId = '',
    this.temporaryProvinceId = '',
    this.temporaryDistrictId = '',
    this.temporaryWardId = '',
    this.errors = const {},
    this.errorMessage,
  });

  final BlocStatus status;
  final BlocStatus provinceStatus;
  final BlocStatus districtStatus;
  final BlocStatus wardStatus;
  final List<DataWrapper> listProvince;
  final List<DataWrapper> listDistrict;
  final List<DataWrapper> listWard;
  final String permanentProvinceId;
  final String permanentDistrictId;
  final String permanentWardId;
  final String temporaryProvinceId;
  final String temporaryDistrictId;
  final String temporaryWardId;
  final Map<String, String> errors;
  final String? errorMessage;
  @override
  List<Object?> get props => [
        status,
        provinceStatus,
        districtStatus,
        wardStatus,
        listProvince,
        listDistrict,
        listWard,
        permanentProvinceId,
        permanentDistrictId,
        permanentWardId,
        temporaryProvinceId,
        temporaryDistrictId,
        temporaryWardId,
        errors,
        errorMessage,
      ];

  RegisterTaxState copyWith({
    BlocStatus? status,
    BlocStatus? provinceStatus,
    BlocStatus? districtStatus,
    BlocStatus? wardStatus,
    List<DataWrapper>? listProvince,
    List<DataWrapper>? listDistrict,
    List<DataWrapper>? listWard,
    String? permanentProvinceId,
    String? permanentDistrictId,
    String? permanentWardId,
    String? temporaryProvinceId,
    String? temporaryDistrictId,
    String? temporaryWardId,
    Map<String, String>? errors,
    String? errorMessage,
  }) {
    return RegisterTaxState(
      status: status ?? this.status,
      provinceStatus: provinceStatus ?? this.provinceStatus,
      districtStatus: districtStatus ?? this.districtStatus,
      wardStatus: wardStatus ?? this.wardStatus,
      listProvince: listProvince ?? this.listProvince,
      listDistrict: listDistrict ?? this.listDistrict,
      listWard: listWard ?? this.listWard,
      permanentProvinceId: permanentProvinceId ?? this.permanentProvinceId,
      permanentDistrictId: permanentDistrictId ?? this.permanentDistrictId,
      permanentWardId: permanentWardId ?? this.permanentWardId,
      temporaryProvinceId: temporaryProvinceId ?? this.temporaryProvinceId,
      temporaryDistrictId: temporaryDistrictId ?? this.temporaryDistrictId,
      temporaryWardId: temporaryWardId ?? this.temporaryWardId,
      errors: errors ?? this.errors,
      errorMessage: errorMessage ?? this.errorMessage,
    );
  }
}
