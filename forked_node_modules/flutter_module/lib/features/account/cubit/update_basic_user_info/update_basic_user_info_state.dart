part of 'update_basic_user_info_cubit.dart';

class UpdateBasicUserInfoState extends Equatable {
  const UpdateBasicUserInfoState({
    this.status = BlocStatus.initial,
    this.errorFields = const {},
    this.errorMessage,
    this.enabledNextStep = true,
    this.gender,
    this.districtAddresses = const [],
    this.submitStatus = BlocStatus.initial,
    this.checkDupEmailStatus = BlocStatus.initial,
    this.isEmailUpdated = false,
  });

  final BlocStatus status;
  final Map<String, String> errorFields;
  final String? errorMessage;
  final bool enabledNextStep;

  ///
  final GenderType? gender;
  final List<DataWrapper> districtAddresses;
  final BlocStatus submitStatus;
  final BlocStatus checkDupEmailStatus;
  final bool isEmailUpdated;

  @override
  List<Object?> get props => [
        status,
        errorFields,
        errorMessage,
        enabledNextStep,
        gender,
        districtAddresses,
        submitStatus,
        checkDupEmailStatus,
        isEmailUpdated,
      ];

  UpdateBasicUserInfoState copyWith({
    BlocStatus? status,
    Map<String, String>? errorFields,
    String? errorMessage,
    bool? enabledNextStep,
    GenderType? gender,
    List<DataWrapper>? districtAddresses,
    BlocStatus? submitStatus,
    BlocStatus? checkDupEmailStatus,
    bool? isEmailUpdated,
  }) {
    return UpdateBasicUserInfoState(
      status: status ?? this.status,
      errorFields: errorFields ?? this.errorFields,
      enabledNextStep: enabledNextStep ?? this.enabledNextStep,
      errorMessage: errorMessage,
      gender: gender ?? this.gender,
      districtAddresses: districtAddresses ?? this.districtAddresses,
      submitStatus: submitStatus ?? this.submitStatus,
      checkDupEmailStatus: checkDupEmailStatus ?? this.checkDupEmailStatus,
      isEmailUpdated: isEmailUpdated ?? this.isEmailUpdated,
    );
  }
}

enum UpdateUserInfoField {
  gender,
  email,
  contactAddress,
  districtAddress,
}
