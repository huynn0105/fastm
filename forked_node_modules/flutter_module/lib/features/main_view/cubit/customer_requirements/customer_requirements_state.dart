part of 'customer_requirements_cubit.dart';

class CustomerRequirementsState extends Equatable {
  const CustomerRequirementsState({
    this.status = BlocStatus.initial,
    this.requirements = const [],
    this.selectedRequirement,
  });

  final BlocStatus status;
  final List<CustomerRequirementModel> requirements;
  final CustomerRequirementModel? selectedRequirement;

  @override
  List<Object?> get props => [
        status,
        requirements,
        selectedRequirement,
      ];

  CustomerRequirementsState copyWith({
    BlocStatus? status,
    List<CustomerRequirementModel>? requirements,
    CustomerRequirementModel? selectedRequirement,
    bool? clearSelectedRequirement,
  }) {
    return CustomerRequirementsState(
      status: status ?? this.status,
      requirements: requirements ?? this.requirements,
      selectedRequirement: clearSelectedRequirement == true ? null : (selectedRequirement ?? this.selectedRequirement),
    );
  }
}
