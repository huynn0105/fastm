import 'package:collection/collection.dart';
import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/enum/client/client_project_status.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/datetime_util.dart';
import 'package:flutter_module/common/utils/deeplink_handler_util.dart';
import 'package:flutter_module/common/utils/format_util.dart';
import 'package:flutter_module/common/utils/text_util.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/divider.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/di/get_it.dart';
import 'package:flutter_module/models/client/client_detail/client_project_model.dart';
import 'package:flutter_module/models/client/client_detail/project_detail_model.dart';
import 'package:flutter_module/routes/routes.dart';

class MPLProjectDetailItem extends StatelessWidget {
  const MPLProjectDetailItem({
    super.key,
    this.item,
    this.initItem,
  });

  final MPLProjectDetailModel? item;
  final ClientProjectModel? initItem;

  @override
  Widget build(BuildContext context) {
    final status = ClientProjectStatus.values.firstWhereOrNull((e) => e.code == initItem?.status);

    return ListView(
      padding: EdgeInsets.zero,
      physics: const NeverScrollableScrollPhysics(),
      shrinkWrap: true,
      children: [
        Padding(
          padding: const EdgeInsets.all(16),
          child: Container(
            decoration: BoxDecoration(
              color: UIColors.white,
              borderRadius: BorderRadius.circular(8),
            ),
            padding: const EdgeInsets.all(16),
            child: Column(
              children: [
                Row(
                  children: [
                    AppImage.network(
                      url: initItem?.iconURL ?? "",
                      width: 64,
                      height: 40,
                      fit: BoxFit.contain,
                    ),
                    const SizedBox(
                      width: 16,
                    ),
                    Expanded(
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Text(
                            "Sản phẩm",
                            style: UITextStyle.regular.copyWith(
                              color: UIColors.grayText,
                            ),
                          ),
                          Text(
                            initItem?.projectName ?? "",
                            style: UITextStyle.regular,
                          ),
                        ],
                      ),
                    )
                  ],
                ),
                const DottedDivider(
                  height: 12,
                  color: UIColors.lightGray,
                ),
                ListView.separated(
                  shrinkWrap: true,
                  physics: const NeverScrollableScrollPhysics(),
                  itemBuilder: (context, index) {
                    final it = item?.items?[index];
                    return Row(
                      children: [
                        AppImage.network(
                          url: it?.image,
                          width: 40,
                          height: 40,
                        ),
                        const SizedBox(
                          width: 12,
                        ),
                        Expanded(
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text(
                                it?.productName ?? "",
                                style: UITextStyle.regular,
                              ),
                              Row(
                                children: [
                                  Expanded(
                                    child: Text(
                                      FormatUtil.currencyDoubleFormat(TextUtils.parseDouble(it?.amount ?? '')),
                                      style: UITextStyle.regular.copyWith(
                                        fontSize: 13,
                                        color: UIColors.grayText,
                                      ),
                                    ),
                                  ),
                                  RichText(
                                    text: TextSpan(
                                      style: UITextStyle.regular.copyWith(
                                        fontSize: 13,
                                        color: UIColors.grayText,
                                      ),
                                      children: [
                                        const TextSpan(text: "Số lượng:   "),
                                        TextSpan(
                                          text: "${it?.quantity ?? 0}",
                                          style: UITextStyle.regular.copyWith(
                                            fontSize: 13,
                                          ),
                                        ),
                                      ],
                                    ),
                                  ),
                                ],
                              ),
                            ],
                          ),
                        )
                      ],
                    );
                  },
                  separatorBuilder: (context, index) {
                    return const DottedDivider(
                      height: 12,
                      color: UIColors.lightGray,
                      indent: 52,
                    );
                  },
                  itemCount: item?.items?.length ?? 0,
                ),
                const DottedDivider(
                  height: 12,
                  color: UIColors.lightGray,
                ),
                Row(
                  children: [
                    Expanded(
                      child: Text(
                        "Tổng ${item?.items?.length ?? 0} sản phẩm",
                        style: UITextStyle.regular.copyWith(
                          fontSize: 13,
                          color: UIColors.grayText,
                        ),
                      ),
                    ),
                    RichText(
                      text: TextSpan(
                        style: UITextStyle.regular.copyWith(
                          fontSize: 13,
                          color: UIColors.grayText,
                        ),
                        children: [
                          const TextSpan(text: "Thành tiền:   "),
                          TextSpan(
                            text: FormatUtil.currencyDoubleFormat(TextUtils.parseDouble(item?.totalAmount ?? '')),
                            style: UITextStyle.semiBold.copyWith(
                              fontSize: 13,
                              color: UIColors.red,
                            ),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
                const DottedDivider(
                  height: 12,
                  color: UIColors.lightGray,
                ),
                ItemValueRow(
                  title: "Trạng thái",
                  value: initItem?.statusText ?? "",
                  isBold: true,
                  valueColor: status?.color ?? UIColors.boolText,
                ),
                const SizedBox(
                  height: 6,
                ),
                ItemValueRow(
                  title: "Ghi chú",
                  value: item?.lastProcessText ?? "---",
                ),
                const SizedBox(
                  height: 6,
                ),
                ItemValueRow(
                  title: "Vào lúc",
                  value: DateTimeUtil.getNumberDayBetween(
                    initItem?.updatedDate ?? '',
                    forceShowDateFormat: (duration) {
                      if (duration.inDays > 3) {
                        return DateTimeFormat.ddMMyyyy;
                      }
                      return null;
                    },
                  ),
                ),
              ],
            ),
          ),
        ),
        if (TextUtils.isNotEmpty(item?.webviewURL))
          Center(
            child: SplashButton(
              onTap: () {
                _onTapMore(context, url: item?.webviewURL);
              },
              child: Row(
                mainAxisSize: MainAxisSize.min,
                children: [
                  Text(
                    "Xem chi tiết",
                    style: UITextStyle.medium.copyWith(
                      fontSize: 16,
                      color: UIColors.primaryColor,
                    ),
                  ),
                  const SizedBox(
                    width: 4,
                  ),
                  const AppImage.asset(
                    asset: "ic_arrow_long_right",
                    width: 28,
                    height: 28,
                  ),
                ],
              ),
            ),
          ),
        const SizedBox(
          height: 12,
        ),
      ],
    );
  }

  _onTapMore(BuildContext context, {String? url}) {
    if (url == null || !TextUtils.isDeeplink(url)) return;
    final paths = DeepLinkHandlerUtil.decodeURL(url);
    final params = paths["params"] ?? {};
    getItInstance.get<AppRouter>().pushNamed(params["path"]);
  }
}

class ItemValue extends StatelessWidget {
  const ItemValue({
    super.key,
    this.title = "",
    this.value = "",
    this.subValue,
    this.isBold = false,
    this.valueColor = UIColors.boolText,
  });

  final String title;
  final String value;
  final String? subValue;
  final bool isBold;
  final Color valueColor;

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          title,
          style: UITextStyle.regular.copyWith(
            fontSize: 13,
            color: UIColors.grayText,
          ),
        ),
        const SizedBox(
          height: 2,
        ),
        RichText(
          text: TextSpan(
            style: (isBold ? UITextStyle.bold : UITextStyle.regular).copyWith(color: valueColor),
            children: [
              TextSpan(text: value),
              if (subValue != null)
                TextSpan(
                  text: "\n$subValue",
                  style: UITextStyle.regular,
                ),
            ],
          ),
        )
      ],
    );
  }
}

class ItemValueRow extends StatelessWidget {
  const ItemValueRow({
    super.key,
    this.title = "",
    this.value = "",
    this.subValue,
    this.isBold = false,
    this.valueColor = UIColors.boolText,
  });

  final String title;
  final String value;
  final String? subValue;
  final bool isBold;
  final Color valueColor;

  @override
  Widget build(BuildContext context) {
    return Row(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Expanded(
          flex: 35,
          child: Text(
            title,
            style: UITextStyle.regular.copyWith(
              fontSize: 13,
              color: UIColors.grayText,
            ),
          ),
        ),
        const SizedBox(
          height: 2,
        ),
        Expanded(
          flex: 65,
          child: RichText(
            text: TextSpan(
              style: (isBold ? UITextStyle.bold : UITextStyle.regular).copyWith(color: valueColor),
              children: [
                TextSpan(text: value),
                if (subValue != null)
                  TextSpan(
                    text: "\n$subValue",
                    style: UITextStyle.regular,
                  ),
              ],
            ),
          ),
        )
      ],
    );
  }
}
