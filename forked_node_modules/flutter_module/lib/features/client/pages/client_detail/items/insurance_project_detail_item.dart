import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/extension/list_extension.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/datetime_util.dart';
import 'package:flutter_module/common/utils/text_util.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/divider.dart';
import 'package:flutter_module/common/widgets/html_widget.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/models/client/client_detail/client_project_model.dart';
import 'package:flutter_module/models/client/client_detail/project_detail_model.dart';
import 'package:flutter_module/routes/routes.gr.dart';

class InsuranceProjectDetailItem extends StatelessWidget {
  const InsuranceProjectDetailItem({
    super.key,
    this.item,
    this.initItem,
  });

  final InsuranceProjectDetailModel? item;
  final ClientProjectModel? initItem;

  @override
  Widget build(BuildContext context) {
    final startDate = item?.startDate?.split(' ').getLast() ?? 'XX-YY-ZZZZ';
    final expiredDate = item?.expiredDate?.split(' ').getLast() ?? 'XX-YY-ZZZZ';

    ///
    return ListView(
      padding: EdgeInsets.zero,
      physics: const NeverScrollableScrollPhysics(),
      shrinkWrap: true,
      children: [
        Padding(
          padding: const EdgeInsets.all(16),
          child: Container(
            decoration: BoxDecoration(
              color: UIColors.white,
              borderRadius: BorderRadius.circular(8),
            ),
            padding: const EdgeInsets.all(16),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Row(
                  children: [
                    AppImage.network(
                      url: item?.iconURL ?? "",
                      width: 52,
                      height: 40,
                      fit: BoxFit.contain,
                    ),
                    const SizedBox(
                      width: 16,
                    ),
                    Expanded(
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Text(
                            "Sản phẩm",
                            style: UITextStyle.regular.copyWith(
                              color: UIColors.grayText,
                            ),
                          ),
                          Text(
                            item?.projectName ?? "",
                            style: UITextStyle.regular,
                          ),
                        ],
                      ),
                    )
                  ],
                ),
                const DottedDivider(
                  height: 12,
                  color: UIColors.lightGray,
                ),
                ItemValueRow(
                  title: "Nhà bảo hiểm:",
                  value: item?.partnerText ?? "---",
                ),
                const SizedBox(
                  height: 10,
                ),
                ItemValueRow(
                  title: "Tên chương trình:",
                  value: item?.projectName ?? "---",
                ),
                const SizedBox(
                  height: 10,
                ),
                ItemValueRow(
                  title: "Thời gian hiện lực:",
                  renderValue: HtmlWidget(
                    data: 'Từ <strong style="color: red;">$startDate</strong> đến <strong style="color: red;">$expiredDate</strong>',
                    lineHeight: 1,
                  ),
                ),
                const SizedBox(
                  height: 10,
                ),
                ItemValue(
                  title: "Quyền lợi nổi bật:",
                  renderValue: HtmlWidget.raw(
                    data: item?.desc ?? "",
                  ),
                ),
              ],
            ),
          ),
        ),
        if (TextUtils.isNotEmpty(item?.webviewURL))
          Center(
            child: SplashButton(
              onTap: () {
                _onTapMore(context, url: item?.webviewURL);
              },
              child: Row(
                mainAxisSize: MainAxisSize.min,
                children: [
                  Text(
                    "Xem chi tiết",
                    style: UITextStyle.medium.copyWith(
                      fontSize: 16,
                      color: UIColors.primaryColor,
                    ),
                  ),
                  const SizedBox(
                    width: 4,
                  ),
                  const AppImage.asset(
                    asset: "ic_arrow_long_right",
                    width: 28,
                    height: 28,
                  ),
                ],
              ),
            ),
          ),
        const SizedBox(
          height: 12,
        ),
      ],
    );
  }

  _onTapMore(BuildContext context, {String? url}) {
    if (url == null) return;
    context.pushRoute(WebViewRoute(
      title: "Chi tiết dự án",
      url: url,
    ));
  }
}

class ItemValue extends StatelessWidget {
  const ItemValue({
    super.key,
    this.title = "",
    this.value = "",
    this.subValue,
    this.isBold = false,
    this.valueColor = UIColors.boolText,
    this.renderValue,
  });

  final String title;
  final String value;
  final String? subValue;
  final bool isBold;
  final Color valueColor;
  final Widget? renderValue;

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          title,
          style: UITextStyle.regular.copyWith(
            fontSize: 13,
            color: UIColors.grayText,
          ),
        ),
        const SizedBox(
          height: 2,
        ),
        renderValue ??
            RichText(
              text: TextSpan(
                style: (isBold ? UITextStyle.bold : UITextStyle.regular).copyWith(color: valueColor),
                children: [
                  TextSpan(text: value),
                  if (subValue != null)
                    TextSpan(
                      text: "\n$subValue",
                      style: UITextStyle.regular,
                    ),
                ],
              ),
            )
      ],
    );
  }
}

class ItemValueRow extends StatelessWidget {
  const ItemValueRow({
    super.key,
    this.title = "",
    this.value = "",
    this.subValue,
    this.isBold = false,
    this.valueColor = UIColors.boolText,
    this.renderValue,
  });

  final String title;
  final String value;
  final String? subValue;
  final bool isBold;
  final Color valueColor;
  final Widget? renderValue;

  @override
  Widget build(BuildContext context) {
    return Row(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Expanded(
          flex: 35,
          child: Text(
            title,
            style: UITextStyle.regular.copyWith(
              fontSize: 13,
              color: UIColors.grayText,
            ),
          ),
        ),
        const SizedBox(
          height: 2,
        ),
        Expanded(
          flex: 65,
          child: renderValue ??
              RichText(
                text: TextSpan(
                  style: (isBold ? UITextStyle.bold : UITextStyle.regular).copyWith(color: valueColor),
                  children: [
                    TextSpan(text: value),
                    if (subValue != null)
                      TextSpan(
                        text: "\n$subValue",
                        style: UITextStyle.regular,
                      ),
                  ],
                ),
              ),
        )
      ],
    );
  }
}
