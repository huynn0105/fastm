import 'package:flutter_module/common/bottom_sheet/bottom_sheet_provider.dart';
import 'package:flutter_module/common/bottom_sheet/wrapper/data_wrapper.dart';
import 'package:flutter_module/common/size.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/collect_data_view.dart';
import 'package:flutter_module/common/widgets/textfields.dart';
import 'package:flutter_module/features/client/cubit/update_client_info/update_client_info_cubit.dart';

class UpdateClientInfoComponent extends StatelessWidget {
  const UpdateClientInfoComponent({super.key});

  @override
  Widget build(BuildContext context) {
    return BlocBuilder<UpdateClientInfoCubit, UpdateClientInfoState>(
      builder: (context, state) {
        final cubit = context.read<UpdateClientInfoCubit>();

        ///
        return Container(
          constraints: BoxConstraints(
            maxHeight: AppSize.instance.height * 0.85,
          ),
          child: ListView(
            shrinkWrap: true,
            padding: const EdgeInsets.fromLTRB(16, 16, 16, 0),
            children: [
              Visibility(
                visible: cubit.type == UpdateClientType.info,
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      'Thông tin khách hàng',
                      style: UITextStyle.regular.copyWith(
                        fontSize: 13,
                      ),
                    ),
                    const SizedBox(
                      height: 12,
                    ),
                    Container(
                      padding: const EdgeInsets.all(16),
                      decoration: BoxDecoration(
                        color: UIColors.white,
                        borderRadius: BorderRadius.circular(8),
                      ),
                      child: Column(
                        mainAxisSize: MainAxisSize.min,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          CollectDataView(
                            errorMsg: state.errorFields[UpdateClientInfoFields.fullName.name],
                            child: UITextField(
                              controller: cubit.fullNameController,
                              onChanged: cubit.onFullNameChanged,
                              hintText: '',
                              labelText: 'Họ và tên',
                              hintTextStyle: UITextStyle.regular.copyWith(
                                fontSize: 13,
                                color: UIColors.grayText,
                              ),
                              inputFormatters: [
                                LengthLimitingTextInputFormatter(250),
                              ],
                            ),
                          ),
                          const SizedBox(
                            height: 16,
                          ),
                          CollectDataView(
                            errorMsg: state.errorFields[UpdateClientInfoFields.idNumber.name],
                            child: UITextField(
                              controller: cubit.idNumberController,
                              onChanged: cubit.onIDNumberChanged,
                              hintText: '',
                              labelText: 'Số CMND/CCCD',
                              hintTextStyle: UITextStyle.regular.copyWith(
                                fontSize: 13,
                                color: UIColors.grayText,
                              ),
                              inputFormatters: [
                                LengthLimitingTextInputFormatter(12),
                                FilteringTextInputFormatter.digitsOnly,
                              ],
                            ),
                          ),
                          const SizedBox(
                            height: 16,
                          ),
                          CollectDataView(
                            errorMsg: state.errorFields[UpdateClientInfoFields.phone.name],
                            child: UITextField(
                              controller: cubit.phoneController,
                              onChanged: cubit.onPhoneChanged,
                              hintText: '',
                              labelText: 'Số điện thoại',
                              hintTextStyle: UITextStyle.regular.copyWith(
                                fontSize: 13,
                                color: UIColors.grayText,
                              ),
                              inputFormatters: [
                                LengthLimitingTextInputFormatter(10),
                                FilteringTextInputFormatter.digitsOnly,
                              ],
                            ),
                          ),
                          const SizedBox(
                            height: 16,
                          ),
                          CollectDataView(
                            errorMsg: state.errorFields[UpdateClientInfoFields.address.name],
                            child: SplashButton(
                              onTap: () => _onAddressPicker(context),
                              child: IgnorePointer(
                                child: UITextField.dropdown(
                                  controller: cubit.addressController,
                                  readOnly: true,
                                  enable: state.districts.isNotEmpty,
                                  hintText: '',
                                  labelText: 'Địa chỉ',
                                  hintTextStyle: UITextStyle.regular.copyWith(
                                    fontSize: 13,
                                    color: UIColors.grayText,
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
              Visibility(
                visible: cubit.type == UpdateClientType.note,
                child: CollectDataView(
                  errorMsg: state.errorFields[UpdateClientInfoFields.note.name],
                  child: Container(
                    padding: const EdgeInsets.symmetric(horizontal: 16),
                    decoration: BoxDecoration(
                      color: UIColors.white,
                      borderRadius: BorderRadius.circular(8),
                    ),
                    child: UITextField(
                      controller: cubit.noteController,
                      onChanged: cubit.onNoteChanged,
                      requiredField: false,
                      showBorder: false,
                      hintText: 'Thêm chú thích cho khách hàng này',
                      labelText: '',
                      minLines: 3,
                      maxLines: 5,
                      contentPadding: const EdgeInsets.symmetric(vertical: 8),
                      hintTextStyle: UITextStyle.regular.copyWith(
                        fontSize: 13,
                        color: UIColors.grayText,
                      ),
                    ),
                  ),
                ),
              ),
              const SizedBox(
                height: 16,
              ),
              PrimaryButton(
                enabled: state.enabledSubmit,
                width: double.infinity,
                onPressed: () {
                  cubit.submit(onSuccess: (payload) {
                    Navigator.of(context).pop(payload);
                  });
                },
                title: 'Cập nhật',
              ),
            ],
          ),
        );
      },
    );
  }

  _onAddressPicker(BuildContext context) async {
    final cubit = context.read<UpdateClientInfoCubit>();
    final districts = cubit.state.districts.map((e) => DataWrapper(id: e.id, value: e.value)).toList();
    final selectedDistrictCode = cubit.state.selectedDistrictCode;
    final result = await BottomSheetProvider.instance.onShowSearchList(
      context,
      title: 'Chọn địa chỉ',
      selectedId: selectedDistrictCode ?? '',
      data: districts,
    );
    if (result != null) {
      cubit.selectDistrict(result);
    }
  }
}
