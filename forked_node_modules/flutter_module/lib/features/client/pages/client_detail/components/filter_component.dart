import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/enum/client/client_tab_type.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/di/get_it.dart';
import 'package:flutter_module/features/client/cubit/client/client_cubit.dart';
import 'package:flutter_module/features/client/pages/client/mixin/client_filter_mixin.dart';
import 'package:flutter_module/models/client_data/filter_client_model.dart';

class ClientDetailFilterComponent extends StatelessWidget with ClientFilterMixin {
  const ClientDetailFilterComponent({
    super.key,
    required this.type,
    required this.onNavToTrash,
  });

  final ClientDetailType type;
  final Function() onNavToTrash;

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: Column(
        mainAxisSize: MainAxisSize.min,
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          BlocBuilder<ClientLocalCubit, ClientState>(
            builder: (context, state) {
              if (state.status.isInitial) {
                WidgetsBinding.instance.addPostFrameCallback((_) {
                  _onInitFilter(context);
                });
              }

              ///
              final renderListFilter = listFilter(context, state, ignoreTabGroup: true);
              return Column(
                mainAxisSize: MainAxisSize.min,
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Column(
                    mainAxisSize: MainAxisSize.min,
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: renderListFilter,
                  ),
                  SizedBox(
                    height: 48,
                    child: Row(
                      children: [
                        Expanded(
                          flex: 2,
                          child: AppOutlinedButton(
                            onPressed: () {
                              Navigator.of(context).pop(false);
                            },
                            borderRadius: BorderRadius.circular(24),
                            title: 'Bỏ lọc',
                          ),
                        ),
                        const SizedBox(
                          width: 16,
                        ),
                        Expanded(
                          flex: 3,
                          child: PrimaryButton(
                            onPressed: () {
                              Navigator.of(context).pop(true);
                            },
                            title: 'Lọc khách hàng',
                          ),
                        ),
                      ],
                    ),
                  ),
                  const Divider(
                    height: 32,
                  ),
                ],
              );
            },
          ),
          SplashButton(
            onTap: () {
              onNavToTrash();
              Navigator.of(context).pop();
            },
            child: Column(
              mainAxisSize: MainAxisSize.min,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Row(
                  children: [
                    Expanded(
                      child: Text(
                        'Danh sách đã bỏ qua',
                        style: UITextStyle.medium.copyWith(
                          fontSize: 16,
                          color: UIColors.defaultText,
                        ),
                      ),
                    ),
                    const SizedBox(
                      width: 4,
                    ),
                    const AppImage.asset(
                      asset: 'ic_arrow_right',
                      width: 20,
                      height: 20,
                    ),
                  ],
                ),
                const SizedBox(
                  height: 2,
                ),
                RichText(
                  text: TextSpan(
                    style: UITextStyle.regular.copyWith(
                      fontSize: 13,
                      color: UIColors.grayText,
                    ),
                    children: [
                      const TextSpan(
                        text: 'Khách hàng trong danh sách bỏ qua sẽ ',
                      ),
                      TextSpan(
                        text: 'tự động xoá sau mỗi 30 ngày',
                        style: UITextStyle.semiBold.copyWith(
                          fontSize: 13,
                          color: UIColors.darkOrange,
                        ),
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  _onInitFilter(BuildContext context) {
    final cubit = context.read<ClientLocalCubit>();
    final globalCubit = getItInstance.get<ClientGlobalCubit>();
    final globalFilter = globalCubit.state.filterClient;

    cubit.initFilters(
      data: FilterClientModel(
        data: globalFilter?.data?.where((e) => e.keyFilter == type.code).toList(),
        total: globalFilter?.total,
      ),
    );
  }
}
