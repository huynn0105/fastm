import 'package:flutter/material.dart';
import 'package:flutter_module/common/widgets/loadmore_widget.dart';
import 'package:flutter_module/features/client/pages/client_detail/components/create_sale_component.dart';
import 'package:flutter_module/features/client/pages/client_detail/components/project_waiting_history_component.dart';
import 'package:flutter_module/models/client/client_detail/client_detail_model.dart';
import '../../../../../../../common/colors.dart';
import '../items/divider_item.dart';
import '../components/attachment_component.dart';
import '../components/project_history_component.dart';
import '../components/info_components.dart';
import '../components/loan_component.dart';

class ClientDetailCard extends StatelessWidget {
  const ClientDetailCard({
    Key? key,
    required this.data,
    required this.saleActions,
    this.onRefresh,
    this.onInfoEditTap,
    this.onNoteEditTap,
    this.onAvatarEditTap,
    this.onPriorityTap,
    this.showShadowBorder = true,
    this.showInfoEditButton = true,
    this.showNoteEditButton = true,
    this.showPriorityButton = true,
    this.showMyClientTag = false,
    this.showPriorityTag = false,
    this.showTrashTag = false,
  }) : super(key: key);

  final ClientDetailModel? data;
  final Future Function()? onRefresh;
  final List<Widget> saleActions;
  final Function()? onInfoEditTap;
  final Function()? onNoteEditTap;
  final Function()? onAvatarEditTap;
  final Function(bool)? onPriorityTap;
  final bool showShadowBorder;
  final bool showInfoEditButton;
  final bool showNoteEditButton;
  final bool showPriorityButton;
  final bool showMyClientTag;
  final bool showPriorityTag;
  final bool showTrashTag;

  @override
  Widget build(BuildContext context) {
    final documents = data?.documents ?? [];
    final projects = data?.projects ?? [];
    final projectsWaiting = data?.projectsWaiting ?? [];
    final address = [data?.districtName ?? '', data?.provinceName ?? ''].where((e) => e.isNotEmpty).join(' - ');

    return Container(
      margin: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: UIColors.white,
        borderRadius: BorderRadius.circular(16),
        boxShadow: !showShadowBorder
            ? null
            : [
                BoxShadow(
                  color: UIColors.blurBackground.withOpacity(0.3),
                  spreadRadius: 1,
                  blurRadius: 3,
                ),
              ],
      ),
      child: Stack(
        fit: StackFit.expand,
        children: [
          LoadMoreWidget(
            onRefresh: onRefresh,
            child: ListView(
              physics: const ClampingScrollPhysics(),
              padding: const EdgeInsets.symmetric(horizontal: 16),
              children: [
                InfoComponent(
                  avatar: data?.avatar ?? '',
                  fullName: data?.fullName ?? '',
                  idNumber: data?.idNumber ?? '',
                  mobilePhone: data?.mobilePhone ?? '',
                  address: address,
                  isPriority: data?.getIsPriority() == true,
                  gender: data?.gender ?? '',
                  onInfoEditTap: onInfoEditTap,
                  onAvatarEditTap: onAvatarEditTap,
                  onPriorityTap: onPriorityTap,
                  showInfoEditButton: showInfoEditButton,
                  showPriorityButton: showPriorityButton,
                  showMyClientTag: showMyClientTag,
                  showPriorityTag: showPriorityTag,
                  showTrashTag: showTrashTag,
                ),
                const DividerItem(),
                LoanComponent(
                  loanFromText: data?.fromText ?? '',
                  workingTime: data?.updatedDate ?? '',
                  note: data?.note ?? '',
                  onNoteEditTap: onNoteEditTap,
                  showNoteEditButton: showNoteEditButton,
                ),
                const DividerItem(),
                AttachmentComponent(
                  data: documents,
                ),
                if (projectsWaiting.isNotEmpty) ...[
                  const DividerItem(),
                  ProjectWaitingHistoryComponent(
                    data: projectsWaiting,
                  ),
                ],
                if (projects.isNotEmpty) ...[
                  const DividerItem(),
                  ProjectHistoryComponent(
                    data: projects,
                  ),
                ],
                const SizedBox(
                  height: 100,
                ),
              ],
            ),
          ),
          const SizedBox(
            height: 100,
          ),
          Visibility(
            visible: saleActions.isNotEmpty,
            child: Align(
              alignment: Alignment.bottomCenter,
              child: CreateSaleComponent(
                children: saleActions,
              ),
            ),
          ),
        ],
      ),
    );
  }
}
