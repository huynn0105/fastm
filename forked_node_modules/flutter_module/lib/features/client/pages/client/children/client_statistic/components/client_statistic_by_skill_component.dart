import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/extension/list_extension.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/utils/format_util.dart';
import 'package:flutter_module/common/utils/text_util.dart';
import 'package:flutter_module/common/widgets/chart/donut_chart/animated_donut_chart.dart';
import 'package:flutter_module/common/widgets/chart/donut_chart/donut_chart_legend.dart';
import 'package:flutter_module/features/client/cubit/client/client_cubit.dart';
import 'package:flutter_module/features/client/cubit/statistic_by_skill/statistic_by_skill_cubit.dart';

class ClientStatisticBySkillComponent extends StatelessWidget {
  const ClientStatisticBySkillComponent({super.key});

  @override
  Widget build(BuildContext context) {
    return BlocConsumer<StatisticBySkillCubit, StatisticBySkillState>(
      listener: (context, state) {
        _onListenStateChange(context);
      },
      builder: (context, state) {
        final cubit = context.read<StatisticBySkillCubit>();
        if (cubit.state.status.isInitial) {
          WidgetsBinding.instance.addPostFrameCallback((timeStamp) {
            cubit.fetchData();
          });
        }
        return Padding(
          padding: const EdgeInsets.symmetric(
            horizontal: 16,
          ),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text(
                "Khách hàng theo nghiệp vụ bán hàng",
                style: UITextStyle.semiBold.copyWith(
                  fontSize: 18,
                ),
              ),
              const SizedBox(
                height: 8,
              ),
              Container(
                padding: const EdgeInsets.all(16),
                decoration: BoxDecoration(
                  color: UIColors.white,
                  borderRadius: BorderRadius.circular(12),
                ),
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Row(
                      children: [
                        AnimatedDonutChart(
                          controller: cubit.controller,
                          size: 108,
                          totalValue: TextUtils.parseDouble(state.statistic?.total),
                          enableDisplayTitle: true,
                          onDisplayTitle: (value) {
                            return FormatUtil.formatNumberByThousandSeparator(value, digits: 0).split(" ").valueAt(0) ?? "";
                          },
                          subtitle: FormatUtil.formatNumberByThousandSeparator(
                                      TextUtils.parseDouble(state.statistic?.total) ?? 0)
                                  .split(" ")
                                  .valueAt(1) ??
                              'người',
                        ),
                        const SizedBox(
                          width: 16,
                        ),
                        Expanded(
                          child: Column(
                            mainAxisSize: MainAxisSize.min,
                            mainAxisAlignment: MainAxisAlignment.center,
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text(
                                'Tổng khách hàng',
                                style: UITextStyle.regular.copyWith(
                                  fontSize: 14,
                                  color: UIColors.grayText,
                                ),
                              ),
                              Text(
                                "${FormatUtil.doubleFormat(TextUtils.parseDouble(state.statistic?.total ?? 0))} người",
                                style: UITextStyle.semiBold.copyWith(
                                  fontSize: 18,
                                ),
                              ),
                            ],
                          ),
                        ),
                      ],
                    ),
                    const SizedBox(
                      height: 12,
                    ),
                    Text(
                      "Phân loại theo trạng thái tham gia",
                      style: UITextStyle.regular.copyWith(
                        fontSize: 14,
                        color: UIColors.grayText,
                      ),
                    ),
                    DonutChartLegend(
                      controller: cubit.controller,
                      enableShowLoading: false,
                      padding: const EdgeInsets.only(top: 12),
                      onDisplayLabel: (section) {
                        return "${FormatUtil.doubleFormat(section.value)} ${section.unit}";
                      },
                      onTapLabel: (index) {
                        _onFilterClient(context, index: index);
                      },
                    ),
                  ],
                ),
              ),
            ],
          ),
        );
      },
    );
  }

  _onListenStateChange(BuildContext context) {
    final cubit = context.read<StatisticBySkillCubit>();
    if (cubit.state.status.isLoading) {
      cubit.controller.load();
      return;
    }
    if (cubit.state.status.isSuccess) {
      cubit.controller.show(data: cubit.getDonutChartData(), forceDelay: true);
      return;
    }
    if (cubit.state.status.isFailure) {
      cubit.controller.empty();
      return;
    }
  }

  _onFilterClient(BuildContext context, {required int index}) {
    final clientCubit = context.read<ClientGlobalCubit>();
    final cubit = context.read<StatisticBySkillCubit>();
    final item = cubit.state.statistic?.data.valueAt(index);
    clientCubit.selectStatisticItem(item);
  }
}
