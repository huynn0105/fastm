import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/event_bus/event_bus.dart';
import 'package:flutter_module/common/widgets/loadmore_widget.dart';
import 'package:flutter_module/features/client/cubit/statistic_by_date/statistic_by_date_cubit.dart';
import 'package:flutter_module/features/client/cubit/statistic_by_product/statistic_by_product_cubit.dart';
import 'package:flutter_module/features/client/cubit/statistic_by_skill/statistic_by_skill_cubit.dart';
import 'package:flutter_module/features/client/cubit/statistic_by_status/statistic_by_status_cubit.dart';
import 'package:flutter_module/features/client/pages/client/children/client_statistic/components/client_statistic_by_date_component.dart';
import 'package:flutter_module/features/client/pages/client/children/client_statistic/components/client_statistic_by_product_component.dart';
import 'package:flutter_module/features/client/pages/client/children/client_statistic/components/client_statistic_by_skill_component.dart';
import 'package:flutter_module/features/client/pages/client/children/client_statistic/components/client_statistic_by_status_component.dart';
import 'package:flutter_module/general_config.dart';

@RoutePage()
class ClientStatisticPage extends StatelessWidget implements AutoRouteWrapper {
  const ClientStatisticPage({Key? key}) : super(key: key);

  @override
  Widget wrappedRoute(BuildContext context) {
    return MultiBlocProvider(
      providers: [
        BlocProvider(
          create: (context) {
            final cubit = StatisticByStatusCubit();
            cubit.initCubit();
            return cubit;
          },
        ),
        BlocProvider(
          create: (context) {
            final cubit = StatisticByProductCubit();
            return cubit;
          },
        ),
        BlocProvider(
          create: (context) {
            final cubit = StatisticBySkillCubit();
            return cubit;
          },
        ),
        BlocProvider(
          create: (context) {
            final cubit = StatisticByDateCubit();
            return cubit;
          },
        ),
      ],
      child: this,
    );
  }

  @override
  Widget build(BuildContext context) {
    return LoadMoreWidget(
      onRefresh: () {
        List<Future> futures = [];
        futures.add(context.read<StatisticByStatusCubit>().fetchData());
        futures.add(context.read<StatisticByProductCubit>().fetchData());
        futures.add(context.read<StatisticBySkillCubit>().fetchData());
        futures.add(context.read<StatisticByDateCubit>().fetchData());
        eventBus.fire(RefreshGlobalClientFilterEventBus());
        return Future.wait(futures);
      },
      child: ListView(
        children: const [
          ClientStatisticByDateComponent(),
          SizedBox(
            height: 32,
          ),
          ClientStatisticByStatusComponent(),
          SizedBox(
            height: 32,
          ),
          ClientStatisticByProductComponent(),
          SizedBox(
            height: 32,
          ),
          ClientStatisticBySkillComponent(),
          SizedBox(
            height: 100,
          ),
        ],
      ),
    );
  }
}
