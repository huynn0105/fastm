
import 'package:flutter/material.dart';
import 'package:flutter_module/common/constants.dart';

import '../../../../../common/colors.dart';
import '../../../../../common/size.dart';
import '../../../../../common/styles.dart';
import '../../../../../common/widgets/buttons.dart';
import '../../../../../common/widgets/images.dart';
import '../../../../../common/widgets/animated_widget/animated_alignment.dart';
import '../items/filter_buttons.dart';

class BackdropWidget extends StatefulWidget {
  const BackdropWidget({
    super.key,
    required this.onExpanded,
    required this.onCanceled,
    required this.onFiltered,
    this.builder,
    this.child,
    this.onTapBackdrop,
    this.hasFilter = false,
  }) : assert(builder != null || child != null);

  final Widget? child;
  final Widget Function(bool isExpanded)? builder;
  final Function(bool isExpanded) onExpanded;
  final VoidCallback onCanceled;
  final VoidCallback onFiltered;
  final VoidCallback? onTapBackdrop;
  final bool hasFilter;

  @override
  State<BackdropWidget> createState() => _BackdropWidgetState();
}

class _BackdropWidgetState extends State<BackdropWidget> with TickerProviderStateMixin {
  bool isExpanded = false;

  double get minHeight => AppSize.instance.safeTop + kToolbarHeight;
  double get maxHeight => AppSize.instance.height * 0.75;

  @override
  void initState() {
    super.initState();
  }

  @override
  void dispose() {
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Stack(
      children: [
        Positioned.fill(
          child: IgnorePointer(
            ignoring: !isExpanded,
            child: GestureDetector(
              onTap: () {
                onCollapsedFilter();
                onTapBackdrop();
              },
              child: AnimatedContainer(
                duration: AppConstants.duration,
                decoration: BoxDecoration(
                  color: isExpanded ? UIColors.defaultText.withOpacity(0.88) : null,
                ),
              ),
            ),
          ),
        ),
        Column(
          children: [
            ClipRRect(
              borderRadius: const BorderRadius.only(
                bottomLeft: Radius.circular(15),
                bottomRight: Radius.circular(15),
              ),
              child: Container(
                color: UIColors.white,
                constraints: BoxConstraints(
                  minHeight: minHeight,
                  maxHeight: maxHeight,
                ),
                padding: EdgeInsets.only(
                  top: AppSize.instance.safeTop,
                ),
                child: AnimatedAlignment(
                  isExpanded: isExpanded,
                  child: Column(
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      Flexible(
                        child: widget.builder?.call(isExpanded) ?? widget.child ?? const SizedBox(),
                      ),
                      FilterButtons(
                        onCanceled: () {
                          onCollapsedFilter();
                          widget.onCanceled();
                        },
                        onFiltered: () {
                          onCollapsedFilter();
                          widget.onFiltered();
                        },
                      ),
                    ],
                  ),
                ),
              ),
            ),
            SizedBox(
              height: 28,
              width: widget.hasFilter ? 225 : 155,
              child: Stack(
                children: [
                  const Positioned.fill(
                    child: AppImage.asset(
                      asset: "ic_clipper_filter",
                      color: UIColors.white,
                      fit: BoxFit.fill,
                    ),
                  ),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      AppSplashButton(
                        onTap: () {
                          onChangedExpansion();
                          onTapBackdrop();
                        },
                        child: Row(
                          mainAxisSize: MainAxisSize.min,
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            AnimatedRotation(
                              turns: isExpanded ? 0.5 : 0,
                              duration: AppConstants.duration,
                              child: Icon(
                                Icons.arrow_downward_rounded,
                                size: 20,
                                color: widget.hasFilter ? UIColors.primaryColor : UIColors.grayText,
                              ),
                            ),
                            const SizedBox(
                              width: 5,
                            ),
                            Text(
                              widget.hasFilter ? "Đang lọc" : "Lọc nâng cao",
                              style: UITextStyle.regular.copyWith(
                                fontSize: 13,
                                color: widget.hasFilter ? UIColors.primaryColor : UIColors.grayText,
                              ),
                            ),
                          ],
                        ),
                      ),
                      if (widget.hasFilter) ...[
                        const VerticalDivider(
                          thickness: 2,
                          width: 24,
                          color: UIColors.background,
                          endIndent: 6,
                          indent: 6,
                        ),
                        AppSplashButton(
                          onTap: () {
                            widget.onCanceled();
                          },
                          child: Row(
                            mainAxisSize: MainAxisSize.min,
                            mainAxisAlignment: MainAxisAlignment.center,
                            children: [
                              Text(
                                "Bỏ lọc",
                                style: UITextStyle.regular.copyWith(
                                  fontSize: 13,
                                  color: UIColors.red,
                                ),
                              ),
                              const SizedBox(
                                width: 5,
                              ),
                              const Icon(
                                Icons.close,
                                size: 20,
                                color: UIColors.red,
                              ),
                            ],
                          ),
                        ),
                      ],
                    ],
                  ),
                ],
              ),
            ),
          ],
        ),
      ],
    );
  }

  onCollapsedFilter() {
    if (isExpanded) {
      onChangedExpansion();
    }
  }

  onTapBackdrop() {
    if (isExpanded) {
      widget.onTapBackdrop?.call();
    }
  }

  onChangedExpansion() {
    setState(() {
      isExpanded = !isExpanded;
    });
    widget.onExpanded(isExpanded);
  }
}
