import 'package:auto_route/auto_route.dart';
import 'package:extended_nested_scroll_view/extended_nested_scroll_view.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_module/common/bottom_sheet/bottom_sheet_provider.dart';
import 'package:flutter_module/common/colors.dart';
import 'package:flutter_module/common/constants.dart';
import 'package:flutter_module/common/styles.dart';
import 'package:flutter_module/common/widgets/appbar.dart';
import 'package:flutter_module/common/widgets/buttons.dart';
import 'package:flutter_module/common/widgets/images.dart';
import 'package:flutter_module/common/widgets/tabbar/tabbar.dart';
import 'package:flutter_module/features/client/cubit/ad_link_list/ad_link_list_cubit.dart';
import 'package:flutter_module/features/client/cubit/ad_link_statistic/ad_link_statistic_cubit.dart';
import 'package:flutter_module/features/client/cubit/client/client_cubit.dart';
import 'package:flutter_module/features/client/pages/ad_link/components/ad_link_guide_component.dart';
import 'package:flutter_module/features/client/pages/client/components/waiting_classify_component.dart';
import 'package:flutter_module/features/mtrade/cubit/link_brochure/mtrade_link_brochure_cubit.dart';
import 'package:flutter_module/models/client/ad_link/ad_link_model.dart';
import 'package:flutter_module/models/client_data/filter_client_model.dart';
import 'package:flutter_module/routes/routes.gr.dart';

@RoutePage()
class AdLinkPage extends StatelessWidget implements AutoRouteWrapper {
  const AdLinkPage({super.key});

  @override
  Widget wrappedRoute(BuildContext context) {
    return MultiBlocProvider(
      providers: [
        BlocProvider(
          create: (context) {
            final cubit = AdLinkListCubit();
            cubit.initCubit();
            return cubit;
          },
        ),
        BlocProvider(
          create: (context) => MTradeLinkBrochureCubit(),
        ),
        BlocProvider(
          create: (_) {
            final cubit = ClientLocalCubit();
            final appClientCubit = _.read<ClientGlobalCubit>();
            cubit.initFilters(data: FilterClientModel(total: appClientCubit.state.filterClient?.total));
            return cubit;
          },
          lazy: false,
        ),
        BlocProvider(
          create: (_) {
            final cubit = AdLinkStatisticCubit();
            return cubit;
          },
          lazy: false,
        ),
      ],
      child: this,
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: MFastSimpleAppBar(
        title: "Tiếp thị liên kết",
        context: context,
      ),
      body: ExtendedNestedScrollView(
        headerSliverBuilder: (context, innerBoxIsScrolled) {
          return [
            SliverToBoxAdapter(
              child: Container(
                height: 48,
                padding: const EdgeInsets.symmetric(
                  horizontal: 16,
                ),
                color: UIColors.white,
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    SplashButton(
                      onTap: () {
                        _onGoToCreateAdLink(context);
                      },
                      child: Row(
                        children: [
                          const AppImage.asset(
                            asset: "ic_add_affiliate",
                            width: 24,
                            height: 24,
                          ),
                          const SizedBox(
                            width: 8,
                          ),
                          Text(
                            "Thêm liên kết",
                            style: UITextStyle.medium.copyWith(
                              fontSize: 16,
                              color: UIColors.primaryColor,
                            ),
                          ),
                        ],
                      ),
                    ),
                    SplashButton(
                      onTap: () {
                        _onShowGuide(context);
                      },
                      child: Row(
                        children: [
                          Text(
                            "Tìm hiểu thêm",
                            style: UITextStyle.medium.copyWith(
                              fontSize: 16,
                              color: UIColors.primaryColor,
                            ),
                          ),
                          const SizedBox(
                            width: 8,
                          ),
                          const AppImage.asset(
                            asset: "ic_copy_ad",
                            width: 24,
                            height: 24,
                          ),
                        ],
                      ),
                    )
                  ],
                ),
              ),
            ),
            const SliverToBoxAdapter(
              child: Padding(
                padding: EdgeInsets.only(bottom: 16),
                child: WaitingClassifyComponent(
                  isHideWhenNodata: true,
                  margin: EdgeInsets.fromLTRB(16, 16, 16, 0),
                ),
              ),
            ),
          ];
        },
        body: AutoTabsRouter.tabBar(
          physics: AppConstants.physics,
          routes: const [
            AdLinkListRoute(),
            AdLinkStatisticRoute(),
          ],
          builder: (context, child, tabController) {
            return Column(
              mainAxisSize: MainAxisSize.min,
              children: [
                RoundedIndicatorTabbar(
                  controller: tabController,
                  margin: const EdgeInsets.symmetric(
                    horizontal: 63,
                  ),
                  titles: const [
                    "Danh sách",
                    "Thống kê",
                  ],
                ),
                const SizedBox(
                  height: 16,
                ),
                Expanded(
                  child: child,
                ),
              ],
            );
          },
        ),
      ),
    );
  }

  _onShowGuide(BuildContext context) {
    BottomSheetProvider.instance.show(
      context,
      title: "Hướng dẫn hữu ích",
      child: BlocProvider.value(
        value: context.read<AdLinkStatisticCubit>(),
        child: const AdLinkGuideComponent(),
      ),
    );
  }

  _onGoToCreateAdLink(BuildContext context) {
    context.pushRoute(MTradePersonalLinkSetupRoute(item: AdLinkModel())).then((value) {
      if (value == true) {
        final cubit = context.read<AdLinkListCubit>();
        cubit.getListAdLink();
      }
    });
  }
}
