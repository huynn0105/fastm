import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/common/enum/client/ad_link_tab_type.dart';
import 'package:flutter_module/features/client/repository/client_repository.dart';
import 'package:flutter_module/models/client/ad_link/ad_link_model.dart';
import 'package:flutter_module/models/client/ad_link/total_ad_link_model.dart';
import 'package:flutter_module/services/api/client/payload/get_list_ad_link_payload.dart';

part 'ad_link_list_state.dart';

class AdLinkListCubit extends Cubit<AdLinkListState> {
  AdLinkListCubit() : super(const AdLinkListState());
  final ClientRepository _repository = ClientRepository();
  GetListAdLinkPayload _payload = GetListAdLinkPayload();

  initCubit() {
    updatePayload(
      type: AdLinkTabType.total.name,
      page: 1,
    );
    getTotalLink();
  }

  getListAdLink({bool loadmore = false, showLoading = true}) async {
    if (showLoading) {
      emit(state.copyWith(
        status: BlocStatus.loading,
      ));
    }
    updatePayload(
      page: loadmore ? (_payload.page ?? 0) + 1 : 1,
    );
    final result = await _repository.getListAdLink(_payload);

    if (result.status) {
      final data = loadmore ? [...state.data, ...?result.data] : result.data;
      emit(state.copyWith(
        status: BlocStatus.success,
        data: data,
      ));
    } else {
      emit(state.copyWith(
        status: BlocStatus.failure,
      ));
    }
  }

  updatePayload({
    String? keySearch,
    String? type,
    int? page,
  }) {
    emit(state.copyWith(tabSelected: type));
    _payload = _payload.copyWith(
      keySearch: keySearch,
      type: type,
      page: page,
    );
  }

  getTotalLink() async {
    final result = await _repository.getTotalAdLink();

    if (result.status) {
      emit(state.copyWith(
        total: result.data,
      ));
    }
  }
}
