import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/features/client/repository/client_repository.dart';
import 'package:flutter_module/models/client/client_detail/client_project_model.dart';
import 'package:flutter_module/models/client/client_detail/project_detail_model.dart';
import 'package:flutter_module/services/api/client/payload/get_project_detail_payload.dart';

part 'detail_project_state.dart';

class DetailProjectCubit extends Cubit<DetailProjectState> {
  DetailProjectCubit() : super(const DetailProjectState());
  final ClientRepository _repository = ClientRepository();
  GetProjectDetailPayload _payload = GetProjectDetailPayload();

  initCubit(ClientProjectModel project) {
    _payload = _payload.copyWith(
      applicationID: project.applicationID,
      category: project.category,
    );
  }

  getDetailProject() async {
    emit(state.copyWith(
      status: BlocStatus.loading,
    ));

    final result = await _repository.getDetailProject(_payload);

    if (result.status) {
      emit(state.copyWith(
        status: BlocStatus.success,
        data: result.data,
      ));
    } else {
      emit(state.copyWith(
        status: BlocStatus.failure,
      ));
    }
  }
}
