import 'package:bloc/bloc.dart';
import 'package:equatable/equatable.dart';
import 'package:flutter_module/common/bloc_status.dart';
import 'package:flutter_module/features/mtrade/repository/mtrade_product_repository.dart';
import 'package:flutter_module/services/api/mtrade/payload/get_payment_method_url_payload.dart';

import '../../../../models/base_model.dart';
import '../../../../services/api/mtrade/payload/mtrade_pay_now_order_payload.dart';

part 'order_payment_method_state.dart';

class MTradeOrderPaymentMethodCubit extends Cubit<MTradeOrderPaymentMethodState> {
  MTradeOrderPaymentMethodCubit() : super(const MTradeOrderPaymentMethodState());

  final MTradeProductRepository _repository = MTradeProductRepository();

  getPaymentMethodUrl({
    String? wardCode,
    String? districtCode,
    String? provinceCode,
    List<OrderItems>? orderItems,
    double? totalAmount,
  }) async {
    emit(state.copyWith(status: BlocStatus.loading));
    BaseModel<String> result = await _repository.getPaymentMethodUrl(GetPaymentMethodUrlPayload(
      wardCode: wardCode,
      districtCode: districtCode,
      provinceCode: provinceCode,
      totalAmount: totalAmount,
      action: "window.flutter_inappwebview.callHandler('SELECT_PAYMENT_METHOD', data)",
      orderItems: orderItems,
    ));
    if (result.status) {
      emit(state.copyWith(status: BlocStatus.success, url: result.data));
    } else {
      emit(state.copyWith(status: BlocStatus.failure));
    }
  }
}
