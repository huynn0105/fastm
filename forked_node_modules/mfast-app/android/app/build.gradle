plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

import java.text.SimpleDateFormat

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

project.ext.envConfigFiles = [
        staging           : ".env.stag",
        production        : ".env.prod",
        develop           : ".env.dev",
]

apply from: project(':flutter_config').projectDir.getPath() + "/dotenv.gradle"

android {
    namespace "com.digipay.mfast"
    compileSdkVersion 34

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        //applicationId "com.digipay.mfast"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        resValue "string", "build_config_package", "com.digipay.mfast"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    flavorDimensions "environment"
    productFlavors {
        develop {
            dimension "environment"
            applicationId "com.digipay.mfastdev"
            versionNameSuffix "-FLUTTER-DEV-" + getDate()
        }
        staging {
            dimension "environment"
            applicationId "com.digipay.mfaststaging"
            versionNameSuffix "-FLUTTER-STAGING-" + getDate()
        }
        production {
            dimension "environment"
            applicationId "com.digipay.mfast"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    //moe
    implementation("com.moengage:moe-android-sdk:12.10.00")
    implementation("com.moengage:inbox-core:2.5.0")
    implementation("com.moengage:inapp:7.0.0")
    
    implementation("androidx.core:core-ktx:1.12.0")
    implementation("androidx.appcompat:appcompat:1.6.1")
    implementation("androidx.lifecycle:lifecycle-process:2.6.2")

    //vnpay
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.squareup.okhttp3:okhttp:4.9.2'
    implementation (name: 'merchant-1.0.25', ext: 'aar')
}

static def getDate() {
    def df = new SimpleDateFormat('HHmm.ddMMyyyy')
    df.setTimeZone(TimeZone.getTimeZone("Asia/Ho_Chi_Minh"));
    return df.format(new Date())
}
