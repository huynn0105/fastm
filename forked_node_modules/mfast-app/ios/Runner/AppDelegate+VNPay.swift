import Foundation
import UIKit
import CallAppSDK

extension AppDelegate {
    func openVNPay(vc: UIViewController,
                   url: String,
                   tmnCode: String,
                   scheme: String,
                   title: String,
                   titleColor: String,
                   beginColor: String,
                   endColor: String,
                   iconBackName: String,
                   backAlert: String,
                   isSanBox: Bool
                   ) {

        showFromVC(
            vc: vc,
            url: url,
            title: title,
            scheme: scheme,
            isSanBox: isSanBox,
            alert: backAlert,
            backAction: true,
            iconBackName: iconBackName,
            beginColor: beginColor,
            endColor: endColor,
            titleColor: titleColor,
            tmnCode: tmnCode
         )
    }

    private func showFromVC(vc: UIViewController, url: String, title: String, scheme: String, isSanBox: Bool, alert: String, backAction: Bool, iconBackName: String, beginColor: String, endColor: String, titleColor: String, tmnCode: String) {
        NotificationCenter.default.removeObserver(self, name: .sdkComplete, object: nil)
        NotificationCenter.default.addObserver(self, selector: #selector(sdkAction), name: .sdkComplete, object: nil)
        CallAppInterface.setHomeViewController(vc)
        CallAppInterface.setSchemes(scheme)
        CallAppInterface.setIsSandbox(isSanBox)
        CallAppInterface.setAppBackAlert(alert)
        CallAppInterface.setEnableBackAction(backAction)
        CallAppInterface.showPushPaymentwithPaymentURL(url, withTitle: title, iconBackName: iconBackName, beginColor: beginColor, endColor: endColor, titleColor: titleColor, tmn_code: tmnCode)
    }

    @objc func sdkAction(notification: NSNotification) {
        if notification.name == .sdkComplete {
            if let value = notification.object as? [String: Any] {
                if let actionValue = value["Action"] as? String, let result = self.vnPayResult {
                    result(actionValue)
                }
            }
        }
    }
}

extension Notification.Name {
    static let sdkComplete = Notification.Name("SDK_COMPLETED")
}
